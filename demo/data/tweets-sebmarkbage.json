["e.g. for the web to succeed we can't rely on uikit and android to fail. that's why react native etc design for a heterogeneous world.","it's subtle b/c you and me can dream of how simple a world would be in a clean-room scenario and be tempted to choose a design based on it.","designing for a world where you're going to be the only game in town is a fundamentally flawed notion. design for heterogeneous ecosystems.","yea, it's not very memory efficient atm. you'll have to expand the memory allowed by node.js","stage 0 javascript.","yes. it's complimentary to other optimizing compilers.","for full html support yea. my follow up specified that an alternative transport protocol can be used to encode it.","i should clarify: in a format that's not html since that's the only way to beat it. maybe a byte code.","i'm curious. has anyone done a html to dom parser in user space js that's faster than the browser? i doubt it but maybe there is a way.","what's up the most common phrase i hear in sf? \"get out of my uber/lyft you drunk\" never change.","in software engineering two or more implementations can disguise itself as different when they're, in practical terms, the same approach.","the next time someone presents an architecture idea, ask how does it perform in the presence of existing code that doesn't play into it?","if you can't use react native in js, you should try out . it's like react for java for android.","* unless you're in a react native, react art or react vr environment.","for right now, i'd only use a css-in-js solution that can compile down to simple css files for html until other models are proven.","i'm excited about byte code, typed om and clonenode for making css-in-js fast w/o <style> or <link> but i'd not use experiments in prod yet.","alternative world: most client consistency caches gets be replaced by component local optimistic updates + server roundtrips.","looks like nobody is doing this. everyone is doing something like `reactdom.render(..., document.getelementbyid('root'))`","does the html component get revived on the client?","because the timing is synchronized to the component getting rendered, rather than the module getting initialized?","do you, or anyone you know, do full page server-rendering with react? i.e. use react to render <html><head><link />... etc?","i'm kind of subtweeting webvr here. enough demos. show me products. (same goes for react native btw. we're well past demo time.)","there's a point in a technology's evolution where illustrative demos aren't cool anymore. shipping polished products is cool.","it's plausible that webpack could make require.resolve behave this way but it's not atm because of sync use cases.","example use case: spin up relatively resolved modules in \"workers\" in node or on web.","where you start your cli on a random module and can safely assume that it can be packaged/compiled or just run.","additionally missing advanced features like require.resolveweak. starting to think that we need a webpack/rollup compiled node ecosystem.","the node.js ecosystem is too file path based to build optimized loading (as required by quick clis or website bundling/loading).","it's not xml and it's barely even html.","i've been mistyping pwa as persistent web apps lately. i think i'm just going to give up and call them that.","i'd recommend that when you think you need a plugin system, take a step back and design it from core principles that might form components.","i could see that about components but do plugins really form a list or are they just a set?","what's the difference between a component and a plugin?","tbh since i've been out here i haven't even seen much of that world and reacted negatively towards it. forgot its good parts.","and even more so, the rest of the world. i've come to terms with appreciating a small piece isn't dismissive to the larger.","whoa! firefox 52 has focusin/out events! we still special case focus/blur in react for those.","e.g. purecomponent is a critical piece to avoiding starvation issues with fiber. not an after thought.","scu is an escape hatch when the default \"purecomponent\" isn't enough. i wouldn't call purecomponent an escape hatch.","my biggest worry about context is if we stop using scu to support context. scu is such a critical part of react.","when are you going to merge react into web components tho?","function html({ children }) { return <div dangerouslysetinnerhtml={{ __html: children }} />; }","coincidentally it will also go into my examples of how complex/long apis doesn't work to discourage usage. :)","but we're also not 100% happy with it so trying to ensure new pieces are written decoupled.","it's not much different than how js object allocation work today. you syntactically group them into a batch.","incremental dom/ember etc. wouldn't want it to be currying. in fact, they'd want it to turn into two calls. start/end.","the big question is if jsx, the syntax, should just be a form of function call or have currying as its semantics.","the only reason react elements are objects instead of functions is the opaqueness of closures. impl detail. conceptually the same.","the thing that needs fixing isn't jsx, it's js function reflection that need fixing for react to actually be implementable this way.","react 16's boundaries handles it better on our side but you may still have unhandled rejections swallowing the original error. :(","might be an unhandled promise rejection elsewhere in your code base that swallows it.","finding myself wanting prettier built-in to github or a chrome extension that runs it on ```js ... ``` blocks.","as long as you don't put side-effects in it (such as invoking callbacks). too easy of a mistake now. even in reason-react. :/","but in this case the browser's \"component\" hasn't exposed this capability to you.","this state lives above \"your\" component, so you have to have a callback that exposes that. e.g. `props.onreverse()`","it's not a controlled component. in a controlled component \"your\" state pushes down into the controlled component.","it's part of any react component contract and we can model the solution the same way like any other hoisted state.","ultimately this is only a matter of trust. the user have opted to trust a few browser vendors with their data but not you.","redux \"global\" state is just component local state of the window component. there's another parent component above it.","thanks for coming everyone! what's the team doing the day after putting on a great react conf? landing diffs. we have work to do.","the whole set of individual libraries and tools that it takes to build a full web browser.","react native has a bottom up philosophy. chromium is starting to address this top down. very exciting. dom in wasm anyone?","there is a very interesting plausible trend coming. modularization of browser stacks. smaller reusable/replaceable pieces for new use cases.","the primitive is about streaming loading, not laziness. laziness needs to be designed.","i thought about es2015 and webassembly this time but i notice similar things all the time.","it's amazing how quickly a completely new technology gets taken for granted, and how many think that the next one never will happen.","react does. as a way to get a unique tag, across multiple package versions/realms that is not transferrable across json.","very nice indeed. did you have to make any tweaks to make this work other than just rebuilding ocamlrun from your branch?","there's no client side js api for codegen js either which would be useful to avoid parsing.","this is related to what you started on value types. doesn't feel natural in js to me when everything is globally tagged anyway.","what if your favorite ui library had explicit life-time management from wasm?","then you have to change how idiomatic js works to the root. that's not interop.","js -> rust -> js. doesn't break. all roots must be in rust.","if js gets ownership you also have to look out for cycles.","i'm mostly thinking ahead to how the module system is meant to work and how it will integrate with ecmascript's module system.","maybe i'm not enabling the right dce option. even main() { return 0; } has quite a bit of code that i'm not sure is needed.","i.e. where the code is expected to be written with this use case in mind and integrate with web loading rather than just ported.","is anyone working on a version of the emscripten toolchain that is minimal and integrates into the commonjs/module ecosystem?","and with -o2 optimizations. would be interesting to see how minimal it can get.","220kb (80kb gzip) + 200ms (on desktop) to compile. substantial but cachable. this is w/ all the compat code in emsdk. can get smaller.","next maybe i'll try to run the reference webassembly interpreter compiled to ocaml bytecode in this?","maintaining a shared upstream code base is about constant tradeoffs and adjustments. that means someone is always upset with you.","no but i have the source and build artifacts of some pretty large apps on a small ssd. :)","yup. i needed something newer from master. i should've clarified that it's not emscripten that's bloated but c/llvm toolchains.","i think this might be a good use case for web assembly. shipping cross-platform c to wasm compilers.","i'll use this tweet to link to when someone complains that the babel/webpack pipeline has too big and complex build tooling.","til you need >12gb of free disk space to install emscripten sdk. i don't have that free disk space on my laptop so i guess i can't play now.","yea. react native is by design limiting interop of life-time guarantees (serializable message passing) for that reason.","and usually js is right there in the middle. :) js/dom, js/dart, js/wasm, js/java, js/c#, js/reason, js/swift...","interestingly both java and flash used a byte code which could've had better start up perf (by avoiding full parse).","why did we use js long before jits? it was faster than a roundtrip to the server and faster than initializing small java or flash applets.","the exception is ssr, like we discussed, where you already have the app shell. more important to make content interactive.","that's already how any big app that tries does this.","in react and fiber, that means that you have a tree with less content. \"complete\" is about knowing you're ready to display.","and the async components model means that you don't even need to have the children's code loaded while rendering parents.","react is already not depth-first because of lazy evaluation. parents render first and can decide to stop e.g. pending data.","oh, and functions can have state. `react function foo() { state counter = 0; return <div onclick={() => counter++; } />}`","it's essentially just generators with fiber's scheduler and react's memoization.","`await` expects a reactelement. yields it to react fiber to render the subtree which can have a return value (new feature).","it's not. it's worse. my example is not an async function but a \"react function\". new primitive. babel plugin that shit.","kind of but very different details. incremental-dom doesn't avoid or help the cases i'm thinking we need to optimize.","jsx is explicit syntax for moving into lazy eval and await is explicit syntax to unwrap it, compiling to low-level bindings.","i'm getting pretty serious about this sugar: `react function foo() { const x = await <bar />; return <baz x={x} />; }`","react's reconciliation is not depth-first. you might be referring to the element creation. doesn't have to be.","fiber's begin/complete/commit phases are materializing into something that would be close to the would-be api.","already working on this fwiw. e.g. reason. but even for js to compile down to.","basically, the best ssr impl is a streaming html generator. the best impl for client is document.createelement.","you can send a pr to fix that issue above. :) long term reactdomserver will not consider client a primary use case.","var c = document.createelement('div'); reactdom.render(..., c); return c.innerhtml; what's your use case?","what if you shipped js to a wasm vm?","maybe the same will happen for wasm? i think the vm in a vm space is promising.","one thing i've noted is that most codebases are not asm codebases today. they're running in vms on top of asm.","@realjavascript are you referring to whole program full inference scenarios or normal per module explicit types?","@realjavascript curious to hear more about this. i've hit issues in some very esoteric edge cases but not normal usage.","*you* wouldn't but you wouldn't put it in html neither. it's about people that see this pattern and don't think about this.","all that string interpolation makes me nervous. tagged template literals would be nice: route`/${environment}/api/${mod}`","whether it's called webpack or shares its code base at all.","whether it's called webpack or shares its code base at all.","basically, all i'm saying is that whatever is the next gen packager needs an upgrade path from webpack.","no but now i see how all the use cases of twitter can easily be merged into facebook.","we need to raise the bar for what is considered quality tooling.","and that's perfectly fine. complex tools that are invisible can exist in user space outside of browsers.","i have a problem w/ complex tools == problem. server, network infra, browser and vm are complex tools.","that said, even at facebook with all of this in place, parsing/compiling is still too slow.","react fiber will aim to make dynamic `import()` the default for all components so that async is default everywhere.","create-react-app already makes require.ensure available which is how we do things at fb. matter of teaching i guess.","yup. agree. open source build tooling and default setups have failed in the react-related ecosystem.","if fb sent all modules individually, the overhead in the browser alone (ignoring network overhead) would kill perf.","does it scale tho? honestly i think 1:1 is a distraction. inlining and other compiler optimizations important.","the harder part of ssr is what the client does. i.e. how the js connects to the already rendered html.","i think we should probably build the reviving model for the client first and then the server renderer.","a tool can come out that doesn't do it \"properly\" and still gets popular enough to get traction. polyfills.","progress made but there's still push back happening i hear.","i was reminded by how many tools build on top of these stacks that daily make choices about how this will work.","i meant that towards anyone trying to push back and delay. it's going to happen one way or another regardless.","as long as everyone is happy with the forward momentum, that will probably be enough to avoid the community to fork more.","we have another feature in react fiber that can change the relative priority...","would prefer something like `(await element.prepareappend(...)).commit()`.","not sharable across duplicate modules/packages. e.g. same issue as array.isarray across realms.","it shows up in virtual dom libraries and many other cases. creating a solid pattern matching/brand checking mechanism for js is important.","not with webgl iirc? react vr had to compromise as a result.","i have traces showing chrome out performing other browsers in active mode fwiw.","...but not slow if you treat your js cycles well.","i'd encourage you to do the same. thank a browser engineer for the thing you didn't have to work around or could remove the work around for.","thinking about writing a browser appreciation post of all the little improvements i've noticed as a lib author but don't get much attention.","with fiber, we'll likely want to build a system that warns for any long running event.","+ we've spent the time building a system that lets you use active events w/o jank.","+ it is still a really new spec that other browsers have only recently been interested in.","yea. combine this technique with sw codegen cache you can have larger files with much faster star up.","yea but harder if you don't have direct access to event listeners. we could do that in a react in a minor to preserve compat.","supposedly. we'll see how far they can push it and i'm not sure the css property is even enough for our use cases.","but even with source code encoding you can get faster parse/compile.","that example isn't actually faster at parse. only faster because we use bytecode encoding after.","the argument passed to the callback in firefox isn't vsync time but technically spec compliant. the chrome one more useful.","they have a css property for that use case. i guess you'll have to use some feature detection to know if that's enough.","only if you listen to one of those events. facebook does on all surfaces for reasons. fiber will help.","but the platform is far from done and we need to continue to innovate in user land.","the platform could implement similar hooks though so excited about new ideas it might spawn for standards.","we now have the creator of inferno, the creator of react virtualized, the two creators of redux, and the greatest contributor ever to react.","it has been really great to have in the office for the past two weeks. i'm really excited about what he'll bring to react!","optimism driven development is the notion that, regardless of starting point a, you can get to target b using enough optimism and momentum.","you're not allowed to use tools not sanctioned by the w3c apparently. you're supposed to just .","the dx is crap but the result of coupling compiler and client yields better ux results.","that's why we need extensible web. expose the lower level primitives and iterate. standardize community results in small incremental steps.","if you think that the standard server solution won't get it right straight away, why would you think the client is any different?","if the \"web platform\" had a compiler and deployment mechanism we would have transcended many problems. out-of-the-box needs end-to-end.","if there was only one, would you remember which of the two possible signatures it had? :)","big websites already have some systems around this so just unifying on existing solutions would be a good start.","imo, it's not complex enough. e.g. other aot compilers much more complex, but it is hidden and better encapsulated.","the first render tends to warm up a bunch of lazily compiled code, which a larger tree can benefit from when it scales.","typescript/flow. they can track precise types and ask for clarifying cast. like any other coercion.","yes, if they're kept here. restrictions on moving capital out of certain countries is not uncommon.","fun fact: a majority of react is not the diffing/component model. it's polyfills for events. seems like an opportunity for standardization.","i'm more curious what the spec says it should be, by design, rather than if there are current browser bugs.","the interesting thing to me is what pattern wins. per feature packages or composite libs like this/lodash with dce.","i think that combinators like <x><y /></x> can lead to more approachable models than <view modea=\"x\" modeb=\"y\" /> or <xy />.","did you need that extra dom node to solve a css layout problem? feel good about it. clever hacks don't ship apps. clear layout models does.","that said, for parity, we'll likely rewrite the react js server renderer since we can't use existing code post-fiber.","compiler already there. just build a server environment around it. make it so. :)","such as security, context overhead, gc. multi-process has slow start up. reason -> native would help there.","as for compiling to templates, that's just a compiler and a type system like any other. we need a better js compiler.","what life-cycle? componentwillmount? moving it but that's explicitly needed by use case such as routing, logging etc.","agree about async. to be universal async needs to work on the client, i.e. fiber. what do you mean by \"precompiled\"?","if you manually or another library calls removechild in the dom it doesn't.","that's true. it's only if react handles the update that it does.","you can force it with reactdom.unstable_batchedupdates(() => { this.setstate(...); this.setstate(...); })","we compiled c++ to asm.js and shipped games with slow compile times. the reaction was web assembly, not \"ship smaller games\".","there are many ways to create inertia to build secondary value tho.","google's promotion of searchable/indexable content is pretty indirect.","e.g. ember's support/consulting value is pretty direct secondary value.","only the inertia of that community. the easier it is to move. e.g. b/c standard api.","such as cryptography, browsers, databases etc. those are easier to profit from.","my point is that nobody has designed a better model yet. can be incrementally better today but not game changing.","you should publish them as react components with inline styles. :)","we're looking into precompiling react with closure before publishing to npm. would that cause any issues for your set up?","this is all above my head at this point. i don't think there are any technical constraints. more a confusion issue.","why does the first jsx in the second render not have an implicit return?","was proposing would allow early termination. another approach is just turning all existing statements into do expr.","how would you encode `let hello = 'hi' + '\\n world'`?","thoughts on name? presumably it needs to be a static on `string` that don't collide with any other library (such as mootools).","maybe typescript claim something in statement position. goes against the quest to make statement/expressions interchangable.","you mean function foo() { <div /> } would have an implicit return in front of the jsx?","i'll probably just demo what i had in mind for react native then we can reverse from there and see how it could fit.","to reiterate... fixing a broken prod build is a one line fix. fixing broken code to enable warnings takes forever.","(this is nothing new to browser teams btw. i've been talking about this for years now but little uptake yet.)","available space dependent component rendering + async layout.","additionally, to be able to do this all asynchronously. that's what i'm working on atm. our native systems already have this.","the big thing missing in the platform roadmap, afaik, is callbacks to generate content in the middle of the layout algorithm.","smaller players like componentkit, preact, inferno, reason react bindings experiment already.","anyway. this is a huge design space that we've spent hours on. too big for twitter. :)","componentkit is another inspiration but not quite as neat but solves more issues.","but now that is getting clearer and we can start designing a nicer subset.","so drawing those boundaries between common/edge cases can be very subjective. needs design.","while breakpoint debugging react, do you...?","wait until fiber \"returns\". it might make components that returns components more common.","this will make more sense in fiber because there are more op codes. but also confusing.","createelement could be called createcallopcode. it's an instruction to tell react to invoke a subroutine.","for dx it'd be great if we could extract the source/line number from functions w/o calling it. devtools does for events.","async/custom layout but still unclear how to make that work with react while still . needs exploration.","mostly it's around language things. e.g. low-level access to the object model or eq ops. wasm gc. also js byte code.","there's a way to implement as custom component in fiber. not sure if dom attribute (placeholder) will have it built-in.","it's not safe to add siblings react components. only children to leaves since that doesn't.","however this use case actually demonstrates that our current fiber portal api is insufficient.","specifically, it used to be that update reconciliation happened in the order the roots were rendered.","to put it another way, if you always render new stuff into leaves, react won't touch it.","there's also update scheduling changes in fiber which is why the new portal api was needed.","unless you mean the use of postmessage instead of settimeout specifically. that's been a common technique a while. don't know original src.","i think sometimes it's excitement that leads to announcing vaporware, but sometimes it's legit attempts to \"develop in the open\".","usually this happens at catch up points. e.g. at the time of a big release when there is bandwidth to summarize the work of previous years.","to address this issue we need to share more data/information/discussion. in practice it's difficult for many standards/projects/platforms.","the sad reality is that devs working on big teams get sucked into high signal internal debate. public debate becomes low signal distraction.","it would conflict with a syntax that typescript uses which would be somewhat unfortunate. it's also ambiguous in some cases.","i don't know. mootools used it but i'm sure others did before.","each website is different with different target audiences. generally you want to draw such conclusions based on your usage data.","right but that approach refers to the same one in react.","how does this work? would be very interesting if we could apply.","i should check before sharing exact numbers but those are the relevant browsers that were missing features along with node <0.12.","settimeout(fn, 16/1000) the browsers that don't support it, you probably don't care about more fidelity than that.","react fiber is probably going to depend on or require that you polyfill map, set and requestanimationframe. what a time to be web dev!","preserves capabilities but api will be completely different.","we will provide a new api but know that lots of people rely on the existing one. meaning we'll provide an upgrade path for that.","the better news is that the build step ensures that all renderers don't need to pay a plugin tax.","\"create react app\" project is the public official supported way. if you look further and get a headache, that's on you. :)","i think there is space for innovative aot compilers to make a dent in this space too.","the top one shows source location, the vm stack shows bundle location (in react native that should use source maps).","only create react app and react native use our babel plugin. people will ship it to prod otherwise. :p","the bigger issue is that people deploy code to their customers in dev mode. at least it's an easy fix if discovered.","switching dev->prod is a one line change. switching from no warnings to dev will require you to fix your entire codebase.","with atomics, and importantly the futex api. the futex api can avoid the high scheduling overhead of workers. super powerful.","we always wanted to pack react into two flat files and switch on the whole file during require.","it's just that i don't think js developers don't think in those terms. if something has the same properties, it's the same.","in practice, the pattern i'm worried about isn't when they're lined up neatly as in my example but other code between them.","or if extensions can live as standalone modularity all within the \"js\" umbrella.","an alternative could've been to only allow declarative definitions in module scope. like dart.","to be fair, react native has been doing this for years.","also looking into a \"react byte code\" essentially if that fails. skip the vm's parser.","what's the point of these polls? there's no cost to us and only something to gain. better to give alternative subjects.","@javascriptjj not under a single umbrella so not equiv but i'd say 35+ for the investment.","they're all about anti-modularity. happy to see your take on it though.","i have some ideas to make the api sugar externally loaded but most new features would be difficult.","if you use a verified build tool chain like create react app you get this automatically. easy to get wrong.","react (and others) will be much slower and bigger if you don't because warnings/error messages take space. common mistake.","reminder: envify (turn env vars into constants) and minify (with dead code eliminator) your packages as best practice. verify your builds.","oh, that's just temporary to ensure a smooth upgrade path. new apis and behavior changes coming.","relay doesn't solve this since it doesn't guarantee that client data is what the server used. next.js might though.","fwiw, installing handlers isn't the reason react does eager render. we can do that lazily. it's for consistency with client data.","does preact-compat handle the nested array case?","if you remember would you mind sharing which resources you used? curious to see how we can intercept.","happy to back you up on that the web has a start up perf problem.","we keep seeing tweaked heuristics beating what is feasible to design manually at a global level.","are they necessary if you have a ml based optimization that performs very well and lets you drop down when it doesn't?","the issue with js jits specifically is that you can't break out to a manual design. there's not enough low level access.","i'm not sure. ml results are often complex enough to be opaque but worse case you can revert to manual designs.","the same goes for compiler heuristics and framework optimizations if you have a good feedback metrics. is predictability overrated?","usually i hear \"but wasm v1 was only designed for x\". yea sure but javascript(!) was only designed for y. be creative!","in react fiber this also becomes more important if you want to take advantage of the benefits.","i'm worried that technologies like rust and rx are also examples of super clean solutions but only if you know how to apply the right trick.","react has done fairly well but even with react you often see weird convoluted hacks by experienced people because they didn't know how to 2.","many technologies that seem very simple and elegant on the surface often fail because there was too much focus on 1 and not enough on 2.","there's two kind of difficult in learning technologies. 1) learning the principles and tools. 2) how to solve any given problem with it.","no. i propose a reflective api to get the value of already resolved promises.","no unfortunately i haven't seen any attempt at an optimizing compiler for wasm yet :( but the ocaml interpreter can be compiled.","the only reason to use c/c++ is the same as using bash. it's good for bootstrapping since it's available everywhere but i want out asap.","while the template can be guaranteed to be optimized it's harder to optimize all the other code that comes with it.","but i'd argue that a lot of that is easier to optimize than the js that binds to external templates.","an argument can be made that you're more encouraged to write poor unoptimizable code with jsx.","templates are just a subset. anything you can express in a template can be optimized in general purpose languages.","that's what compilers are for.","for this demo react, mobx and scu are pure overhead. immediate mode better. tradeoffs.","sounds good. native will hold web browsers accountable for unscalable parsing/compiling strategies.","you can load the \"click here to download app\" splash *really* fast using amp though.","no it's a forcing function... for you to implement it in native.","i don't know because i don't have the tooling. :) i'm mostly guessing that is the reason i'm seeing more gc time than expected.","i'm generally pretty happy about gc performance in v8. i mostly just want debug tools. the rest is up to us libraries to use it well.","and the things that can't get left to native apps.","exactly. don't you find this odd if you compare to the equivalent use case on native? browsers can fix.","each has built unique features that was important for each platform/use case. we're now trying to learn from each other.","what don't you like about componentkit and components for android specifically?","i feel really bad for never making a react benchmark for js vms. they all asked me to years ago. i even have ideas for how to design it. :(","what if the package installation strategy you use on dev machines, servers and client-side was all the same? would you rely on semver?","reflection over everything (javascript, java, c#, obj-c, some c), css selectors, most commonjs (any export available anywhere), etc.","it's remarkable how casually language and library features are built in a way that thwarts sound dead code elimination without regard.","tbh i feel like this is a big ask for generic vms like browsers. they're also fairly good already despite being suboptimal.","had a nasty gc stall bug in chrome beta. we need better gc debuggers in all browsers - surfacing generations, promotions, fragmentation etc.","for context, react polyfills things like onmouseenter. browser usage can tell us if we can remove the polyfill now.","what's the lowest version of safari that you support in your react app/website?","ofc knows this. that's the premise of the html standards as well. it's hard to continue from existing but valuable.","well i'm not talking about immediate mode. you can read retained from disk. webrender doesn't do it because it supports legacy apis.","this is what modern ui programming is. this is why css is faster than inline styles. this is why view creation needs pooling strategies.","you would have to build complex models for pooling and caching so that reuse of similar models could be quickly created.","* package optimizer (ml based).","our package optimized works on file names. meaning renames and new files (such as during a rewrite) cause suboptimal packages.","first consideration: would facebook, yahoo, google, apple etc. use it? if not, it's a broken solution.","pick some js project, new technology etc. to be positive about today. don't think too much about where those resources are diverted from.","i think that's a fair argument on the surface dangerous notion if it leads to lack of positive reinforcement, happiness and optimism.","no. it's just more consistently does it in the current order except componentwillmount before componentwillunmount.","(stack is what we call the existing react impl.)","doing subscriptions in componentwillmount is a big problem for fiber and fragile in stack. plz do it in componentdidmount if possible.","one nice feature of having polyfills in a central location is that it's easy to remove rather than if they're spread out across your code.","this year has been a good year for ye old dom. there's actually many browsers with trivial missing features that have died / started dying.","we're moving to local delegation per root so that would solve that use case too. the bigger the root, the more we can optimize.","react attaches at the shadow fragment to delegate within a shadow dom.","here's another interesting person to follow: he has been doing interesting virtual dom algorithms since the react launch.","what size project are you measuring and with which compiler transforms/optimizations enabled?","if it just works in prod then why would you choose a worse developer experience?","mainly whether react should be in the business of fixing things like controlled properties as a route towards standardizing those.","not sure. might stall for years on debating whether we should and then a few more on the api.","this premise kind of changes how i think about react's dom future proofing. it's a whole different story if you can assume stability.","some say that it will simply stay as user space and never really become native in practice.","some say html won't add new tags. custom elements will subsume the use case. ofc there's no individual authority so who knows. thoughts?","people ask me why i don't just go work for react inc. with start up funding. because i have the best access to problems right here.","the point is that code originated from people doing production work somewhere else by equivalent person outside of fb.","sometimes i think that we tend to over-focus on a self-sustaining insular ecosystem to power it all but it's really coming from below.","open source is the tip of the iceberg. building products inside fb and other companies feeds into what becomes open source projects.","of course that is still not enough for rtl languages neither. pdf.js has a rudimentary bidi algorithm though.","looks like a react.createclass and some jsx with a weird font. apparently it's true that jsx will doom humanity.","react never used images. we did use html serialization. both on main thread and in workers.","we've done all these things btw. happy to get together some time to share our findings/context.","not completely true. hhvm process model is different and likely never would've used node.js shared context anyway.","hidden components are very low pri. setstate in interactive events get high pri by default. manual override possible.","if you swap out setimmediate for addeventlistener('click', ...) you may also assume that it won't but it can.","often software projects just need a bit of optimism. i just want to say that i'm excited about perf work done by js vm teams on async/await.","how's so? it's more about the browser's assumptions. js can have synchronous dispatchevent, alert() boxes spinning.","since fiber defers work your cause may not be on the js stack anymore. just like async methods.","they're shallow because we hide the react stack. not easier to read that part but devtools integration could.","i worry about js semantics getting in the way though. such as the fact that `await foo()` isn't the same as inlining it.","since react already memoizes on the heap anyway we can reuse those data structures. we also use a pooling model.","cc any chance pausing a stack and spinning the event loop would fly? super useful on react native.","new browser api request: eventloop.spin() this was make react fiber easy to implement and solve our problems of promises always being async.","although from an implementor of react's perspective that is a big difference since it makes things difficult.","for example if we could spin the event loop deep in the stack which we can on react native for example.","imo that the biggest difference is the deferred effects. we could use the js stack if we didn't have to unwind to check input.","is it a public api bug or some third party projects relying on react internals? tough call but w/o \"hard private\" we had to. :)","there is little difference between it and first paint if you just render links and forms but ignores problems solved by client-side tools.","makes perfect sense to do it now but for react we decided to focus on fiber instead which gets things for free.","we couldn't do it when it was first brought up in react b/c not enough native impl / high fidelity polyfills.","if it is about css-layout specifically then","i don't really know how that works. too many layers of indirection in react native. replacing it with fiber.","and other libraries can inline more of their code too if it's smaller. goes both ways.","i.e. measuring any individual size of a website isn't representative of the problem which occurs at *seconds* of init time.","but thing that talked about at react-europe is the thing i'm really excited about.","i believe ember compiles away lots of theirs too. it's just that at some point it's more efficient to reuse.","closure compiler has been doing it. we have various experiments at fb at different levels. + academic research too.","the future of javascript: web assembly all the things. :p","react can server render whole documents including script tags. i *think* we escape that properly if you use react.","you made my heart skip a beat there. i thought we had an issue in react but that seems like a stretch to blame \"react\" there.","we've always had this style internally at facebook for server-side errors. they generates to employees in the ui.","and if not js, we'd just use and get it for free.","quite the contrary. it'll be awesome for all the js once we get it working!","for perf we need optimizing compilers (inlining). for the dev tools we need blackboxing support like stack traces.","react has some overhead we can fix but i disagree that is proof that big apps/sites loads fast enough by switching.","so you end up paying for it the first time the user visits. might be good for libraries like react on cdn though.","iirc, only code that was eagerly parsed or something like that. also not possible to do eagerly e.g. in sw.","native platforms will catch on, make smaller apps and seamless installs. the web needs to catch up on code loading cache and init perf.","we only get away with it because native apps have relied on being able to load so much code seamlessly that installing is a barrier.","awesome workarounds aside, let's not lose focus on that loading code is - way out of proportion - more expensive on web than on native.","i've seen linkstate getting some attention in preact. that was in react and we removed it because it wasn't used and deemed an anti-pattern.","but react-future have a bunch of other designs that change all at once.","the reason we didn't add that api to render is that it's not consistent with how you write those other ones.","never feel ashamed to be funny, happy and optimistic.","i've seen worse json parsing/traversing. sgml encoding doesn't mean it's not just data. ;)","a goal of jits was to load platform agnostic code. i think we should aot compile to multiple platforms. ios/android does.","long lived perf critical code is worth while using a different language for. i'd argue that dynamic languages aren't the right choice","my scope is tainted by my experience. in my world there's two categories: short lived dynamic ui code. long lived perf critical code.","for servers, you don't want each server to do its own optimizations on the fly. better off getting types from test runs and share.","if you account for memory usage, on low end devices and start up time for lots of new code. i can beat it with a simple interpreter.","there were goals and constraints that influenced those attempts that made them failures. such as not compromising on initial design.","i think it is more likely to become telemetry optimized based on ml algorithms on top of usage data rather than on-demand optimized.","still controversial: i'd argue that one of the lessons learned from the past two decades will be that jit compilers is a bad idea. thoughts?","fwiw i was in that world. my ms partner employer finally got me a macbook because many tools didn't work.","...don't have a native app for your os.","the interpretation is that it is kind of like refusing to use a web browser and complaining that sites...","it seems to me that the issue is a defacto standardization on *nix. kind of like the web became defacto.","i think we'd probably replace the tag model with a jsobjectref and that would be the thing that is held onto in statenode.","a possible strategy would be to implement jsc finalizers in react native that does the clean up of native views in that case.","is the goal to implement a fiber renderer for react native?","fork/copy the whole renderer. that's what we do ourselves with react native starting from 15.4.0.","the alternatives are a) if it's forkable (no state), just copy it. b) if it depends on internal state, ask us to expose a hook.","native js debuggers are not the only debuggers. we use it in react for warnings and fb for error logs etc.","have you tried to rendercomponentintosubtree? it is meant to be the way we preserve context between two subtrees.","there are several different ways we could use that api. can you explain how you intended to use it?","npm best practice is still to pull in things like isarray as separate package. lots of modules.","of course very few websites / routes have enough usage data to make that work well.","it is sad that the notion of a ui framework have to couple how packaging works because the js ecosystem lacks a decoupled one.","no. it's both. for example byte-code formats that can be compiled by frameworks and consumed by browsers.","but yes init perf for js is ridiculously poor. plenty of counter-examples showing that it doesn't have to be.","our fb team working directly with chrome has worked better (not great). i'll focus on building solutions.","for example \"big payload blobs\" is generalization that is unproven. e.g. webassembly blobs have different tradeoffs.","this is hurting the web in the long run. we're shielded from real solutions by the illusion that one exists today.","i'd go further. i think the work done so far on alternatives is insufficient and unproven. the message is premature.","i'd appreciate help testing out react 15.4.0 rc. it helps the community keep high confidence in upgrades and therefore improve update rates.","already possible to share compiled code across workers. atomic shared memory coming soon.","i anticipate everything being web assembly... maybe. there's too much focus on libraries. what matters is *your* code.","webassembly is going to change everything. i really think that this is what might \"save\" the web.","otherwise there is nothing to tell us *which* component's state to pass to handleclickasync.","this is not possible with user space dispatchevent: el.addeventlistener(t, (event) => promise.resolve().then(() => event.preventdefault()));","if you optimize the same code with the same type in multiple places it is worse to inline.","make the subtree a stateless functional component instead of inlining it.","do you have any kind of bailout mechanism like shouldcomponentupdate? the tricky part is if you're updating whole tree.","a platform that can't adopt to new programming models is bad for the web.","but edge cases is what occasionally makes me want to skip to webgl (no wc).","for me it is the programming model. otherwise you push this to users.","it's like queryselectorall. it was really hard for mootools (slick), jquery et al to build, but now easy.","changes also happen due to non-input events. various things can change text content for example.","there's a bunch of little edge cases - like \"layers\" where one componentdidmount calls another thing to update.","detect if the parentnode of text is null and if so walk the tree to rebuild and reinsert.","the failing scenario is that updates don't know that the text nodes have been merged. weird things can happen.","so maybe in practice it will just look great in all browsers.","there are designs that you just couldn't do in anything other than servo but wouldn't launch it if wasn't good in other browsers.","my only worry about servo is other browsers will be left so far behind that it won't be practical to target servo-specific optimizations.","let's just add componentdidserverrender so you can stop using componentwillmount and be done with it.","there are alternative apis to context that can be added that doesn't have the problems that context has.","can you clarify if this dev-mode and which version of 15?","life-cycles exist to expose internal impl detail. to make react better life-cycle details have to change.","we intentionally don't because we need to be able to refactor this freely. i would suggest we add it to react.","the file needs to be copied/forked but it can reuse its dependencies (rename react[dom->native]componenttree)...","my main goal with react isn't for the library/code to \"win\" but for the lessons learned not to go forgotten. that's surprisingly difficult.","i tend to coding as if i'm discovering something that is already there in the code. i gain understanding as i refine it.","...rich low-latency web apps and go back to server rendering. leaving rich low-latency apps to native.","that's why optimizing the react library's init time is not nearly enough. we need to optimize *all* javascript, or give up on...","react init time could be much better, but the problem is focus. we can spend that time on something even more useful...","caching, scheduling (e.g. streaming), compilers, byte codes etc do.","we do. i spent most of last year working on it. the problem is scalability. micro-optimizing individual libraries doesn't scale.","the biggest failure of web tech is that offline-first apps or even node.js shell scripts takes longer to boot than a satellite roundtrip.","is anyone looking to disrupt furniture delivery? pretty disappointed in at least and or rather what they outsource too.","it may have warned if any of the values are react elements at one point.","if you notice the structure of the proposals i listed, they're all about making it *more* like js.","true but we've also seen better desktop jit performance in jsc in the past as well. not sure if still true.","the point is that if you're writing today - you're probably better off using js or bucklescript.","even for low-level it can be better to just write it in js - because you pay the parse cost.","asm.js is possible but not very useful because file size and compile times. even worse than js.","that sounds similar to what i did in react. \"owner\" was implicit, key explicit. also what componentkit did for ios.","that was actually one of the first things i did in react. it got reverted though. many complexities to explain there.","that's the wrong model though because of the key nesting thing. we could call react.children.toarray at every level.","it is really about react's children type, which is recursive. however, i'm curious if it is more general than that.","promises have an oo api. you need an object to access `then`. an alternative api would be `promise.then(promiseorvalue, cb)`","so it does in fact matter even if it doesn't always show up in optimized loops with generational gc.","that said, i once accidentally wrapped single items and didn't realize until it killed out benchmarks.","the main rationale is the nested arrays problem - not the top level wrapper.","tbf i hear the windows version of xcode is only 0kb.","there will be stateful functional components in the future so that won't hold up. i call them class components.","if not, try forking a browser and deploy it to all your customers. :p (seriously though, we should make it easier.)","have you ever forked, or even reimplemented, react to patch a bug or something you didn't like?","i should be able to consume a web components like this: object.assign(mycustomelement, this.props);","huge vr web investment by oculus including react vr announced at exciting times!","regardless... the solution isn't micro-optimizing, it's fixing browsers, server-rendering or native apps.","not true. given idiomatic js it roughly evens out but constructs require vastly more time than others.","it's not about the bytes but parsing, compiling and running meta programming at initialization time.","good designers discuss a lot of immaterial points about designs too. maybe it is that consistent principles don't need debate.","there are good designers and bad designers that consistently produce good or bad designs. but not every design decision matters.","it's like product design. everyone has a diverging opinion that is difficult to assert. worst part is that good design matters!","i'm told that there are a11y features in some browsers that can only be enabled by tag name. don't know what/where though.","two technologies that have recently resparked my interest with new data: async imports and server-rendering.","unlikely we can use parallelism while writing js. don't need it to solve concurrency problems.","that what i wanted the jsx transform to become but difficult to get multi-file type system infrastructure set up everywhere.","yea. i mean it is designed that way intentionally. could've been an argument list instead of bag of props.","most overlooked feature of react: prevalent use of named arguments. it's surprisingly inefficient/cumbersome in js despite being ubiquitous.","do we need amp or app store go-between delivery for js/wasm? let browser vendors preprocess it to a native format for delivery.","everything is just a function. therefore nothing is *just* a function. higher-order functions, callbacks, react elements, church numerals...","not really sure how to handle that at an ecosystem level. :) i wish i had a good more solid answer. i have a few ideas.","if you need it to update based on props or state of other components, then using the life-cycles to do so is best.","as long as it is a leaf node (no children) as far as react is concerned, then yes. batching/fiber might go out of sync though.","in fact, this whole thing makes more sense at the compiler level so we wouldn't need it if it was just a compiler feature.","i've looked at other compilers and none of them do what i want with the stack but i hope they will once shown useful.","thanks! i feel like having access to previously executed stack frames will make it *easier* than when they disappear.","it's more of an \"interesting\" fact. :) it has some interesting properties such as that a compiler can used fixed memory.","fun fact: react fiber doesn't have any javascript function recursion in its implementation because it reimplements the stack.","maybe we should have a virtual dom api workshop - which is where this comes up a lot.","you could call appendchild again which would commit it into the new place - removing the nodes from the old location.","a major use case is grouping <tr>s or <td>s without wrapping since nothing can wrap them.","there still work being done by browsers to update the dom anyway. much more than a simple linked list move.","well actually i'm not sure if the normal heuristic is busted, but the preparsing happens on demand. not eagerly at dl.","c# fatigue. it was so much simpler when there was no ecosystem. :p","oh, yea. i don't think they disable it. just that the normal heuristic doesn't apply so they had to re-add it.","script requests that go through sw","nobody involved on the technical side but onlookers do.","sure. just saying that it might not be enough to rely on the raw format wins and then the benefit over asm.js isn't as big.","i'm skeptical web assembly will sufficiently solve the start up problem. unclear if vms will interpret quickly as is. pre-cache is better.","yes. we don't render <noscript /> anymore. we render a comment. (in fiber nothing is rendered. even better.)","i'm investigating bug/feature parity in react inspired libs. :) specifically i was curious if you check for string.prototype.key","algebraic effects is like the cheat mode of functional programming. \"eww, side-effect!\" \"look i put a handler around it.\" \"oh, makes sense.\"","weird discrepancy between the react stack and normal stack. should be easiee to build libs into langs","react really makes more sense as a language feature. it's a language in user space which leads to this.","i don't really have a good idea how to make it work well in the js world. :/","...wish we had syntax for named argument curried functions in js.","i see jsx as just lazy functions. so it kind of make sense but the syntax connotations are awkward...","react's error handling sucks. working to fix that and then maybe we can. same issues as \"cancelation\" as throw.","same thing. if you can deal with it in a designed ui, fine, otherwise abnormal abort.","if other state change up top which renders props that a component below is unable to satisfy should it use componentdidupdate?","the redirect order isn't my biggest concern. the miss api is iffy but follows as an extreme case of other apis","because the code for determining whether to redirect is often coupled to the selection of a view and share data","agree about the fallacy. maybe what react is, is the thing that needs adjusting for clarification.","the code locality makes perfect sense. i think it is our mental notion of what \"rendering\" is that's broken.","i am, and a whole bunch other useful js/wasm libraries.","oh and we know that browsers can't keep up with the ui components people will want, so no, they can't all be built-in. needs user space.","the only solution is to download as much of the responsive ui components you need ahead of time and compile them ahead of time. like native.","server-side only doesn't work because high latency/fragile updates. downloading js on-demand doesn't work because slow to download+compile.","you don't even have to argue the development experience point because the alternatives also provide a bad user experience.","you're buying into a false premise. polymer apps has as much js (slow load) and server-side has network / latency problems.","so that the web can be left with the pieces that does make sense as server-rendered html.","i think what alex is say is that a lot of types of applications should just move from the web onto native platforms.","until there is gc heap interop it's not a big win. there's little time spent in react itself compared to the dom/js it touches.","that doesn't mean javascript development has stopped, just that things that are traditionally less javascripty aren't being forced into it.","features that have been previously considered for javascript may never arrive because of this. i think that this is actually a good thing.","i don't know if anyone outside the browser world has noticed this but there has been a huge shift in focus from javascript to web assembly.","react does anti-modular work so breaking changes have huge ecosystem impact and we have to be careful, but many libs are modular.","curious. what happens if you just stay on react router 3 in your app? presumably someone will patch it. will your ecosystem break?","it's worth remembering that new things need iteration in public. react wasn't launched w/ all the answers.","congrats to the team on shipping angular 2.0!","i wouldn't expect it to become the mainline react until next year.","for example firefox uses a string map to reuse the same object from multiple equivalent csstext values.","i don't remember if blink is one of them, but some engines use shared data structures. e.g. sibling styles.","i especially like the iskeyed optimization. that's a great insight. technically a breaking change but something we could enforce.","react fiber has some other constraints/tradeoffs so we probably won't use it as is unfortunately but a very good read.","is the reason you don't want to add the js api that you worry js parse time will be worse than css parse?","we do that. applying the rules is slow though.","there is no api for it right now since you have to apply each style to .style.x rather than applying a whole set.","reapplying style rules is the major fb bottleneck after js parse time. js parsing can be cached but not the styles.","sync js module init is already slower than i/o! maybe we need to fix that first and then the solution might make top level await work too.","i like how efficient module loading is completely broken in the js ecosystem w/o an adequate compiler. yet we worry about top level await?","those are different use cases - apples vs oranges. you can break out a closure as child into a component instead.","it has no capabilities that components doesn't other than being slower for the benefit of nicer syntax - less boilerplate.","my guideline is to only do that with projects that are underdogs and get too little attention. i don't for react for example.","it kind of sucks now that you can rely on it not updating ever rather than as an optimization. which we had both.","for example, setting it up with the dev version would've added a console warning about autofocus need to be renamed.","react uses an unusual strategy of warnings that are not in the .min.js file. what could we have done for you to trust a starter pack?","imo that's true because it's promoted in the dev build but not everyone develops on chrome/ff.","if you dev without warnings, you may have a large codebase that can't be fixed. fixing perf is a one liner.","yea for now. was hoping to avoid adding a comment around every component that returns a string.","in-browser translation tools definitely still does it. don't know if browsers do it anymore.","so what do you do when the browser or extensions merge them for you? we would break. :/","i'd add \"...yet.\" sometimes you just hit it or identify it earlier but is broadly applicable.","not on our ability to perform the same task better than a different library. the constant flood of new problems spawn innovation.","3) subtle bugs that happen because they don't work as you expect, or there are unintuitive consequences of using them in a particular way.","i've noticed that problematic apis often fall into a few separate categories:","state = getstate(this.props); componentwillreceiveprops(){ this.setstate((state, props) => this.getstate(props)); }","it'd likely be a long deprecation so the feature would be there. however, using new features might break your code. :/","unless the listener fires synchronously there, you should be able to just move that to componentdidmount which is safer.","popular ones can often be worse offenders because the ecosystem adapts around them by testing for them. tough for smaller ones.","i agree with the sentiment but i think this is the issue with proliferation. lots of tiny incompatibilities in the ecosystem add up.","would an equivalent to componentdidmount that is ssr-only help? i.e. fires after rendering all components.","actually, you can get a ref on the native view and proxy them yourself. until we get ref forwarding.","we should expose it on the `react-native` module to make it official. want to minimize imperative apis but it's there.","it will more likely move back to react-native as a downstream copy but regardless it's private.","imo handling such event should stoppropagation too, unless *that* component knows it wants to expose it.","like uses it in his demos. <fetch>{text => <div>{text}</div>}</fetch>. the fetch component can call this later.","however, we work around that with flux/redux style dispatching really, but it is more explicit when you do.","auto-bubbling is anti-modular when you leak events and hard to track when/why two components get disconnected.","it's more about the lack of benefits first-class events provide, and the bad patterns that happen from using them.","the best performance tool you have is the slow-mo video camera mode on your phone. you can gather so much interesting data from it.","i'm looking for api hints for this. currently using the html attribute `hidden`.","you can wrap your react component in a web component and render into its shadow dom.","i'm trying a new technique while thinking. i write it out in words as a q&a with myself. if i get distracted i can pick back up at the end.","componentkit is released but just for native ios. concurrent ocaml is just a language feature but was highly inspirational.","progression to react fiber: react across web workers, componentkit for ios, concurrent ocaml, unnamed concurrent react prototype in ml...","in practice so many of them require a wrapper anyway since cycle/react/ember/angular all want declarative apis.","my problem with wcs is that they don't mandate, or even encourage, a declarative api for making changes over time.","i think the criticism wasn't necessarily the size of the lib but the size of webpack bundles that goes with it.","however we will never turn composite react components into custom elements. i think neither is angular/ember.","closures in js vms are not guaranteed to aggressively gc. you can have a variable that is semantically unreferenced but won't get released.","basically ({ x: number }) => { x: object }. if the object passed has a single reference, the compiler can reuse the same alloc.","\"react and webpack\" should collaborate to solve this problem would be a nice way of phrasing this.","react is just a lib. not opinionated. decoupling yields innovation and collaboration opportunities.","are you saying that webpack is slow and should have a service-worker and codesplitting solution?","it's not that simple. client-side ends up with lots of code on the client. server-side has latency issues.","i'm saying that if you do that blindly, you end if up with poorly maintainable code which is worse for both.","client-side is possibly bad. people have moved to more client-side code. native apps winning suggest not tho.","and the alternative wins or is it just as bad?","or you just become a native app developer and you get to make 100s of mb and lots of people still use it.","false dichotomy. good abstractions lead to smaller client-side code. in theory you can make it smaller but in practice messy.","not sure if this just buys into the argument though. frameworks let you write less code.","tbh i spent too much time on this early on. native is winning. i need to be convinced that these discussions help prevent that.","yea. that was the point of the jsx grammar specification.","i changed it to not be simply function calls but bind calls in disguise. :/ i think that's a thing js is missing.","i changed it to not be simply function calls but bind calls in disguise. :/ i think that's a thing js is missing.","ligatures and emojis in code is awesome because it makes us engineers invest in it for people that rely on it.","it shouldn't because this mapping from declarative to the imperative apis in the dom isn't automatic. someone have to do this.","i think a new react best practice will become: handleclick() { this.setstate({ active: true }); requestidlecallback(this.props.onaction); }","resizable at any granularity? the alternative solution is multiple explicit designs by a human designer. perhaps assisted.","do you have any large scale app case studies we can use to evaluate if long tail concerns are solved?","will that be explicitly designed for as opposed to automatic responsive layout tho? seems like manageable (less) fragmentation.","what does responsive layout mean in vr? seems like major drivers - device resolution + screen size/ratio - are not relevant there.","do others often need to solve it? do i need them in my ecosystem? if yes, can i solve it within my principles? after solving, reevaluate.","not if you ask react native contributors or do perf benchmarks on fb. these are overrepresented as contributors.","basically it is just one folder. the annoying part is rewriting the require calls. hoping we can switch to commonjs for the src.","you can also use react's build system. equally annoying. :)","which one? we didn't have one before because one package. global-shim used window.react. didn't work neither.","i figured you'd just do an indirect call but i guess that won't work with webpack then.","if this is for react i think it's better to do manually in the aliased files. more portable. i just got rid of browserify-shim.","usually you wouldn't use typescript for those use cases anyway though.","yea. i'm talking about general purpose. encoding, filters, other apps (in workers) make sense.","i only find wasm valuable if your target webgl. dom interop is too inefficient until stage 3.","sure but that'd be turning into something it is current not. see result of soundscript efforts.","no. semantical differences makes it necessary to add more checks and alternative code branches.","i think the alternative is a bit idealist. what happens when you don't, is that you exclude anyway.","if you find react community members too bro-y, aggressive, ego or plain offensive. please e-mail ben@benalpert.com with your feedback.","we've successfully used facebook groups for this purpose. i'd like to see if we could create a nicer more curated space.","the breadth of react is overwhelming to manage. do you think it would be worth while cultivating a smaller subcommunity?","if so, isn't that a discipline problem with a technical solution?","are you saying something stronger, that *forcing* yourself to always have the correct types speed up development?","sometimes you just need to cheat and have some bugs to get a holistic picture of the structure of the app/lib.","compared with an earlier branch... oh, it's my code. :( lesson #1 of debugging: it's always your fault and almost never the cpu's fault.","has anything changed with requestidlecallback in chrome lately? to give you fewer cycles to do work, or is it my code that's slower? :)","cemetery groundskeeper programmer army sergeant web graphics designer 3 x co-founder systems architect frontend engineer","the greatest trick dynamic programming languages ever pulled was convincing the world dynamic langs don't need ahead-of-time compilation.","the beauty of the current ecosystem is that it democratizes the process of discovery.","powerful divergence and then reconvergence on common patterns instead of every codebase having its own macros.","the tooling powered js could've been sweet.js but it is interesting that macros are losing to transpilers.","there's an evolving notion of two jss. a pseudo-standard source/tooling powered js and separate js in browsers.","the future is compiling js to web assembly anyway.","afaik ocaml with algebraic effects still have mutation and library side-effects anywhere unfortunately.","lots of amazing products have been developed with poor tech. lots of terrible products have been built with great tech. at least short term.","which is consistent with js where the semantics are the keys reflected by object.keys which is also a subset.","right. i don't think punning solves the spread use case. many frequently changing flat props like html attributes.","another option is to do the change in react js as well. if it is warranted in one place why not both","the problem is that it means something in jsx already. boolean true. it'd be a mistake for reason to diverge.","note that it wasn't terminal jsx. probably had some overrides after, otherwise we should special case it.","a div is just another user component. i think the key is the this.props thing. you should pull something off it first.","this is something i've been explicitly trying to fix at facebook. this would be a good topic for conferences.","platform specific engineers needs to learn about longevity from the web. it's not automatic. web engineers needs to learn about transience.","but yes, i have some ideas for how react can *the library* can also help with technical features.","i guess this is a place where means a library, community and set of web developer teachers. :)","what benefit is it to use aria in polymer over using aria in react?","i.e. the html tag names didn't have much value to begin with which is my point. accessibility has value. tag names not enough.","note the polymer one says: \"tags that have never existed before in the browser, meaning they don't have built-in semantics...\"","i said that we should build better primitives into browsers so we can build better accessibility in js. i did not say ignore it","i guess you have one terminal null pointer in the linked list so that's the same. js arrays have more overhead","such as in the react case that is referring to. we're able to put the links on the objects themselves.","js arrays can be linked and somewhat clever. the nice part of doing it yourself is extra data on the nodes.","agree. it's not just the naming that is legacy but more things in the api. more work needed there.","most of the time you know which of a few fonts will be used. usually one per device.","that's not true until you do the text shaping first. if it was stored in the visual representation maybe but it is not.","(also i had a career before facebook. i didn't forget all of it just because i got a new job.)","our ios apps load their data using json. not hard. they solved a problem, but that problem can be solved other ways too.","html, json, js, etc. are better represented as byte codes and it is a real problem that they're not.","utf8/ascii-when-possible vs utf16 is mostly beneficial because we put so much programming cruft in our formats.","eg. storing content in the visual representation can avoid lots of text shaping and bidi code to speed up those languages.","ah, yes. jsc doesn't have this as a public api. even then, you'll pay the cost in certain cases when conversion is forced.","any new script that is not yet parsed. load time is slow. any new property coming from json. any new user content.","only partially. major perf problems for us this year: parsing, string marshaling/encoding conversion, text shaping/layout.","toolless dev wouldn't include a browser neither. it's a useless term. better: seamless/unnoticeable tooling.","just make a browser extension.","i mean the point of this thread is that you don't need additional tooling if you use valid js.","remember that the first javascript/dom debuggers were self-hosted. the browser isn't the only owner of tooling and place for interpreters.","especially <script type=\"module\">","supposedly that includes the browser interpreter - a tool. why not use a babel interpreter?","another that we over use utf8 for the purpose of transferring logical instructions (such as js property names/json structure).","sorry but strings have been coasting for too long and unicode as a format has the wrong performance tradeoffs.","we did use it. we just ran `npm run eject` very early on.","as the creator of babel i find this offensive.","the purpose of the issue would be to discuss under which infra this is likely to have most impact. e.g. babel plugin or something.","best way to start is by commenting on one of those issues or create another with the optimizing compiler label if you have ideas.","we're trying to figure out infrastructure for whole(ish) program optimizations that require info about pairs, e.g. inlining.","we're trying to figure out infrastructure for whole(ish) program optimizations that require info about pairs, e.g. inlining.","html and unicode need a <sarcasm /> tag and code point respectively.","new rule: nobody can claim 100% ecmascript 2015 support until things like classes are optimized to a similar degree as the es5 equivalents.","doesn't need to build the reviving into the prod react, it can skip unserializable pieces and cheat if necessary. \"good enough\".","please open an issue w/ your requirements and non-requirements. e.g. do you care about closures, classes, immutable.js in state?","i think the resolution is it won't happen. the use cases will be addressed separately. so if one comes up please create an issue.","the very first thing i built at fb was a flow based ui on top of d3 before switching to react. still want to finish that.","pdf.js is a pretty good example of how to write high quality javascript code.","time for apple/microsoft to open-source coretext/uniscribe or switch to icu+harfbuzz. one platform being more correct isn't helping anyone.","that screws with your local branching and merging tools and if you have he resizing options.","well first you add a push blocker on the server side so that nobody can land unformated code. :)","well that's mostly in dependencies, webcomponents polyfill and our unit tests but yea. :)","useful metric for a react codebase: expr `grep -r settimeout . | wc -l` - `grep -r cleartimeout . | wc -l`","i think scu + componentwillreceiveprops is probably best right now, as much as i dislike side-effects there.","no, it means that react will always reset whatever the third party thing was doing to the dom.","although it certainly can and will skip if that is desired over showing stale data. that's a configurable design space.","it'd be nice if we can override the breakpoint stack. wanted that since i added breakpoint-highlighting in the react devtools.","for example, if react wants to clean up its internal structure to save memory and then later rerender to restore them.","the only unfortunate part is that we now can't take shouldcomponentupdate as a suggestion rather than rule.","when that is a language, then it takes everything with it. any app should be able to have multiple mega frameworks.","why didn't shared cdn help? because too many versions? modern js is parse/compile time bound. makes cache important.","i mean the browser's cache doesn't get fragmented if many websites end up sharing the same set of dependencies and versions.","we need more mega-frameworks with overlapping tools and lockstep versioning. they can be decoupled internally though. ember got it rightish.","js lib unit is too small. technical details like size, versioning, cache, compression, optimizing compilers make more sense on larger units.","they're second class so that doesn't mean it's natural to use them nor that the ecosystem works well with them.","service workers help because the client can know which library is available instead of merely asking for a random version.","like individual files doesn't need to be big. can be micro like npm. conceptually big to minimize version fragmentation.","one thing about code size: one big version that everyone has in their cache is faster to load than many small ones. your browser is one.","jit can have many levels. bytecode is the minimal thing you need.","don't mistake accidental complexity for essential complexity or vice versa. any significant codebase has both.","sure, i love it when others embrace the same design space and constraints yet explore other implementation options.","i think size is a proxy for complexity which is fair. react is not simple. it's complex so that your code can be simpler.","does react alternative x, y or z solve this? if so, we'll switch to that. if not, we'll keep working to solve those problems.","we're working on loading (start up) lots of logic (js) client-side and scheduling cpu bound work. both for responsiveness of interactions.","sure. that's why i split it into two separate items. how would you do this in a browser today without sw cache?","the key is that you need to do the work *before* it gets executed the first time so it can't wait until the script tag.","where do you think it belongs? the js engine shouldn't load the source on subsequent requests so you need some new bridging.","sorry about the missing context. :) do you see how i'm making that leap now though? open to alternatives too ofc.","it is only a heuristic so you can store the original source as well if it ends up being loaded as anything but script.","unless the heuristics are not good enough in real world scenarios and you need an api for it.","it's a way to hint that this is js content rather than any other data and lets the ua ensure it has been unmodified.","the bits over the wire is still js. the vm can use any internal representation. in chrome's case that's machine code.","e.g. a mime type heuristic that preparses/precompiles and then when <script /> loads it, it can use the precompiled bits.","v8 persists the result of initial codegen of js under certain conditions. i don't think any spec changes are required.","no i've only brought this up in person. trying to get our react native folks to talk about their finding in this space too.","i don't think any browser has impl it that way yet but is possible. persistent codegen cache is in chrome but not in sw.","whether you do download the next version of the js bundle while the page is active or not.","well the most important part is step 2. ability to have js preparsed into vm specific bytecode *before* the page loads.","avoids the biggest problem of cooperative scheduling in the web today.","ric allows you to execute code for longer than the frame deadline without blocking the frame being rendered.","it can update in the background while not on the page and the js cache can include bytecode/jit (2) if the browser knows.","top 3 browser features wishlist for react: 1. service worker cache 2. persistent bytecode/jit cache preparsed in sw 3. requestidlecallback","yes. i'm interested to see how async-append would work for updates in implementations and why it is different than what we can do.","production. i'm looking forward to the post-mvp stuff. that's when the real revolution will happen. :)","it's mostly about having js pointers on the stack (and a little bit on the heap). does wasm allow that yet?","if i were to say, try to optimize a part of react right now, i would use js rather than wasm because of that. i find that counter-intuitive.","because most important vms doesn't really treat asm.js any different than optimized js code. so wasm actually has a huge disadvantage.","wasm mvp has asm.js parity, but asm.js code, in practice, can go beyond the asm.js subset to get better js/dom interaction.","i like the way you think. it may not make sense for js, but the idea of describing react as language feature primitives does.","game and mobile application developers.","in the future you get to pick application framework/platform based on application type instead of based on deployment device.","js still lives because of the promise of what it can be. many obstacles can be overcome to make it not worth replacing. stagnation is death.","if it is decided that proper tail calls is not possible, that's the death of js as a future src language for fp. compile target at best.","\"i use counting. i think that's a pretty non-controversial technology.\" -","but i mean there is no minimal set of requirements. part of the reason to build a stand alone renderer would to make a subset.","probably the coroutine/yield ones ideally. api far from final. trying to avoid too many explicit scheduling apis for now.","same code location + same values on each captured variable by that closure. @ryosukeniwa","not just yours but ours and angular members that left. they could work on it elsewhere but they left for other reasons.","@ryosukeniwa you mean like sproutcore? the passion for oss projects outlive the employment of the authors. hence ember.","oh you mean only the top level props. that means no flux subscriptions, redux, etc. we have some work but doable.","we can also try relying on keys to be the \"id\" of the component, but not really safe. no key warning in my example.","that could easily be a different user by the time the client loads it unless you serialize all business state.","we don't know if the data is the same. the example we used was a <mostrecentlyactivefriend /> component.","if your component reads `props.userid` and that id is not what you saw on the screen you're removing the wrong user.","the problem with passing it to a component is that there are many subtle ways to get the rehydration wrong.","e.g. only generating html like: <a onclick=\"dispatchreduxevent({ type: 'removeuser', id: 123 })\">","we don't technically need to now. we do it because *if* it's inconsistent better to fix it up early than later.","another option is that we get rid of classes all together with an alternative that passes arguments explicitly.","curious. have you tried teaching with only arrow functions in render? no eager bind. considering alternatives.","that's not to say these technologies aren't good for server programming and other uses. just not for my niche of ui programming.","granular per value subscription of changes.","mainstream technologies on my shit list: jit, ref counting, some forms of frp. mostly inherited from . nice to have guidelines.","the best play is to get apps in people's hands. then os:es are incentivized to ship libraries if they make apps faster.","are they incentivized to go out of their way to do so? not without apps written in rust.","no it probably had tons of external deps but they're already on the device/os. that's the point.","it's fair to compare ease. if you want to deploy a mobile app and can't figure out how to make it small. it's a blocker.","the best part about writing a library without a dsl is that consumers can show the author the best way to write/solve something.","are you saying that everyone that works at facebook is a genius?","problems of working at facebook... which of all these geniuses is the most right?","that way we can suggest and compare alternatives. if they're not as great/approach we could be convinced.","interesting. typescript's type system is trading off usability over safety. exactly so you don't have to be as all-in.","how do they deal with gb os updates and 100mb browser updates? is it just that those doesn't force you to update immediately?","i guess i don't understand how rx-recompose optimizes those. :) is it much faster or does it just hide them from the devtools?","the ideal would be what i call static \"component folding\" do the inlining. that's why we need whole program optimizing compilers.","i'm skeptical that observable based \"squashing\" will be better than just using react with newer optimizations.","i assumed you meant single threaded app logic + some hidden thread/process for animation/scrolling which happens now.","we could also just make a js vm build that relaxes the single thread constraint, with multi-threaded ggc and see what happens.","reinvest in parallel js maybe. shared typed arrays is happening but requires us to switch language to do so.","that suffers from another artificial slicing. native vs. js. some things can only be on one side or the other. not seamlessly move.","if you want to perform work on the same architectural layer in parallel. e.g. reconciling sibling react components.","the problem is that you end up replicating all the modules, function handles, static objects and the stores/state of the app code.","this is an area that javascript's single threading model will have a very hard time dealing with efficiently. :/","but the interesting part is that traditional small benchmarks won't show it. needs large code.","where others would use byte code interpreters. v8 ignition should fix it.","...if it is complicated enough to test on its own without the component, then i move it to a sep module.","the only input/output to a component is props and callbacks so every path should be reachable that way...","considering defaulting to heuristics because at any scale it is difficult to reason about any individual component's needs.","how does inferno do scu? we're debating changes to it now. the tricky part is not the api per say but know when/where to use it.","with incremental rendering and stateful functional components it will start making more sense.","treat the json as opaque. if you can easily run a script to update all your assertions it is fine.","the format of the output and the impl of low level components (even html) likely to change. so don't rely on it.","componentdidmount on any component in the tree would give you that.","done as in: can never update again, has been inserted into the dom or has been shown on screen? componentdidmount still works.","which bad parts are referring to? one benefit of react's diffing was always that it scaled with view size rather than model size.","would you agree that making a component break (not update) if used with a different parent (mutable) is leaky?","half aot arm/x86/wasm. half interpreted byte code. one language. one heap. one memory model. one ggc. enough with jits and ref counting.","yup. i don't discount that. just unfortunate that it seems technically inferior as a type system.","specifically, i think it is the restyling and text shaping that is slow. not the layout calculation per say. that's important.","typescript is good at working off the checklist of \"features\". i wish they would build as a solid foundation as flow too.","i'm with you on philosophy but in practice we still need react native to ship quality products (certain types of apps) to ios.","it isn't dogmatic about annotating everything. yet it is not unsound. it catch a lot of easy inferred errors (unlike typescript).","i disagree. building a high quality experience is getting possible in chrome, but not in other browsers.","yea, and oses. like installable progressive web apps. it just takes a while is all.","the \"web\" runs on chrome too just like it runs on ios and android, but running well on chrome isn't enough to run well everywhere.","chrome has really become its own big platform along side ios and android. the web is a forth one but not to be confused with chrome.","...of that language. our language just does that using js compilers instead of dsl. same thing.","i.e. don't confuse it with the js features for fibers, promises, generators, continuations, etc.","for the terminology to make sense you have to think of react as a vm impl of the react language.","haha. try to replicate that artistic style in ie8 with any other library!","i thought that maybe was referring to the reactelement and closure instances.","in theory, it can be optimized to be as fast as stack with ggc. might miss out on bailout optimizations.","it is using flow modules for types. not es modules. our builds don't support es modules in all env yet.","i think we underestimate the cost of developing a good ux for the web. often triple.","i think we disagree on what \"declarative\" means in this context. e.g. would a pure js function satisfy?","@ryosukeniwa i'm aware. apparently might even be security issues involved. might just try it in user space.","@ryosukeniwa i think it is related in the sense that \"by design\" part is questionable.","we can discuss the best way of accomplishing that but we want the \"web\" to win. some form of it.","ultimately, all we want is a way to solve our own problems if the platform isn't helping us do that.","fun fact: i wrote the debugger proxy for react native using rxjs. it was only later consolidated and replaced.","looking to make a js library? look at service workers. it's the most important feature of the web but there's no _jreactpackdash for sw.","is your website designed to work well in a 360 degree vr view? no? it's not responsive and you should feel bad about yourself. [sarcasm]","i've found the progressive web apps term a bit vague and confusing, but i think i understand and i'm excited!","congratulations to d3 hitting 50k stars on github (more than react or angular)! well deserved. demos dominate the dataviz space.","so not less js but some earlier and some later?","not worried about polyfills. tiny. cachable. like ui libs. it's all those components.","how does polymer app toolbox solve this?","awesome presentation skills by at using buzzwords that easy to grasp on to. unfortunately, i disagree technically.","react.dispatchevent(this.props.child, this.props.oncustomevent)","you need a pair of object and function pointer somewhere. we could potentially add something like handleevent in the browser.","did you measure how much of that was actually parse time misattributed to mountcomponent? seen that.","our take on it is: how do we make adding more overall js not slowdown start up? scalability. takes you down a different route.","don't need es for that. pretty trivial to do escape analysis. just need the infra and longer build times.","if the createfactory call is elsewhere we don't know if the call is a react factory or something else.","yea. but that is orthogonal to optimizations. more a module decoupling thing.","however, there are no optimizations we couldn't do on createelement/factory calls just the same.","well, those warnings could live in the babel runtime was the idea. so it wouldn't necessarily be the same.","prs should really come with two issues attached. \"fixes . causes or exacerbates .\" library curators' job is to choose between x and y.","one issue is that android doesn't have linked list apis. i.e. no insertbefore(node)","there are also surprisingly many different ways of doing this and optimizing this for various environments.","it is not easy because with the new reconciler we can't immediately apply changes. needs double buffering.","we don't know the details yet. just that it will be some form. see react-future for alternatives.","isn't that the point though? to save power on low end devices.",".. maybe that helps with how defaults should work. we don't have a good way to express such constructors with named arguments in js yet.","what if your programming language's stack frames was persistent data structures? that's effectively what i'm doing now.","if we start designing for this, i suspect that browsers that don't have this will need to take a hit in either frame rates or load time.","api design is hard because you can make it seem simple but it's actually deceptively complex, or make it actually simple but seem complex.","that's being solved by p2p delivery systems. if that can work for native apps, not user space js apps?","can you update your browser on a phone that's popular in india? if not, browsers keeping up doesn't matter.","that's fine in other platforms because your start up time isn't so tightly coupled to code size as it is on the web.","polyfills for new layout primitives, new js features, paving over browser inconsistencies aren't going away. they're growing.","let's fix the poor caching, lack of shared cdn usage, slow parse time and dynamic js initialization so it can scale properly.","or you have a hidden or erroneous unicode character in there. e.g. if there is a zero width space. :)","that's still something that is needed but we need the basic first. cooperative scheduling which needs to be designed from the ground.","doesn't include generic animation libraries that bypasses react and mutates the dom directly. like jquery, d3 etc.","would it be hard for react animation libs to switch to an onanimationframe life-cycle instead of custom requestanimationframe calls?","one thing is clear about silicon valley and tech. it is never clear how it should structure balance of power, operate and direct progress.","nothing in particular other than a trend of anti-js frameworks posts referencing how easy/good the web was before them.","queuing up side-effects (didmount/update) is a good technique for getting impurities out of a pure operation (reconciliation).","the problem is that those gigabytes of unused apps/libs are privileged while your most used websites get shit for 1mb of js.","js is part of your os. you have many gb operating systems + hundreds mb native apps but complain about 1mb of js? js isn't the problem here.","isn't that just a cjs centric view? tools that support script vs. functionbody already have this problem. use heuristic.","only if there is ambiguity, so chose one that isn't ambiguous but incompatible with script vs functionbody. new spec.","like we've had incomplete hacky two-world scenarios in babel (and react native as an ecosystem) for a while.","reactdom.findnodehandle is the worse version of refs. refs are preferred since you know if, what and when you get.","integrated layout, integrated focus/selection/hover and maybe relay/observables/redux can solve those cases.","likewise you shouldn't need to do data fetching / data subscriptions using imperative life-cycles.","all examples of imperative limitations in react that should be fixed to be declarative.","let's take it off twitter. :) it's partially about react already does and what it will do in the future.","we wouldn't want to use it as a replacement for reactelement because immutability gives us safety in terms of scheduling etc.","that's an interesting novel approach! certainly pragmatic. i think our stance is to lean in the direction of further towards fp.","there is no sectioned off code that is modern/clean.","there are common patterns such as heavy use of oo throughout the entire codebase that i'd consider legacy.","i'd say that it is best practice to make all prop types required in react and provide defaultprops for those that are not.","you'll always be chasing. one of the reasons web/js-hybrids are popular on mobile is because they can dynamically load code.","there's a secret option for forks where both projects live on. both authors win but the ecosystem loses.","which beneficial property of immutable structures are you looking for? code quality or specific optimizations?","don't know. a patent clause isn't necessarily about what's in react. why do you ask? i find that lawyer-to-lawyer works better.","wouldn't it be enough to make have a direct dep on both and then just wait until the package authors update?","browsers like to think of themselves as the friendly third-party that makes it better for both publisher/consumer. not always.","nothing in particular. just saying there's an inherent conflict between publishers being in control (js libs) or the browser.","i empathize strongly w/ browser vendors trying to solve the under-maintained web. i also empathize w/ devs/publishers feeling held back.","shifting responsibility to browsers can let them fix shitty websites, but it can also be a bottleneck for progress on good websites.","we know how to do the proper decoupling but it's hard and many things depend on react is weird ways. work to do.","the problem is that we have a lot of \"private\" modules shared between our packages. technically public but not.","the babel inlining plugin doesn't have this. jsx is supposed to be named attribute currying. plausible lang feature.","i wouldn't sacrifice the end user experience for developer experience.","see fb talks on js load time. related to why rn gets away with a custom packager. there's a dependency graph here.","the way we build react is actually with two implementations. one fp theoretical and one practical imp implementation of the algebraic model.","i'm hoping we can make this work even without an package override eventually. just by having the renderer do the switch.","there are plans to get rid of it. the only runtime api that use it is \"string\" refs. we should deprecate that.","i'd be interested in working on generalizing the data structure of jsx so the pragma isn't needed - if possible.","the irony is that this is exactly the purpose of react's jsx except that we also need to be able to compare org function identity.","the law is designed so a big company can make two smaller ones step on each other without getting involved.","to me, npm has positioned itself as a centralized name registrar. the repo fill very little other purpose.","apple defends it where they can. kik might not have venues to fight. apple's name is a common word too.","doesn't matter if it will happen but if it could. depends how wide npm expands in scope.","that said. react native has those primitives. it does take advantage of them. worth following.","we're working on \"incremental react\" for concurrency. not sure we'll need new primitives.","working w/ v8 guys on js perf. seems we're overdue for a meeting about our load time findings.","native first. web once we get service workers + js codegen caches where we need them.","i believe he means, we can get even better overall results with client only.","1) fire a network request from js. 2) load rest of js. 3) render ui without content. 4) content","not incompatible. this is a feature relay+react has. render ui during first request latency.","our conclusion: client apps aren't slow. react isn't slow. loading js is slow. fixing that.","i'm just very worried about the reductionist approach for the web as a platform to compete.","because of user experience or technical limitations of the platform? dangerous to claim the second as a win.","e.g. are there spec/browser limitations that drive this trade off or is it, like you say, simplicity of appl.","full disclosure, i'm more interested in the general problem of client embeds than this particular use case. :)","that's not the trade-off for server vs client. it's specialized vs generalized.","the shell is the same over and over. a specialized client (js) can do better than a generalized (browser).","moving the \"power plant\" to a data center isn't better. if enough users see this, client-side can perf better.","i'd like to understand this use case better. sr isn't necessarily the answer; codegen cache + shared workers.","we are hiring virtual machine experts and specifically to help out expanding js vms.","no, not in js but in ocaml and hacking with manual use of generator functions.","they've actually implemented this for js_of_ocaml so it's also possible to play with this in just pure ocaml.","that's why making progress on the web first is always a failure. you have to make it outside the web first to prove its value.","flash, mobile notifications, dart, react native, instant articles... - things that the web wasn't focusing on until it was shown it had to.","status: watching struggle to get the perfect warning message to users. empathy driven library development.","react's algorithm is synchronous. it'd have to use promises. still too much overhead. :/ also not enough.","i don't get to use react enough to really enjoy it. i see the bug/feature requests. i know everything that's bad. i hear good things though!","@ryosukeniwa that's the danger when the most popular browser does it. it's immediately useful. e.g. contenteditable, -webkit-transform, ...","there's no single common correct answer that can be the lowest building block.","why do you care if it is a span or a text node if you're not using css?","if you're not already you should be following he invented react and is the one keeping pushing the boundaries of what it can do.","i'm not against \"killing\" js. i'm just against failed attempts like dart removing focus and feeding apathy.","js is a source language too. it's written, shared and discussed as such. i mean wanting that focus to shift.","lots of easy things don't get optimized and lots of hard things do get optimized because they're wide usage patterns.","in js, \"easy to optimize\" isn't the same as simple to optimize. it is how generic it is so it gets priority.","there are some type hints around enums that might have optimization benefits but i think \"matches\" is pretty optimizable.","showing an alternative route with intention of hopefully upstream is different than intention to go your own route to win.","or contribute to type systems and provide feedback to active ecmascript proposals. they're all on github. make another if not.","build opinionated linters, optimizing compilers, contribute to jit optimizations in oss vms and team up to create best practices.","if you want to kill javascript, please understand why and how, then do it and succeed. otherwise, please help out making it better.","it's not. it's an alternative to jsx if you prefer.","jsx hater protip: `import { createelement as $ } from 'react';` it's not bad.","this is a snarky way of saying that maybe it is time we start exploring a unified model for nominal typing in javascript.","javascript pattern matching: if(typeof x === 'function'){} if(array.isarray(x)){} if(x[symbol.iterator]){} if(x instanceof regexp){} ...","i think what you want is the ecosystem to buy into the same rationale which is different from what the language can do.","fellow javascript developers: ask not what native can do for you, ask what javascript can't.","still programming model wins. same use cases as generators/promises without the red/blue split.","i suppose, yes. the optimizing compiler can go further but that's just the same thing at larger module boundaries. you're right.","is this what \"transpilers\" are? highly localized compilers that have to retain much more semantic parity.","it sounds crazy to us but that is effectively what others do (e.g. different c compilers) and they think we're crazy for not doing that.","javascript is the only environment i know that use local compilation and polyfills. i wonder if we'll ever move to whole program polyfills.","for component that haven't rendered yet, that makes sense. for updates to ones already visible it gets complicated.","it's not just about running it but building out a feature complete/integrated solution (fourth point).","why use a native app when i can just use my \"optimized for ie\" website in ie in canvas.","the traditional \"universal\" notion not the right direction. \"seo react\" is still the right direction","\"universal\" meaning the whole scope of rendering any user request and reviving it on the client.","he didn't say that you shouldn't have it. \"server react\" is too broad. have it, but limit its scope.","there seems to be a need for a separate ux beyond just capabilities. seems something a browser could provide.","i don't disapprove. access to capabilities is one thing, but the thing i find interesting is the ux of a separate app.","these electron apps highlight how browser shells have failed to become the os shell and how os shells have failed to incorporate the web.","not having proper one-shot coroutines in ecmascript was a mistake. promises/async+await/generators are complex, leaky and too much overhead.","that is what allows new devs to fix bugs on their first few days at facebook. even though the app is huge we're trained to dig vertically.","verticals are fixed. horizontal grows with app complexity. the new dev exp at facebook is all about understanding the vertical surface area.","the number of layers for a feature is: vertical surface area. react can expand to include more verticals without growing horizontally.","i refer to the number of components in your application layer, component layer, layout layer, rendering layer as: horizontal surface area.","when alternatives succeed, we're very grateful though. such as redux.","fair. we have multiple different alternatives and we don't follow all. i guess the web have similar trade offs.","actual reaction: \"don't need it. the web is perfect.\" ... \"y u no work with us instead of building it outside the web?\"","the way the web spec should react to third party competition: \"thanks for showing us what we could do better + what we need to prioritize.\"","the risk is you can't keep up with scrolling because you're reacting to other things.","the scheduling orchestration problem is about the work outside of the main component.","so do other libraries and frameworks. would happen sooner or later.","we would've seen these growing pains regardless of react. it's a good thing though. we're paying our debt for the previous stability.","react had unfortunate luck to be popular at the time of es2015, falsely associated with the growing pains of a decade long massive release.","btw, your best reviewer for dom issues is who is not at facebook but has great insight.","we have talked about having a separate owner for react dom from core which have similar issues.","computer science but the overlapping metaphor is interesting.","how to rerender a subset of components given a cyclic graph that has changes, without component finalizers (no sub).","good chat with today - about subscription-free relay updates.","...in combination with asm.js harfbuzz. i'm optimistic about getting a standard api though.","3) react could time slice work when it is yieldy. otherwise it all needs to be synchronously executed.","this js loading talk by should be watched by the entire js community. the popular direction hasn't worked for us.","another rationale was: it is easier to learn one rule, than exceptions. only html dom experts suffer, not n00bs.","excited to hear talk about gl-react! this is an area i'm really excited about.","does google have any production apps using it? would be cool to see real life metrics/usage.","companies and conferences should talk more about tech recruiting. everyone deserves this baseline. like is going at","you see user writing code using the library over time but they don't throw old code out.","the web has many sites that have no one coding anymore. that's why even trivial breaking apis are hard.","per user meaning coding the consuming code of the stable api.","codebase size per coder is a good metric for stability req. many small well supported projects can still move fast.","specifically, the compatibility between two major versions is hard to follow. needs to be baked and designed first.","i'd recommend sending a pr for the babylon parser. difficult to extend syntax which is why jsx ended up everywhere.","that is kind of the point. to make it searchable by security auditing experts. the __html wrapper is also part of that design.","there are many concurrency primitives which let you control scheduling (easy) but not many tools help you pick/design the schedule (hard).","i'd argue that's because dx is a first class and (relatively) top priority in the design process of elm.","if you work hard enough it ends up being pure in the end. the question is what drives it. i thought of redux as being driven by dx.","it might actually matter to mental models. some people have a mental model that the code is created in the func object.","not the only one. every dom api needs to be wrapped in async+serialization. you need cross-worker packagers etc. lots of infra.","working with vendors to figure out if we can get text shaping apis. glyph positions a la harfbuzz. missing piece.","we're working on figuring out concurrency as hipri. compositor workers seems like the most promising for the web.","alternative wording: academic experience.","abstraction experience (ax): when you design from the purity of abstraction first, over user experience or developer experience.","say what you want about \"javascript fatigue\" but that is a very catchy slogan. makes it seems like it is so concrete.","with no jsconf.us nor jsconf.eu this year. what's the biggest generic javascript conference in h1 of 2016? worldwide. looking to do a talk.","check list for react profiling: 1) test initial render. make sure you test this properly. 2) use a production build. 3) consider windowing.","most people don't think that they have a problem until they see the alternative.","not as common as the opposite but they are prevalent. there are also natural shifts of team members within a project.","i'm reading this in a fork of webkit which is a fork of khtml. most people didn't see that coming neither.","that's what open source is all about. the ability to dethrone, if the ruling few are no longer appropriate.","i see the react team's role is to coordinate different opinions/ideas from many sources. what we land is ultimately a mashup.","you'll be much happier in your work if you accept this as your primary job. the \"fun\" stuff of creating beautiful abstractions is a bonus.","engineering work is primarily duck taping (configuring + creating adaptors) of existing systems. we kid ourselves thinking it is secondary.","just made it up. instead of rendering (\"reconciling\") all components top->down at once in a single pass...","definitely. that's kind of a given for any interesting compiler stuff that they'll bail out for non-functional components.","starting to realize that react requires a multi-phase pipeline reconciler to take advantage of simd (on the gpu or cpu). stay tuned.","a compiler can generate an equivalent shorter function and be sure that behavior won't change.","allows compiler optimizations. difficult to now because it requires extensive escape analysis to see if it might be introspected.","i wonder if it is time for react elements to become opaque... effectively `<component a={1} />` becomes `component.bind(null, { a: 1 })`.","rust is well designed around known patterns for low-level memory management where as swift relies on a primitive ref counted gc.","reactdom.unstable_rendersubtreeintocontainer(...) that's what it is for.","they may just optimize tail recursion or something. not really an exhaustive test.","i did this in the very first react app to make composable charts. doesn't work with levels of abstractions which i want to fix.","it may not need to bundle the dom code is all.","would be neat to get the source line/column of a function, and building custom cheap \"async\" (continuation) stack traces.","i'd appreciate feedback. i like your approach of making explicit too. we'd love to see you contributing some findings upstream too.","the point is that you don't have to create your own project. in fact it is easier to build momentum as part of something greater.","how did i build a career from open-source? i contributed to someone else's project and made it incrementally better. several times over.","too early to tell. we'll have to see what happens as the spec progresses.","programming should be 80% macro-expanded in an optimizing compiler vs 20% runtime code. dynamic languages are currently about .1% vs. 99.9%.","most jobs/services are designed around a std schedule. it's not about forbidding work but redesigning that system.","try using the menu item instead of the keyboard shortcut or another way to get to the native search. broken.","wanted: let js respond to find on page (f) searches. infinite scroll / canvas content has been broken for too long.","it says that wc has an overly complex children model that is incompatible with react's simpler one.","web components figured out how to integrate with the dom, but not among frameworks. no guidance.","nice idea but disagree that web components addressed any of the key issues of ui framework interop.","it does well at providing the base line contract for a component ecosystem.","shouldcomponentupdate is nice when you need it.","not redux per say but that problem space is certainly something that should be solved in react core.","so you're both right. need a convention for that though so currently semver is broken. might try that in a future react.","do you include webgl in the <canvas> api or do you just mean the 2d context specifically?","+ web driver tests + dogfooding internally. unlike many other companies, we run master on all fb properties in production.","ha! no, this affects a lot of dependency injection patterns in js. e.g. reusable react internals for different renderers.","i.e. does the instance matter for optimizations if the source function (the factory) is the same?","vm experts: are polymorphic closures like`a=x=>y=>x+y; hi=a('hi'); two=a(2);` optimized as a single subroutine or two separate? cc","prediction or causation? that post sparked the initial popularity boost of react. it's a self fulfilling prophecy. :)","not public but looks like it will likely merge w/ react core. i think we can make incremental work.","agree. it could be built on top or below though. e.g. react native.","designed to build products first - community second. keeps us honest. will be replaced when something is significantly better.","i think you overestimate how much react is influenced by the community's requirements vs. the requirements of facebook.","class { foo() {} } vs class({ foo() {} }) standards might hint what optimizations should be prioritized. not syntax.","syntax never unlocks compiler/jit optimizations but it might make it easier for the author to predict them.","...you won't automatically survive. if i put you there with training and some good tools on the other hand.","elm is designed as a dev friendly type system but is inferior as a high perf type system. not generic.","redux seems very purposely designed for dev reloading. unlike erlang which is designed for prod hot reloading.","web components could potentially be extended to that but the paradigm is really traditional imperative oop, not new.","just making things pure doesn't make that automatically happen and makes other unknown problems harder/slower.","a constraint only comes with benefit if you're actually going to use it for something concrete. eg optimizations.","that's why i think that custom low level implementations of layout and drawing will be replaced by component oriented programming.","a component isn't a kind of class nor just a function but, like them, react components are at the level of a programming language feature.","unless you count react as a library. :)","we have plenty of obj-c devs and client-side library code that would love an opportunity to run on the web if viable.","to be fair, that's largely because of the higher start up time of asm code and abstractions that require threading.","yea, you'd have redesign the api enough that it might be equal at that point.","weak wasm->js handles + strong js->wasm handles possible. possible to build an idiomatic ref counted api w/ those constraints.","i don't like when platform limitations affect language design/choice. creates unnecessary fud. ios's anti-jit limitation is bad enough.","poor dom/js api interop without shared gc. still doesn't help dynamic code like js/dart/closurescript which was the second point.","however, i'm afraid its absence will set back dynamic and gc:ed languages for a few years as other languages get a leg up on the web.","i'm really trying to bite my tongue on web assembly (initially) not supporting dynamic jit + gc primitives. i don't want to derail the mvp.","to many people means: client-side instead of server-side, js instead of java etc., compilers, npm, node, babel etc.","except who thinks that taylor swift is somehow related to apple's new language.","apparently the entire react core team supports adele and taylor swift.","in pretty much every oo ui framework a child component is created and then added to the parent. it is the opposite in react.","however, a forgotten interesting innovation is that parent components are initialized before child components.","it turns out to be the other way around for something. e.g. low level immediate mode drawing apis like gpu drawing...","the whole website was created in a different era with a different target audience in mind. needs a major overhaul.","we can build safe patterns on top. our native teams use it to great effect. play responsibly.","the high latency + lack of shared memory of web workers make them poor choices for this.","the plan is to move rn to target an npm version of react. might mean github repo or npm prerelease tag.","is the lorne michaels of web ui engineering.","lots of code to clean up.","i think the react native module system is legacy from the earlier drafts. i'll make sure it changes.","given that some backwards compatibility with some commonjs modules is important since nobody uses es2015 modules yet.","how would you suggest that a system than wants to be es2015 future proof handles `this`? a \"commonjs\" mode?","would be interesting to see a table over that. for example, in react native `this` is the global object like es2015.","maybe they'll use an npm module registry, which might be even worse in node land where you might have two different copies.","what if you had two presets there? which transform will babel use?","how will babel find and distinguish them when they're in nested node_modules?","you still have to npm install all of them individually don't you, so why have a preset at all?","angular isn't the problem. we just build stuff trying to solve problems. polymer could use some counter pr maybe.","as that context grows beyond components in react, i've started thinking about them as \"anchors\".","i'm focusing on core/simple ui components, yea. i can imagine there are other problems where push is suitable.","as an example, stream image buffers, decode them in a map() but prioritize updating the one which the user hovers.","not just total usage but the management cost of that memory is paid upfront. react isn't optimal neither atm btw.","conceptually they're not similar but they both share the push impl. detail of subscription wiring. react tries hard to avoid it","we've had several major issues at fb w/ code that throws in dev. nobody notices what happens when the code proceeds.","too slow/bloated to run in prod and too dangerous to \"throw\" in one but not the other (codepaths not being tests).","should also have syntax alternative for syntax zealots. but yea, this is what i want to replace proptypes with.","should be warnings that can't be \"caught\" and are stripped out in production code. also lacks complex/imported type parity.","i believe react's context isn't properly implemented to guarantee the property we want, but conceptually.","this is different than say angular's scopes which truly is dynamic scoping, e.g. js's with statement.","react context can be known statically. it's nothing more than dynamic dispatch: a=b=>b();c=()=>123;a(c);","optimize mutable defaults - step 1: expensive escape analysis of what *might* get mutated. optimize immutable - step 1: proceed to step 2.","that was my first word but i'm currently using it for perf testing / optimizations which is not quite the same.","the bisect is the most important and avoided technique in programming.","i'm really interested in better a11y apis but especially unification with react-native.","@tomekwi_ not rejected. likely to move to stage 3 next tc39. pretty sure babel 6 supports it. not sure about your issue.","we're not better off than if every browser just included the open source sqlite and then forked as needed.","like, many native apps doesn't use any of those. meaning to build a product you don't need them.","it's still huge and lots of people get good use out of it. you could fork it. underlying tech is irrelevant.","look at wordpress for example, it has ios/android/web targets. it's a non-standard platform.","you're chosing a particular layer but look at the tech stack that makes up v8/chromium. it uses non-standard tech.","...and if we didn't have companies interested in building closed source platforms, we would gravitate towards the foss model.","that's when forks happen, like blink for example.","jscript was closed source and not cross-platform. do you realize how much has been built upon open-source and cross-platform?","the practical difference, for building on top. i think the practical difference might be that standards is slower/worse.","for people building technology or on top of technology, is it important to have a standard?","before the next standard arrives, a cross-platform tool will be available that you can use instead.","another example is babel, you're better off versioning on babel and its bugs than waiting for standards to be finalized.","http. spdy and other cross-platform network stacks are better as long as you deploy versioned systems on both sides.","right. people do that all the time. e.g. facebook's native apps. works better than the standard.","even so, why does that matter? whether it is designed or not doesn't indicate whether a feature is good or not.","why not? you can chose to go platform dependent or platform independent. react native does both.","you assume standards doesn't have bugs? standards are sometimes created too early and become under-designed.","because it can target the standard platform + at least one proprietary platform. it's one more than standard.","if i use a cross-platform framework that does well at tracking proprietary platforms, why do i need a standard? xplatform > standards?","so cross-platform is better than standard because it can target standards and beyond?","lowest-common denominator is a common trap when you build upon a platform. when you replace from a low level you avoid that.","what about cross-platform that are not standard? like react-native or qt.","under-invested is probably often accurate. the stack that modern browsers like chrome build upon is far from crappy though.","what's the practical difference between \"cross-platform\" and \"standard\"?","downstream effects on debuggability is something i've learned to focus on. when shit happens, will this affect time to fix it?","there seems to be a optimism discrepancy between vm engineers and js practitioners regarding a vm's ability to optimize important patterns.","fair. react doesn't use \"just js\" neither. we use a declarative subset (free of side-effects + idempotent) for the same reasons.","i remember like it was yesterday. [because i'm pretty sure there was at least one yesterday.]","it's difficult to make a micro benchmark. a common js impl is typical. it executes a lot of lazy functions from a single caller.","either one. the compile script should be showing up all over the timeline since lazy functions get compiled as needed.","it seems the chrome js profiler is attributing parse time, of a lazy function, to its caller! very misleading for init load. cc","...or a person on a bad connection that prefer apps to start up resiliently in offline mode.","basically we agree with you and are building modern minifiers that can handle es6.","minification using babel 6 plugins means you can opt-out of transpiling es6 features and minify them instead.","that seems odd because the shared code *should* mostly touch the \"internal\" class instance which is the same.","...in vms. just because there are bugs or non-compliant cases in babel doesn't mean you can't write es6 in it.","my favorite javascript repl/playground/fiddle is `about:blank`. great work, everyone involved!","react.children.toarray(children).reduce()","i.e. it would be nice if nobody used shims but as long as some do, then the benefits disappear.","one counter argument: if anyone in your npm stack and/or anyone on the web uses shims, doesn't that invalidate several arguments?","javascript keeps winning in the areas where it is winning, because it keeps winning in those areas. accounting for the soft considerations."]