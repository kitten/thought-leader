["i've been working on some material to introduce react concepts as a design system that can be used in any context","i thought observables were a first class citizen of angular templates, i don't know why you'd need to unwrap them","so you're unwrapping an observerable series of promises?","yarn will continue to push javascript package management to be better","no one can reach in an rely on that css accidentally. you can see and test all the possible outcomes within your component","yeah, but when your css lives inside your component, the problem is well scoped","i tried for years to enforce things with tooling, i was never successful.","anytime a person is writing code something can and will be screwed up. i wouldn't try saying otherwise","media queries make more sense as part of the tree, allows you to shift things around in more logical ways depending on the device","quote tweets were the worst thing ever to happen to twitter","i just don't think that selectors (aspect-oriented programming) maps well to a fully componentized system","straight cis rich able-bodied white men represent the most privileged members of society not that they are universally aggressive","how is writing less code a solution?","*writes app* *wow this is a lot of code i've written* *wow app is now slow* *code split* *wow app is now fast*","this isn't necessarily to say abandon your tools, the platform, or the language.","at a certain point it's a foundational problem: the tools, the platform has failed not your team","but i do think that stylesheets are consistently one of the biggest problems with junior people in js app development","a point a lot of people miss about css-in-js is that the perf problem is fixable, with stylesheets the maintainbility/scaling issues are not","btw if we don't then only big corporations will have this tech working altogether competition on the web will be badly hurt","i'm gonna optimize you out sucka","there's tons of people that want this, i'm waiting for to come show me how to run `ember server`","the web platform can include compile time tools and i'm arguing that it *should*","the bad news is that if we leave it up to separate companies, they aren't going to come together, its not going to be the web as it is today","the good news is that there's enough money to be made in productivity boosts that companies are just going to build all of this anyways","the only reason this is controversial is because it doesn't exist yet, because we need to build it together, we need to pool resources","we don't have to sacrifice accessibility, its improved by tooling that understands your components and can tell you exactly what is wrong","we don't have to sacrifice learning, its improved by making unified tooling that works out of the box w/ components that are used everywhere","we don't have to sacrifice inspectability, we can actually improve it by providing more information to devtools.","the web can be evolved outside the browser, that *is* an option, and we don't have to sacrifice the things we like about the web","it would be so easy to make happen too if we all decided to work together instead of in different directions.","that's the web that we should be building towards. that's the fastest, most productive, most accessible web that is easiest to teach.","that's only possible if we have a really good component model, standardized build tooling, and super high quality static analysis","all through tools that look a lot like sketch, but backed by your app's code. when they are done they have a diff to your app","designers can compose components together, style elements, even generate stuff like graphql queries...","but since we also know so much about your app, we can build tools that generate code through design interfaces.","because we've standardized around a component model, we've also improved communication with designers. we can speak the same language","but this goes further than code optimization. you'd be surprised about how much of your job can be automated with tooling","the rest we can tell you about, we can assist you through optimizing your app in very specific ways","because our tooling understands that we're building applications and everything that goes into it, we can automate certain things","it can also report it back to you, you have tools for seeing errors and performance metrics around the world","your app reports back information about how it performed on the client, it can try different split points, optimizing it more","when we deploy our app, we have an asset server that understands our module graph from the compiler, it can keep optimizing...","devtools can help it do this, it can emulate different environments, phones, tables, cell networks. providing seed data to the compiler","the compiler starts to make decisions though, it knows that it shouldn't split *everywhere* it can, so it picks the best spots","our app gets too big for a single file, devtools tells you to start introducing dynamic `imports()` so that the compiler can code split","we continue in this way, our app grows, our compiler keeps up without tuning it further","we start to write more code, we create a second file with a second component. the compiler updates, devtools follows","not just sourcemaps, our compiler gives our devtools all sorts of information about the source. devtools are an interactive extensible ide","our browser devtools are integrate well with our compiler's output, debugging is optimized around the tooling everyone uses","you run it through a single command `runcompiler -w app.js` and open up localhost:8000 on your machine","you create a file that has a single component, you write your <h1>hello world</h1> inside","as the web has become more app-centric, new apps are started with a single component, instead of a document","our component model has stabilized (just look at how similar glimmer is to react-esque)","we've built out all the compiler tools, we've managed to get them playing together nicely. babel/webpack/prepack/etc are fuzzing into one","let's imagine a few years from now, the web ecosystem:","the rules don't apply to me john","you got your bro all up in my js","this is a huge step forward for compile-time tooling and runtime libraries alike.","but in both scenarios we get a lot less code that needs to evaluate when your program is actually executed because that part is already done","we can optimize all sorts of things this way. for example, css in js could be pre-evaluated and extracted trivially","that's a different kind of tool than the one i want to build","there are certain things that will never be promoted to the browser and that's okay","the people who strive for zero build step in the browser are silly silly silly don't quote tweet me","i wish mdn was turned into a platform for all languages, it's the best way to do docs for a language imo","it's unrealistic to strive for zero-build systems. for one you'd split the node and browser ecosystems up entirely again","unrealistic to expect the ecosystem to build out custom tools like that for every use case","gulp doesn't have the right toolchain to build the kind of ecosystem you'd want from something like this","design it to be run continuously so that it's authoritative","i do have another one of these code guides about algorithms in progress... i need to get back to it","my projects code of conducts have a bite. do not test the boundaries.","if you violate the code of conduct and i'm friends with your boss/coworkers, i will tell them","i reserve the right to ban you if violated the code of conduct even if it was years ago, before the project even existed","i reserve the right to ban you if you violated another projects code of conduct before i've ever had to interact with you","i reserve the right to ban you from my open source projects if you violate the code of conduct anywhere online or offline","map/set might be the most useful language api additions in javascript in years","it would compare types sure, but it doesn't \"learn\" anything new across module boundaries. inference only happens locally","the only way anyone is ever going to allow android apps to run on another os is by forking it. that does/has not end well","react native might actually be the best shot we have at creating more phone oses","npm's website has a number of issues with correctly displaying readmes","tribalism in programming communities is stupid. none of this matters, all that matters is our great god, ginuwine. praise be","why are they hard for new development","\"flow: mixed vs any\" \"the typescript and flow comparison no one wants you to hear\" \"cold reloading is cooler than hot reloading\"","\"snapshot (almost) everything\" \"security incident theater\" \"avoiding the async component cascade\" \"argumentative diving\"","\"teaching how to teach\" \"layering virtual doms\" \"optimizing framework specific code with babel\" \"flow and the future of javascript\"","a lot of more junior devs struggle to grasp this, it's not until you've seen lots of your code turn into \"tech debt\" that it really clicks","but this struggle is super valuable. code is way more resilient when you force yourself to solve problems operating within strict boundaries","i see this frustrate a lot of people who don't understand why tool/library apis are so strict they struggle to solve things with it","one lesson you learn in api design when it comes to planning for the future is to be a fair bit stricter before you need to be","a lot of my decision making when designing tools revolves around the tools that will build on top of it","i think you're probably projecting your ideas onto what i want to build. i don't think there's much overlap :p","not a freeform design tool. you would not use it to come up with entirely new designs, you would be composing/editing existing ones","i should note that i mean design tools that are tied directly to the components/utilities that developers created previously","is it? do you work directly with the code that other engineers developed as libraries?","my team at is starting to work on tools for component frameworks, i think this is an important next step","i think it would be (relatively) easy to build design tools that are backed by code. you just need a little bit of standardization","react components (props, state, events), graphql queries, data selectors, inline styles, and flow types","i really want to build a design tool where designers unknowingly work with declarative tools in the react ecosystem including...","i really wish had code blocks","doesn't the angular community mostly use bower?","i worked on the flow team at facebook btw, that was part of my job","i've not done any cold calling like that, but i have worked with lots of people to introduce flow into their codebase","don't worry about it, getting used to ast apis like this takes a little while to be productive with","at this point i'm not sure anymore if your eye rolling is just disapproval or an actual medical issue","okay then .babelignore","you're missing an .npmignore","most optimized output for jsx is objects, most optimized output for css is strings (to avoid double parsing)","jsx does not translate to strings in any implementation that i've seen","jsx does a lot more dynamic composition","i'm gonna have to make an orm for css-in-js libraries","are you involved in every css-in-js tool? are you collecting them?","dont @ me or my javascript library ever again","and i don't see why the editor integrations can't be powered by typescript while using flow","javascript using flow","i think we can greatly improve these tools in the javascript ecosystem, and unifying them is a pretty sensible thing to do","in the coming months i hope to experiment with a next generation compiler which is compatible with how babel works, but takes over packaging","the hardest thing with the babel transformation pipeline continues to be that anyone can extend it and do whatever they want at any time.","i do, i spend a lot of time teaching people about compilers","babel is a general purpose compilee used for many different tasks, the most specific you can get is \"code transformation\"","i'm telling you all of this because what is happening to me is normal.","the reality is that there's nothing i can do about this. it's happening and all i can do is stay calm.","if you're writing a babel plugin, you shouldnt be looking way up the parentpath chain to find a specific node. you should be starting at top","i (finally) was officially approved for an australian work visa! can't wait to move there and join !","does the \"platform\" even have primitives for modals or tooltips?","codebases with the right boundaries are the ones that are most malleable. the inverse is certifiably false","have other platforms figured it out? i don't see that","if a decent designer spent even just an afternoon cleaning up the gimmicky visual design bits on linkedin i would like the site 1000x more","could you not use weakmap/sets to fix issue with relying on js that you were describing?","just make your own browser dude","the twitter app keeps turning off night mode","glitch seems like it will soon be my ideal teaching tool. i think that's the best way to share","for anything other than simple websites, that seems like a giant dead end time sink","...they use things like jscodefiddlepen and other zero setup editors to learn","even for beginners i don't think that's the case. i don't see beginners using view source on random webpages...","i don't think there's much value in viewable source code on the web, people just romanticize it","electron apps are going to kill all of their native counterparts, it's just a matter of time","if it fails or changes, i'll write the codemod myself (unless someone beats me to it)","oh man, i just got one step closer to being approved for an australian visa. i should find out soon!","it makes no sense not to build 99% of desktop applications using at this point","the total ecosystem has 3,341,388,557 downloads from npm","software ecosystems don't exist without maintainers either though","there have been over 1.5 billion downloads of plugins from npm","all code is an escape hatch only to be used when needed","who could've seen this coming? facebook is so secretive with their announcements","down with all google products","babel has not changed its api in over a year","declare module \"foo\" { import type react from \"react\" }","theres this tool a friend started a year ago that hasn't been open sourced yet, but i can't stop thinking about how awesome it's going to be","i disapprove of everything that i do","i still go out of my way to correct people who attack npm in promotion of yarn. i don't think it's necessary, and know how bad it hurts.","i want people to take note that we were very careful to make sure that we weren't trashing npm when we launched yarn.","the axe forgets, but the tree remembers.","tell your designer ryan i said hi","americans: without looking it up what is the capital of australia?","ooh and babel helpers","syntax-based tools generate lots and lots of tests","i have not once gone to use str.includes() and not typed str.contains() first *shakes fist at mootools*","what is this with needing names, code is just math, all my variables and functions are one letter","it is fucked up that the person who has on github doesn't even write javascript","i wanted to build pretty much this at cloudflare when i was there, maybe my new gig can work on it","i feel like that immediately requires more than just css to manage layout","it's weird starting to think about open source projects in terms of how much they cost to build. it's way more than you think at first","but now we're running into more and more limitations from the web platform. we need a better base to build upon","the web community is what lowered the bar, the community has picked up the slack and improved things incrementally over a decade","that \"how\" did not come from the web platform, it came from the web community","the explosion of apps on the web in the past few years is not cause suddenly people need to build them, it's because suddenly they know how","there's multiple kinds of success, the web is failing in others ways and it is costing billions","then i guess we'll see who out optimizes the other: humans vs machines","the web is a compile target, not embracing that hurts it","which is even better solved by compilers and inline styles","that's mostly because we haven't built js rendering tools that can stream before the entire page is rendered.","there are additive features, but i can't suddenly add my own things to the web that aren't otherwise possible.","i don't think web components makes the web any more extensible, just prettier in dev tools","i mean in terms of web apis, ^ this has nothing to do with glimmer now, just related thought in terms of design progression on web","for some reason the interaction between client and server is strictly designed as a continuous string, but then creates a tree.","right now there's a lot of handwaving_instead_of_clean_api_boundaries.","i want clean boundaries in react's source between feature-sets so that i can use and contribute to them independently.","it's funny how i discover every single time someone uses spectacle-code-slide because of the inevitable tweets asking what tool they used","the typescript community is a really nice one, but only when you agree with them","literally @-mentioned claiming that i talk shit about typescript when i don't. i've been extremely fair to ts. i've helped push it before","i'm regularly (personally) insulted by typescript users for comparing flow and typescript unfairly.","in a thread about how the typescript community keeps treating me shitty i'm having typescript pushed on me","i keep talking to new super helpful and nice ts people and getting excited by new projects, i really appreciate a number of them","i've used typescript and vscode a lot. i enjoy them both, they are great tools. i want to help them","every fucking time i go to help typescript people i get shit shoved in my face. i'm sick of it","i see typescript users complain about flow users all the time. this is the first time i've *ever* complained about typescript users.","more specifically to start insulting the *people* working on babel. it was needless and cruel and i'm still pissed off about it.","i was really excited by typescript a few years ago until one of their team members decided it was appropriate to start insulting babel","i'm so excited right now, but i open up twitter to \"fuck flow\" tweets. why should i not want to rip out all the typescript shit?","awhile back i was really excited to work on adding typescript support to babel. that excitement was completely undone by an asshole","you might disagree with me, but stop being dick heads. i want to build stuff that helps both of us but not when you behave like assholes.","it's interesting how often typescript users shove how awful flow is in my face while in the same breath saying flow users are the mean ones","i want to eat food but no foods are appealing to me right now.","react and glimmer seem to be the two best models for approaching this in terms of ir","ssr, testing, alternative rendering engines (the web needs to get better at interoping with native views)","server-side rendering makes it a non-starter for anything but a higher-level library to be built upon","i need someone who is really familiar with typescript (especially .d.ts files) and asts to help me with a new project","it should be designed to mimic all the good parts of stack overflow, specifically how to decentralize things away from maintainers","woah, you built the html periodic table? i used to use that all the time","please remember the police brutality aspect of this attack. officers had no reason to physically assault him and should be charged","those 19 different syntaxes aren't hard to teach either, they build on other features.","because it's more natural to use, ive taught new coders both and they have an easier time with es modules.","that sounds like the best way to do it for smaller projects, larger projects can build products around it and get companies to pay","more and more of them will start to come to us once they know that's an option. that already happened the other day","common js modules are anything but beautiful. practical for the time yes","spectacle code slide","for the record, i still sometimes get frustrated enough by code it makes me want to cry (never tried baby oil though)","working on it, taking forever to get approved for visa","interviews need to be designed to be flexible enough that someone can show off very different skillsets","that can come in planning, design, architecture, development, maintainence, whatever","i'm writing the printer myself for typescript, using babel-generator for flow","when do you need to do this that having a higher order component doesnt solve?","yeah, extracts typed exports of a library and creates flow & ts libdefs for them","oh wait, i didn't read this thread. that's not what this tool does","does webpack support tree shaking with common js modules?","yeah, probably good to customize based on individual api calls even.","interesting, they should just copy what they do natively","why must this tech bro ruin my coffee shop","apparently you're supposed to take your pets in more than once every two years","component(counter) just turns it into a normal component","this isn't using reason internally, you use this the same as any other component","note: this is just an experiment to see how we could rip off reason's react model","who wants to give me a few million dollars every year to make the javascript build tool chain not suck?","i would prefer fewer, makes it easier to build tools on top of","was using the js api though","i just used a react component that would only render children when a media query was matched","i think we can build a better prioritization model than \"just start loading everything at once\"","<style scoped> is exactly this, except it's broken in modern browsers still (chrome)","documented-oriented sites can be explained in terms of components, app-oriented sites cannot be explained in terms of documents","this circles back into my theory that the way that we think about and teach the web is fundamentally flawed","it's kinda amazing that the same people pushing these standards freak out when devs using component libraries say they hate css selectors","even the standards recognize this. <style scoped> and web component's :host would not exist otherwise.","css isn't broken, css selectors are broken. made sense for documents, don't make sense for components.","as put it: macros in js are a phd problem","webpack does not have macros","you are incorrect, code that works as intended in a maintainable way is not tech debt","nope, this makes it easy to write your code in flow and make it consumable by existing typescript.","the tool is to make the inverse easier","sorry it's not for migration between the two, its for writing code in flow and building type defs for ts","there's twitter clients for that","well then they ain't usin every optimization trick :p","it's been on every platform for like a year :p","glimmer templates vs react jsx","itd be easier to build from the ground up. id rather do it as part of moving to a diff lang","finally we can talk about the merits of glimmer vs react without people bringing in noise","they basically open sourced a new framework, ember lite","also a lot of the tooling that people build on babel is often more than macros could handle","babel would not be capable of creating macros","i just want all of this built into one tool already","styled-components/polished works on node too","the compiler is an optional piece to get rid of the runtime cost","the ability to hack away at problems without worrying about adding massive technical debt is amazing.","you wanna know why others can't compete with babel?","not possible with babel though since it only knows about a single file at a time","alternative would be if there was a shared module which could share whole objects","that's the job of an optimizing compiler","feminism challenges everything that (most) people were raised to believe about gender. appealing to people can change minds","oh cool, i was just wondering because there's likely a lot of other tooling that would rather consume this as an api","lol, design team of one: me","coffeescript isn't statically typed","i've been told the vscode plugin api is really limiting","i did, using vscode lately","(and by designed, i mean i took bootstrap and added colors and pictures)","(i designed both of these sites before anyone freaks out)","i'm mad as a maintainer that was pressured into giving my code away to another project only to have this license slapped on it","happy to, me@thejameskyle.com","webpack is welcome to steal any ideas i come up with","facebook's need to put everything in monolithic apps in order to be successful doesn't seem like a comp. advantage","after trying to hack on webpack plugins for awhile now, i kinda want to set webpack on fire... kinda","having that big of an app a single connected entity has its unique challenges","webpack would not work for facebook","i think more infrastructure at facebook has been developed for wrapping dependencies together than separating them","boundaries are important, even within the company. look at how instagram avoids ui components that aren't externalized","facebook fundamentally doesn't understand that in a lot of its open source.","there have been people following users around github to harass and threaten them. same way it happens anywhere on the internet","if you're considering being abusive to people on github. remember github will take down your account. have fun explaining that to your boss","trust me you do not want a library with a million custom hooks for every use case. you want a library with a handful of really powerful ones","i can make smarter decisions with more info. if i'm requesting more info, i want to know cause i can build the feature better","i'm moving to twitch for gaming and i'm going to enable ad blocking exclusively for youtube and google","kinda want to do a livestream of me coding a babel transform. i have so much fun doing it","yeah... gotta get around to finishing that. the code is already complete","i would have to look again, i don't remember","i don't think my \"super tiny compiler\" guide took away from the sales of the dragon book","i guess you could say i care about my direct users which are (mostly) developers","in react-loadable, the component has nothing to do with how code splitting works. it just makes it convenient","also, easier to understand tech gets more adoption. confused slows down growth","truth be told i don't give a fuck about your business. i didn't give a fuck about facebook's business, nor cloudflare's. it's a fucking job","can we have cookingjs? cfp's open, i'll review","i never know what i'm clicking on when i mix tech twitter and gay twitter in my timeline","pshhhh no i definitely deserve the credit for the rise of react","the reason i have enjoyed react more than other frameworks is because i have felt more empowered as a community member.","the difference between react and other frameworks is not that we have any less figured out","just because a tool isn't as popular as another doesn't mean it can't contribute huge things to the community.","it's not cool to shame maintainers for continuing work on their tool because you think the new hot thing should take over.","who is selling babel shirts?","don't use redux until you feel pain","if anything it is the opposite, less experienced users default to using redux for everything when they shouldnt","i do a lot of work in education too. maybe not to the same extent but i've taught react to plenty of people","wish there was a way to syntactically indicate priority in dynamic js imports so you could make better decisions about what to load eagerly","the reason i'm naming things the way i have is because i'm willing to optimize it for every tool","the library should not be webpack specific","that's more a unicode question me thinks","good afterparty at react conf","great times at react conf","we're going to meet in the reactconf lobby, i have a room","is reactconf memeing right now?","what's the correct way to tell that code is running in node and not webpack or browserify?","i never used it, i've heard description s","how i broke everyones productivity in 110 lines of code","<script src=\"webpack-runtime.js\"> <script src=\"bundle-2.js\"> <script src=\"bundle-1.js\">","require.id is needed for client, then all we need webpack to have a seperate runtime","javascript is solved","i didn't say require.js was perfect but it had this particular problem well solved. don't well actually me bitch","no but really, require.js solved this like 80 years ago","i got as far as you at 4am last night when i was trying to finish this blog post. it's just code, it's all solvable","are you fucks ready for some pre react conf thoughtleadership","there's a bunch of different tools that all implement the same algorithm. that locks us into that algorithm","would rather the package manager handle the resolution. run/build through pm","i'm more concerned that it blocks us from optimizing things more and gets in the way of building better tooling","react conf attendee friends, who is in sf already?","this is where npm and as a byproduct yarn fall short. the node resolution algorithm makes a lot of things observable","i should run a standard set of commands after cloning any project, get all of the deps installed, build, test, etc","application package managers should make code extremely portable.","cargo/yarn/npm all fall in the application category. cargo is more correct than most","i would break package managers into \"systems\" and \"application\" pms. there's a correct way to do both with varying quality","when removing a prop from a component, have you ever forgotten to go through every usage and remove it there too?","when i left cloudflare and said i joined facebook a number of recruiters emailed me to ask why i didn't email them that i was looking","not looking forward to all the recruiters emailing me after i change my linkedin to say i left facebook and not update it with anything new","i call this rage thoughtleading. fucking come at me and ill happily assist you motherfucker","ill just throw together some crazy ass babel bullshit.. isnt it amazing we have all these tools to hack shit w/","come with me and dance on the eternal flame of hacky ass shit that just happens to work while we slowly burn","i forgot webpack replaced all the paths. probably need them to build something. this should just work in browserify.","not if the module bundler can still require() it. i know browserify can do this, not sure about webpack","like i said, i can make it work today trivially. just need to think of the api. i can just add an argument...","server render shouldn't be sync, we need to fix that in react. i think i can make it work with this package though.","...based on how most uis are designed, this will mostly appear when a bunch of other things are being loaded at once.","there is no flash of loadingcomponent. this hoc delays it the first time (200ms by default), and once the loader has succeeded its cached","no, there's a delay for showing the loadingcomponent the first time, and the result of the loader is cached on success","i would use a higher order component that applies a loading component after 200ms","webpack can do that if it wants, but the standard shouldn't do that","don't rely on sync code","always async isn't the problem, doesn't have to be in the next tick to prevent relying on sync code","the russians own the \"internet developer rage trolling\" market","the twitter app just decided to start showing me how to use twitter like i don't know","facebook likes graphs, we should like everything facebook likes","this did not happen","daaaaaaammmmn ember bros can eat shiiiiiiittt","developers are the dumbest people","i don't know how that compiles, but the important bits are not possible without some crazy new api or syntax","yeah, the api memoizes the steps. i think if you called `step(2)` and `step(1)` hadn't been run you'd either run it or throw","the interesting bits about replaying here are based on 's ideas. the rest is just trying to marry good parts of existing apis","updated with better description","there's no `this` for one, members are implicit inputs","i knew this would happen","async functions do build on top of semantics figured out for generators","developers exaggerate so much in github issues, maintainers need to get good at identifying the liars or they'll make you feel like shit","you miss important points when you explain in the context of mydreamapp. but it can help you empathize","misguided examples are \"how do i build mydreamapp? here's some stuff about babel and react in the context of mydreamapp\"","guided examples are \"how to use babel with react, here's everything you need to know related to those when together\"","you should be able to explain the \"why\" without code examples, and you shouldn't need to re-state\" why\" in your code examples.","but also think that babel transforms are actually better for things that operate w/i syntax","i'm not against, it would just be so much work to make happen.","i'm talking about even smaller examples than that. \"how do i use this api?\" \"well first imagine you run a grocery store...\"","people wanted it in babel, talked to . realized he was a fucking genius for figuring it out","macros only work if everyone shares the parser. implementing macros is very hard in a lang like js","oops, missed this! could we get a bio (10-20 words) for the reactconf site & app?","advice for coming up with code examples: don't bother making up a backstory, it doesn't seem to help with comprehension and is distracting","what version of babel-preset-stage-3 are you using? object-rest-spread was moved to stage 3 late last year (6.17)","hi, could you dm me? i have a question for react conf","hi, could you dm me? i have a question for react conf","hi, could you dm me? i have a question for react conf","hi, could you dm me? i have a question for react conf","hi, could you dm me? i have a question for react conf","hi, could you dm me? i have a question for react conf","hi, could you dm me? i have a question for react conf","hi, could you dm me? i have a question for react conf","hi, could you dm me? i have a question for react conf","hi, could you dm me? i have a question for react conf","i sometimes call tech dudes by the wrong name to remind them they arent that important","we can't change the behavior of any existing javascript methods or data structures","javascript doesn't have data structures which are performant around immutability. that's why you need a library","um, who is the designer here again?","wait does javascript? i thought that was a cat meme account","what are the aspects of javascript that you like?","can anyone point me to code syntax highlighting themes which are great for accessibility and are pretty?","the assumption is often that web just did things wrong for no reason. not that there are requirements we need to reinvent for","i think for me its related to people not understanding the constraints of the web","it's amazing how often developers outside of the webdev community assume i'm an idiot and mock me","ember actually makes the manual solution here really difficult","i want to stream interactivity to the browser. but right now i have trouble imagining it with current paradigms","i believe facebook hires recent college grads more than anything else","it's more important for the ui to have the top-level of the application showing layout before content is loaded.","i'm mostly limiting the use case around being able to get parts of a component into something usable before it is finished.","it seems like the depth-first nature of react components would be overly limiting. i have trouble thinking about fiber though","it makes me wonder what an api for a generic rendering engine designed to be a compile-target would look like.","..especially (i think) around fiber (). but i'm also not sure if the primitives under there are an appealing compile target","there's an argument to be had that react should expose lower-level primitives that other languages could compile down to...","i was trying not to cry the other day when a javascript build needed to be added to a jekyll site i built","there's a secret society of queers in tech too. well... maybe not secret","ugh why do people not just build on top of all the work already abstracted away?","not everyone does, some people publish the source too as \"jsnext:main\" or whatever it is","would you also want to optimize around offline mirrors for ci?","it's what yarn installs from by default, it's just a proxy to npm","so i just put in my 2 week notice at facebook i have an exciting new adventure ahead.. its drugs.. im doing lots of drugs on my time off","did something happen at the oscars just now?","seriously... i started creating an atom grammar for jest snapshots cause i wanted highlighting in my snapshots for a new packager im writing","so i was really happy that they responded to it appropriately and very quickly without asking the victims to do anything.","i just got poked for the first time in years. on facebook i mean","we already prepared for this by invalidating tokens after use, which the npm client does not do","this had little to do with yarn other than the provider we use. if npm had been affected it would have had broader problems","clearly someone doesn't like happiness","don't worry, express makes a lot of people happy","new rule: if nothing happened, it's not a big deal","hi, i work at facebook. can you follow me so i can dm you?","okay, we've gone off track. i want to experiment. i don't want to experiment with someone else's codebase","to be clear, i would basically be asking for a completely different tool than webpack. it would not be compatible in any way","experimenting with completely different ideas on top of tools that need to be stable doesn't turn out well","i actually think it would be a very bad idea to try and build what i want to build into webpack","happily :) i spoke to too","packager not package manager","i'm not talking about package management here and i also don't really care about that","have a really good idea of what a next generation web packager would look like after talking to people. now to find the time to build it...","what's the package manager for?","you google full sentences?","the day that happens is the day i move every project off of github","it'll probably be in some random states who can be paid off to approve it","yup, so right now i want to be able to lazily-load nested components which don't need to be rendered until user interaction","in react i'm hoping for this to be promises as elements","each framework is going to have to define something as the point at which code can be split.","a component can be something as simple as a single leaf within a dom tree","i'm heavily focused on breaking bundles into components and working with trees to identify where they can be split","does libsass build into multiple files? i thought it was 1 to 1","at this point, i'd rather solve just for the tools & frameworks that i want to work with. react, ember, friendly people. leave others behind","it's actually pretty straightforward if you consider only the react ecosystem, but i really wanted to solve for the entire community.","designed from the ground up to scale for tens of thousands of files. designed to build highly cacheable assets. designed around components.","i've been thinking about replacing bundlers on the web for a little while with a compiler-server combo.","you would get the route based lazy loading by default, but also many more optimizations","i can see building something like relay/graphql for ssr/bundling component trees","react breaking things apart into components lends very well to automating this","if you lazy loaded the hidden components, you could bundle all the routes very cheaply","ex: cloudflare, not that many routes on the site, but a single page has many components","but not all of those components need to ever render.","yes i have built apps that are light on routes but heavy on components.","big things happening. huge. hehehehehehehe, you'll see... you'll all see!","for the record i just raised this internally for because apparently there's no block feature there either.","if you don't build it, you are supporting harassers whether you intend to or not. i'm looking at you","1. harassment does happen between coworkers - quite frequently","even at companies this is true as we just saw with uber. don't expect their hr/management to take care of it.","thinking about code saves me every now and then","this is already how layout works in the browser for the most part, just constrained to a tree","its like z-index, a better api would be describing relationships between elements and letting it resolve itself","i'd rather talk to my mom about a lot of things than search for it on google. there's something she offers which i value","make sure you aren't building a company culture where people have their own personal interests over the healthy growth of people around them","open up a dialogue at your company about what obligations you have, what things could happen, how you will respond","men and women all over tech are rallied up right now, and now's the time for them to go do things at their own companies","i think some of the responses of mocking male allies around this uber story is bullshit.","but no \"revenge employee site\" is a totally fair description of what i'm saying and not you trying to twist it","apparently the less formal way to say \"gay\" in chinese is \"\" which translates directly to \"comrade\". this makes me happy","you around on the 28th? we're having a docs marathon day for the final push before our new website","i know a number of people at uber. i wouldn't ask people to quit their jobs, but if you're going to stay you need to be fighting this.","i actually interviewed at uber last year before i ended up at facebook and rejected them before they even got back to me.","i just downloaded the uber app again so i could delete it again.","please do not criticize women in tech for not having the personality you want them to have.","...running more desktop os level software in the browser. i think that's important","if you started criticizing me for throwing books on the emberconf, i would have the same reaction","new twitter bio an anti-js attitude coming from someone who hates everything ;)","you main the devil?","from now on i'm only gonna use tools with queer contributors","gay twitter is better than tech twitter","not every component needs to be a splitting point. but allowing it everywhere lets you have the freedom to make smarter choices","routes may often be the worst way to do code splitting on","the difference i was trying to highlight is route-centric vs component centric code splitting","i don't agree, design frameworks in a way that makes every component a splitting point, no human intervention","it was almost presented like nuclide was the only editor that was designed to work for fb's codebase"]