["is there a web-based javascript repl that supports `import`?","also, ms is definitely pushing pwas forward. they're involved with manifest & auto-ingest pwas into the windows app store.","not sure what you mean. are live tiles web apps? afaik, they weren't even interactive until recently?","don't ask for permission? just help each other out, do code reviews, etc...?","there are 2 categories of programmers & you need both on your team: 1 senior mentors/architects/guides 2 feature-focused devs","arr.uniq is not a thing. you mean lodash? if so, to avoid the dependency in a small library. normally i'd use lodash.","modern js is compiled. typescript is a language with a compiler. it compiles to the js vm instead of the jvm.","it's an informed prediction. and imo, it will happen whether you believe in it or not. the web swallows everything, eventually. ;)","this is a prediction: the majority of native apps won't be able to compete, like the typewriter couldn't compete with computers.","including microsoft, facebook, apple, google. new players to watch: magic leap, meta","in a mentorship culture with lots of pairing and code reviews, even novice developers quickly become great assets.","web platform! = js. wasm is coming to webvr. mark my words.","heard of them, yes. they don't solve the problem of needing to write 3 separate apps for 3 separate platforms.","\"program to an interface, not an implementation\" applies to unit tests. don't test private functions. see \"black box testing\".","working on the job for 5+ years does not make up for lack of programming knowledge. employers need to know that you can learn (and teach!).","the original tweet is about how users find and consume apps, not how authors create them. you can build webvr apps with react.","there are aframe and threejs renderers for react. =)","prediction: the web platform will be huge in vr/ar. webvr experiences will be more common than any vendor-specific app store.","es6, works in all new browsers. fails in most old browsers.","simple math that most orgs and dev leaders tend to overlook. huge mistake.","google \"composing software eric elliott\"","i was wrong when i predicted that ar/vr was a threat to javascript. is bridging the gap. minutes to working webvr experience.","if a senior dev is not mentoring/pairing with other devs, you're wasting critical business value.","i don't think we'll see a lot of new native cell phone apps in 3 years. a paradigm shift is coming in fast.","gathering customer feedback & user studies. paring down priorities for upcoming work. prepping design assets for future work...","i've interviewed people with 10+ years' \"professional\" programming experience who can't code their way out of a paper bag.","you will always forget cases from your unit tests. pair them with code reviews to catch more bugs, sooner.","software developers write and fix bugs for a living. sometimes some software gets made, too. tdd helps.","people get upset when i say \"you need to know x, or you're a junior dev.\" interviewers don't care. you get paid less if you know less.","look for evidence that challenges your views. developers are particularly prone to familiarity, confirmation and overconfidence bias.","stop building new stuff now and then. instead: 1. validate existing features 2. burn down tech debt 3. burn down bugs 4. focus on perf","that said, too much mocking is a waste of time. mocking is a code smell.","what's a pojo? const pojo = { definition: 'plain old javascript object', example: 'you\\'re looking at one.' };","magic js spell to get better (not perfect) character counts for i18n/emoji. use the iterator: ''.length; // 6 [...''].length; // 3","yes. they're a current ecmascript proposal. rxjs 5 is good.","hmm.. the best resources i know on the topic for js devs are my blog posts. outside js, see tdd by example, kent beck","learning tdd with unit tests doesn't happen overnight. you aren't just learning how to test. you're learning proper app architectures.","literally every program you ever write is a good place to apply function composition.","pipe is standard function composition. composition is the essence of software development.","as you make your app more testable, it should also make the app simpler and more maintainable. tdd should improve architecture, not harm it.","i've seen lots of web apps with silky smooth animations. and lots of janky native apps.","i'm saying the sweeping generalization \"just say no\" you made is not always good advice. code should only exist if it adds meaning.","yep, but if you're building a new app, is it necessary or cost effective to build both?","developers love to learn & improve. training can help your team be more productive. why aren't you investing in it?","composition is the essence of software development. understanding how modules, functions, and data types compose is fundamental.","more code = more to parse. more code = more surface area for bugs to hide in. more code = more syntactic complexity.","irrelevant because you don't need special iteration code in that function. the details of how to iterate are irrelevant.","all topics i teach my js students in the first few weeks.","great developers don't sacrifice readability for the sake of dumbing things down. keep it simple, not basic.","i'd love to read an article about applying tjbd to software process.","mentor them & code review","mentor them & code review","senior developers: what is your biggest challenge?","or just browserify your unit test entry file and use a script tag to load it in an html file.","yes, of course. just create an html page that loads and runs your test suite like it's any other js file.","tried bundling your tape tests with browserify to get browser fs polyfill?","also, how do you properly type things like functor map with typescript?","did you happen to formally measure bug & productivity benefits, or is this gut feeling stuff?","this is a distinction without a difference on a powerlaw curve. remember the sample size problem. we don't know best or worst.","1000x value exists in tech headlines all around you. see instagram's 13 engineers delivering billions in value, etc...","it can. a 1000x dev can be a 1x contributor under poor management.","easy way to deliver tremendous value to your org: improve the perf of mission-critical apps. shave milliseconds off load times.","sure, but next.js is not at all like \"pre-made dough\". you can make any kind of app with it.","i love the tool support, but hear the unsupported bug reduction argument frequently.","at most large orgs, there are opportunities for individual developers to deliver $millions in value in the span of a week. look for them.","nope. employers will probably be impressed by how cool next.js is.","10x doesn't mean a dev does 10x more work. it means the work they do delivers 10x more value.","there is also an open proposal to bring observable streams to ecmascript.","streams of various types have always existed in js. currently, there is no stream type in es, but browsers & node have them.","npm install --save-dev watch","bare minimum: tape + nightwatch.js. next, add travis-ci. then sauce labs, then full cd, then coverage tool (e.g., istanbul)","is it possible to define kotlin types separate from the implementation code? the type syntax noise makes it really hard for me to parse.","there are good, dedicated tools for that..","debugging tip: keep your lint and browser dev console free of errors. bugs frequently cause/mask other, seemingly unrelated bugs.","nothing is a \"requirement\" by that standard. you can code without learning for loops or if statements.","great mentors are most cost effective when they're mentoring, not building features in isolation. you want multipliers on your team.","yes. i've seen many pick up these skills in a matter of weeks, with guidance from experienced devs.","every js app developer needs to know: -fp basics -objects: composition vs inheritance -async patterns (callbacks, promises, events, streams)","speaking of functional-isms in js, have you seen sanctuary?","that's just life in a dynamic, mutable-by-default language. you can't even trust `undefined` in js.","in js, purity is a graded scale, not a guarantee. js devs live with that reality and avoid creating impure valueof, getters etc...","yes, but as i mentioned, being this strict precludes reading any prop from any object in js (getters may have side-effects).","you could say this of any input value to any function in javascript -- so, no js function is every *really* pure?","you also miss out on design benefits: forcing you to think from interface rather than implementation perspective.","nope. seriously not a waste of time. there are still cross-browser differences at js level. e2e too slow for adequate coverage.","that said, for some form manipulation, redux still has advantages. undo / redo, persist partially completed forms, etc...","when you want to add instrumentation for code coverage & manage test runner config and browser running support in one config file.","what about it? what does this have to do with typescript?","avoid mysterious bugs with redux: 1. reducers are your single source of truth 2. no side effects in reducers 3. only reducers update state","life is simpler when ui components are unaware of the network, business logic, or app state. given same props, always render same data.","most effective ways to reduce bugs: 1 code review 2 tdd 3 spec/design review 4 pair programming 5 manual (human) testing","stuff that will help your coding career more than a degree: mentorship, cool projects on github, experience building real apps.","in npm scripts, npm -s suppresses the npm error message so you can see your real errors.","classes don't compose in js. decorators are a step in the right direction. for composable factory functions, see stampit.","when productivity suffers, great managers: * listen * answer questions * remove blockers * encourage pairing * encourage pr & code review","unreadable code is a hazard to security and safety.","yep. they can also reduce defects. each hour in code review saves 33 hours in maintenance.","jr devs need near constant pairing and code review. team mentorship is a must, and should not be seen as an interruption.","globals are not the enemy. shared mutable state is. ultimately, most apps are backed by a global store (the database).","code reviews help junior developers ramp up quickly to the same level as the best developers on the team. (tackett and van doren 1999)","dev productivity killers: * notifications * meetings * emails * interruptions great managers block these. bad managers cause them.","no matter how good your code coverage is, bugs will slip through to production. is your user support / bug report process clear?","try again. looks like jsperf was just struggling to keep up.","api affordances are dev ux. they matter. class affords extends like balls afford throwing and chairs afford sitting. prefer factories.","i'm still using standard js. just using types for documentation and optional ide tooling.","hierarchies exist even in orgs with no hierarchy, but what happens is that they arise naturally based on earned authority","es6 tip: be careful with recursion. tco was never implemented in most js engines (including chrome).","respect is not something you can just expect or demand. it needs a solid foundation. a good manager builds that foundation.","unreadable code does not get maintained. it gets patched around, avoided, or scrapped.","dev team managers: developers don't work for you. you work for them. clear obstacles. supply resources. mentor. train. build trust.","presentation components should have no business logic, but that's not a redux thing. just an avoid spaghetti thing.","that is not my position. see facebook relay containers using setstate, etc..","also, setstate as the tool for simple stuff undersells setstate for enterprise app organization (e.g., facebook, netflix)","and there is nothing wrone with using redux for small, simple apps. it's a great tool to help organize concerns.","hmm.. i think some people under-estimate new user's ability to learn redux, and over-estimate how \"easy\" setstate is.","but promises are baked into things like the fetch api and async/await.","nah. i'll let `foreach` iterate for me. only write the essential code.","in javascript, large recursive dives will blow the stack. );","signs you need redux: * complex workflows * users collaborate * many sources of data updates * need to rewind/replay state","i usually use react + redux.","though if you do, you'll need to extend the default way of using mobx or lose some of your capabilities & tools.","because of pure functions of state, you should even be able to easily swap redux for mobx.","you have to be doing redux very wrong to make a redux app \"hard to fix\" in a refactor.","affordances are important. mobx *allows* action dispatch, but does not *afford* action dispatch. redux affords it.","sure, lots do. consider other factors. complex workflows? lots of sources of state changes? look @ redux.","less so even that react. it uses `class`, but compositional decorators, not class inheritance. also, optional.","applies to content marketing, too, but double the time.","instagram vs facebook. trello vs jira. solarcity, tesla, spacex are stepping stones to mars.","when i say \"interface\", i mean calling api signature for functions, etc... not just visuals. :)","a lot less with the topic selections, evidenced by near zero results for the react topic before react was created.","sometimes i click on something and feel like i just turned down the wrong alley of the web, and i should probably check for malware...","do a higher percent of vue users install the dev tools? aggregating several metrics is a better approach than taking one as gospel.","you'll barely scratch the surface of building react apps in 3 months, working full time.","i'd tackle angular or vue.js next year. give yourself time to dive deep on one framework at a time.","very telling: \"react\" is available as a js library topic search. \"vue\" does not have enough search volume for that, yet.","this situation is changing very quickly with the exponential growth of vue.js, but competition is strong.","to be clear, i'm not saying \"don't pick vue.js\". i am saying that today, both react and angular are far more popular in prod.","not more accurate than google trends, but is a very positive indicator. see also npm downloads. strong growth there, too!","i was kidding. i like jsx & currently use react for all production apps that i have a say in.","yep -- i expect to see things trending very well for vue.js this year.","vue is showing _amazing traction_ on github stars & npm downloads, which is why i say this time next year... who knows? =) go vue.js!","lots of devs aren't using the devtools. like, crazy numbers don't have them installed.","test first is correlates with better code coverage, better coverage correlates with fewer bugs.","hiring coders? look for learning trajectory. how long have they been coding? what have they accomplished in that time? hire hungry learners.","but it's growing very fast. could be a serious contender early next year. don't know it well enough to address tech.","addressed in article. vue looks promising. it will take time to catch up with react or angular in market share.","assuming you have traction, \"when will i make money?\" is code for \"what's the business plan?\". traction means you've shipped.","sounds like a group of devs who have \"quit and stayed\". chronically undermotivated and demoralized. high turnover, too?","i've never seen that happen.","no, prolimary question from investor is \"will i make money?\".. show them continuous delivery and traction and they're happy.","angular 2 borrows some ideas from react.","\"tell me lies, tell me sweet little lies...\" - manager/client asking for an estimate.","@namburivaibhav nope. focused on react. looks like view may be a serious contender for mainstream next year. growth is strong.","lots. i have been ceo, dev lead, individual contrib, management consultant, lots of projects, spanning decades.","i use e2e tests for component event wiring. i test behaviors separately.","react can teach you many timeless sw design principles.","the conditions iain described are industry pervasive. it is the #1 problem devs face @ work.","frameworks and apis change fast. software design principles are evergreen. learn principles that translate across language barriers.","that may be an indication that the code under test could be broken down into smaller components.","i use redux-saga for that.","yeah, that's what the world looks like to a developer of monoliths, but ignores unit tests in favor of functional.","you retain test-first benefits, but now your design is more informed.","yep. if that happens, revise test prior to making newly planned changes. it's not set in stone. it's malleable, like clay.","deciding this up-front is a great design aid. know what you're building before you start to build it.","one benefit of test first is that you design what the interface looks like before you start writing the implementation.","it's tough to explain to a client why specific sub-feature took 10x longer than estimated.","they get used in performance evaluations -- if they're off by x%, clients say you're a liar.","or customer delivery promises. clients treat estimates like contracts and threaten to sue.","selecting a tech stack and having opinions is part of the job.","i've contributed to several 12-factor apps at scale with tens of millions of users. immutable releases and env config are useful.","if you haven't seen a test fail, you don't know if the test works. 1. write a test & watch it fail 2. write the code & watch it pass","remember, a mathematical variable is also just a reference to a value.","you want to master code? there is no substitute for practice. want a deeper mastery, faster? follow great examples.","how software should be developed. alternate cuts tend to be long-term changes in software vs up-front.","vs hit record, play an alternative guitar part. 3-minutes spent on alternative guitar track.","i haven't \"upgraded\" to the new macbook. don't plan buy another apple model unless they step up their game.","adobe premiere pro cc works great on windows. i used to use fancy presentation tools, too, but lately just google slides.","while building your new app: use chrome with mobile device profile, 2g throttle enabled. make it fast here, first!","small programs hide little. when something goes wrong, it is obvious where to look. need a big app? compose small apps.","no. i am saying that it proves that there are higher roi options for software devs, money-wise.","all apps with sufficient userbase and resources should have a security red team. orthogonal issue. don't eliminate manual tests.","which post? i remember saying that about lambda calculus, not js.","granular update subscription is a good alternative to the reconciler, but a fundamentally different strategy.","most us schools, return on investment is low compared to other options (for software developers).","would the react team be open to leading the api reference with the function form instead of obj literal form?","nope. i like my training to address bigger things than how to use an api. i hate writing api refernces.","i'm happy to pr. before i make changes though, i like to make motivation clear and get a sense of concensus. clarify problem.","err.code or text in err.message. `instanceof` lies.","feature toggle and automated rollback are better than stopping devs.","java is to javascript as pain is to painting.","devs, hang on to your old cell phones. use them to test your app experience on underpowered devices.","code is temporary. it exists while it is useful. if code is replaced by better code, good! if code can be deleted, celebrate!","the best code is no code. where there is no code, there are no bugs. no api to learn. no awkward ui. the best refactors are deletions.","it does mention vs code. i don't use it because it has a show-stopping bug that breaks non us-qwerty keyboard layouts.","not sure i see your point. what did you expect to happen?","acceptance tests help you build the right product. unit tests help you build the product right.","in practice, i've worked on apps with hundreds of reducers, and the \"monolithic state container\" has never caused problems.","different smaller apps get their own store, but may share login & session functionality with the larger app.","i use a combination of reducer composition & splitting out smaller apps, e.g., dashboard app, admin app, billing app..","reducer composition & normalizr can help. that said, most large apps are really smaller apps pieced together.","i think facebook uses relay to solve that problem? i have students using firebase + setstate for that.","you're right though, using context directly is ill-advised, and feeding app-level state through component tree is painful.","direct parent container component + setstate can be that in react, but we need better react training resources to teach it.","thankfully, the creator of redux made a couple wonderful (free) courses. imo, every redux newbie should watch them.","redux is easier for us because we know redux, but as a teacher of redux, it (like setstate) is also too hard to learn.","also wading into lots of surrounding issues, e.g. async i/o that may be more straightforward without redux/flux.","it's sometimes easier to *use* redux, but learning redux is also learning how to think in pure functions and avoid mutation.","i hope devs don't take any tweet or headline as absolute gospel.","me too. i can't think of any complex react app that doesn't sometimes use setstate. but i stand behind my tweet.","e.g., i use `class`. i use `setstate`. i avoid them when there are better alternatives 4 use-case.","there are two of me. 1. pragmatic dev with practical, nuanced opinions. 2. imaginary absolutist.","that's silly. fb & many ent. sized apps use setstate for encapsulation.","my false concensus bias. i use redux or mobx more than setstate, which i use only for presentation state. :)","yep. and that's usually ok for presentation components.","shouldcomponentupdate !== automatically faster.","hmm.. but if shouldcomponentupdate() doesn't return false (which it often doesn't), the extra check slows render.","i typically handle state in immediate parent component (1 level), and propagate changes back via events.","3. there are future instance overhead & memo/immutable optimizations available for functional components.","2. perf is the same unless you need shouldcomponentupdate()","1. they're good for presentational components where you just pass props.","i also introduce react components with setstate() first, but quickly progress to containers, then redux.","react rides on the shoulders of angular 1. got lots of people building custom components for the first time.","i mean, there are _other_ options (e.g., redux, mobx, roll-your-own). better is subjective & depends on your app.","i don't know about you, but i split my large enterprise apps into lots of smaller apps. ;)","depends on the app. redux isn't always the right solution. mobx and setstate() are perfectly valid for apps with less complex flows.","i mean container/presentation components.","feature factory: turn a fast, simple app into a slow, complex app. ux driven: improve the app by making workflows faster and simpler.","@namburivaibhav don't know about lighter. depends on how much redux boilerplate you use. some people overcomplicate redux.","i think the way we teach react & setstate() could be more newbie-friendly. like, reducer fn form by default?","no setstate() in presentation components: redux, mobx, smart components .setstate() + pass to presentation component via props.","you can. facebook uses setstate() a lot. there are some pitfalls that newbies frequently get stuck on & flux users sidestep.","i have used meteor, but not recently, and not with react. interested in their graphql subscriptions...","i mean manage state in parent component, pass state to presentation component in props.","hmmm.. also using graphql & relay and managing local component state in containers?","and if you have workflows with more than a few actions, even redux is simpler than dealing with setstate().","maybe a very small set of trivial apps. i find mobx becomes simpler for any app more complex than a calculator or todo example.","see bit about smart component wrappers in the tweet you replied to.","that data is in your app state no matter what you use, right? a store is one thing to wipe on logout...","if you're the unlucky newbie who encounters lifecycle timing issues, you get dumped in the deep end of react timing internals.","yep. the irony is that just using redux is often easier than dealing with setstate() lifecycle headaches.","move most of your state to a store (redux or mobx). for encapsulated state, use setstate() in a smart component & pass props.","sure, but only for encapsulated components. for everything else, use a store.","redux, mostly. for encapsulated components, i do use setstate() -- only in a smart component that passes state as props to child.","let me revise: don't try to use setstate() in a presentation component, or you'll have lifecycle headaches.","don't try to mix setstate() with a presentation component that renders real dom. it's headaches all the way. ;)","i usually use redux. use smart component wrappers if you need encapsulated state with setstate().","yes! you can do it with mobx or vanilla js! =)","of course, the same applies to functions.","react has a setstate() problem: asking newbies to use setstate() is a recipe for headaches. advanced users have learned to avoid it. ;)","managers: want productive devs and fewer bugs? make sure they have frequent 3-hour blocks with no interruptions. quiet spaces.","if you don't test your code on all your target platforms, you don't really know if it works on them.","tdd is not just qa. * usage-driven design * modular design aid * realtime feedback (run tests on change)","you could take that one step further: variable names are a code smell. could you be point-free instead?","what's your favorite programming game? e.g., screeps, code combat, box-256, etc...","i like the immutable data structures, though. i wish js had them.","i used to code in lisp. i've had my fill of parenthesis. )))))))","when i was learning to code in c, everybody used a linter. eventually, the c linters got integrated into ides and compilers.","it's not a matter of better or worse. most modern js apps use both. you need to understand the basics of both or you'll be lost.","security story for wasm is currently about the same as js, so yes, it is an attack vector, but about the same threat as js.","all major browsers will infer names from lexical bindings, afaik.","as a kid i thought text adventures would be easier to code than graphical games. turns out nlp is harder than it looks.","functional programming: building software using pure functions as the basic building block, avoiding shared state and side-effects.","only if you use that context in the fn... otherwise it's optimized away.","all functions in js create closures. none pull `this` into closure unless you actually use `this`.","during code maintenance, always leave the code better than you found it.","every smart app developer runs experiments to figure out what features users prefer. to do otherwise would fail to serve users.","if you have to pick one platform, the web platform is a good choice.","yeah, if you're nintendo making the latest zelda you can afford to port to 6 platforms.","unreal engine has done asm.js compile, so there's precedent. see also","probably unreal engine + compile to webassembly. might need help from unreal engine team for compile target.","trouble is, i've seen uuid v4 collisions in multiple standard libs & multiple browsers.","yep, but that correlation levels off around 3-5 years as more things you know fade from relevance & new tech emerges.","very fuzzy on exactly what's happening here. is there a blog post or something for more details & examples?","fibonacci is fun, right? for all the reasons you called out, y-combinators (& recursion) still are not very practical in js.","learning a new programming language: a few minutes to learn syntax + a handy reference & then a lifetime to master.","open source etiquette requires a \"when in rome\" attitude. don't make major changes to tech or style without discussing it first.","nope. it costs more the more complex it gets. you sit down with the client and collaboratively develop a roadmap.","i use the test name to identify the component.","that's trickier than it seems at first. can't trust all clients to have enough random entropy.","sure. the tests you create before you code are tdd.","class in js *is* prototypal. sets up delegate prototype for methods & `extends`...","no, it doesn't enforce programmer thought at all. they could be paying more attention to a burrito and \"lgtm\".","which is fine for visual design, but crap for bug discovery.","snapshot tests are great for visual design. crap for correctness testing. basically, they don't test correctness at all.","it's very expensive to interrupt a developer. think $1k - $5k per interruption expensive.","recognize that interrupting a developer can make their task take twice as long, introduce twice as many bugs & context switch.","sortof, yes. category and type aren't the same, but here, the type variable represents the category of the functor mapping.","adopt remote-work-first culture. everybody uses online tools for meetings & collaboration. you'll see.","it's really hard to unit test a monolith. also hard to scale and maintain a monolith. hard to test code is a code smell.","better feature toggles, tdd, code review, and immutable deploys can almost eliminate critical show stopping bugs.","test isolation means that the tests are written in such a way that they can be run in parallel -- which can happen on one db.","in an ideal agile methodology, cycle times get so short that they disappear, and all you have left is continuous flow.","`setstate()` has lots of quirks. i find things often get easier when i manage state elsewhere: redux, mobx, or vanilla js.","1. give devs good specs 2. devs check in code daily 3. other devs review code daily 4. demo changes weekly (can be async)","sure, but tdd with unit tests should be an automatic part of every developer's process.","setting clear priorities is a fundamental management skill. flipping a coin is better than making the dev decide.","how to speed up developers: * give them one task at a time to focus on * avoid context switches * cut meetings * avoid interruptions","in other words, in haskell or clojure you wouldn't need the extra immutable.js baggage.","also, those type annotations seem like noisy distraction. you can separate interface annotations from fns in typescript.","and those are basic building blocks of most modern fp apps...","sure. but seriously. google \"functor\" or \"monad\" and tell me the descriptions wouldn't send newbies running for the hills.","google \"functor\" - super simple basic building block of fp. crazy complex explanations. same for most fp vocab.","i approve if you want to print and use as trash can liners. i guess you're right. ;)","e.g. eager algorithms can be swapped for lazy without changing programmer-facing api. it's a level of abstraction thing.","reselect is basically an automated perf optimization on top of selectors.","immutable.js can make redux a lot more efficient -- or a lot less efficient. don't use .tojson() in mapstatetoprops(), for example.","@stephenlcurtis again, not just js. the argument against class is just stronger in js because alternatives are easier.","@stephenlcurtis single ancestor taxonomy is all cons, yes. there are other alternatives besides composition: modules, factories, etc..","a group of programmers is called a bikeshed of programmers.","@stephenlcurtis class inheritance should be avoided in all lang's. remember \"design patterns\" was written by java users for java users.","@stephenlcurtis nope. remember my background was java/c++. i still think there are great use-cases for oop and c++.","@stephenlcurtis i've heard \"right tool for the job\" arguments for decades. it's time for people to accept that some tools are just broken.","@stephenlcurtis composition and simple modules and functions are both far superior tools for those jobs.","thanks. i'm aware of most popular (and some obscure) fp libs in js.","1. have an empty content state for the component: loading indicator. 2. fire off async request. 3. dispatch loaded action obj.","i'm confused. i've used every example in that article in real world apps hundreds or thousands of times...","yeah, optimizing the wrong things. i use switch (with rules in op) because it's less syntax noise & more straightforward.","yeah, i wrote something similar in 2010 that i published in \"programming javascript applications\". changed my mind.","oh rly? guess i did it wrong in the last large prod scale app i built.","it was hard to remember the right magic words to reuse functionality, hard to wire up new magic phrases, etc..","before, we were jumping through code hoops hooking up magic english phrases to running code. it was hard.","strong disagreement forces us to strengthen our critical thinking & question things we take for granted. remember to disagree respectfully.","usually, web teams tolerate ios and treat it like a second-class citizen. but if it's the primary focus, you get a great ios app.","i think it's more that you were not given the dedicated task or the mandate to make the web app work well on ios.","to mimic those results, give one person the responsibility to fine-tune the ios experience of a web app. watch it transform.","of course if you have a specialized team working on a particular platform they can fine-tune for that platform better.","instead of making the english executable, i just translate it to simple assertion tests. leads to cleaner test code.","the english-language specs are fine. hooking the english up to real code is the part that's wasteful.","i've never met the non-coder stakeholders who love taking part in actual test implementations or test results.","mocking is a code smell.","rush developers & -mentorship & reviews halt -bugs pile up -tests get skipped -communication suffers -devs burn out -productivity suffers","ios was first, but has proprietary tags for pwas. also need to fall back on app cache for ios.","...bit in my experience, non-coder stakeholders don't ever look at the test suite anyway, so that time is wasted.","cucumber-style english assertions require a bunch of extra code to wire up english phrases just for non-coder stakeholders...","avoid buggy tests: tests & code test each other. test first, watch it fail, then implement the feature & watch the test pass.","testing and code review are two different things, but they both save time and money.","launching a startup / app? money isn't your fuel. fans are your fuel. don't just attract users. build a great product. ignite them.","true \"merge does not equal release\", but what gets merged usually gets released. don't merge broken code.","if you need more discussion, pair up over video chat and work together to fix the code. keep collaboration friendly.","we rightly have bigger fish to fry than worrying about how to trigger v8's internal optimizations.","so \"you wrote slow code\" always sounded like a cop-out to me. micro-opt is not an app dev's job.","the reality for app devs is that bundle size, network, etc always matter more than micro-opt.","if it's possible to set reasonable defaults or infer data for app configuration, you should do so. don't just throw a cryptic error.","came from a study, cited in tweet. also cited in \"code complete\".","there's a difference between criticizing a developer and constructive critique of work. you should deffinitely not merge a bad pr.","great devs break down complex problems and solve them with simple code.","each hour spent on code review saves 33 hours of maintenance. (russell 1991)","good code is simple. code reviews are a great way to train teams to write simple code. don't be afraid to say \"this is hard to understand\".","ai in js is more at the experimentation/learning stage than the practical application stage. gpu can speed things up.","js has gpu via webgl, but not perfect. not sure why that lib doesn't also use it in node. that is also possible.","does ava work in browsers yet?","yep. 5 of them. facebook, instagram, etc, and new app dl is rare. people don't browse the app store like they surf the web.","more than half of all native mobile apps have zero downloads.","60% of web traffic is mobile...","wait. what? the web isn't a proven publishing/distribution medium?","if your app is fb or instagram.","sure. doing that in raw html is still bad though. 1. it's basically a fn constructor. 2. events don't get delegated.","separating concerns !== separating technologies. collocating component style, handlers, and css is fine.","events in jsx get delegated to reach's root node. in other words, it does the right thing automatically.","next.js + express.","js is not f#. can't assume people share that context.","i don't yet, but facebook does. google it. :)","higher order components","\"program to an interface, not an implementation\" applies to unit tests. don't test private functions. see \"black box testing\".","yes, but it's more specification than software at this point. i use it in all my js technical writing.","customer validation, mostly. are customers happy? do they understand the feature? do they like it? are kpi stats going up?","if a senior dev is not mentoring/pairing with other devs, you're wasting critical business value.","stop building new stuff now and then. instead: 1. validate existing features 2. burn down tech debt 3. burn down bugs 4. focus on perf","software developers write and fix bugs for a living. sometimes some software gets made, too. tdd helps.","that happens all the time. \"so and so thought you were more mid-level, so we're gonna offer $20k less\"","code coverage !== case coverage. code coverage tests that all the code gets exercised by the tests. cases test different values.","people get upset when i say \"you need to know x, or you're a junior dev.\" interviewers don't care. you get paid less if you know less.","functional tests only? missing critical coverage for component cases. unit tests only? missing critical component integration. use both.","there is data on this: a good code review process reduces maintenance cost better than tdd. 1 hour in review saves 33 in maint.","coverage tools are good. code reviews are better. no need to choose one or the other. use both.","you will always forget cases from your unit tests. pair them with code reviews to catch more bugs, sooner.","@veio_intolerant fp is quite readable to devs educated in fp, and a whole lot more flexible than tightly coupled oo classes.","what's a pojo? const pojo = { definition: 'plain old javascript object', example: 'you\\'re looking at one.' };","learning tdd with unit tests doesn't happen overnight. you aren't just learning how to test. you're learning new app architectures.","try quarterly quality sprints to focus on tech debt and perf. usually, these sprints deliver higher roi than feature sprints.","magic js spell to get better (not perfect) character counts for i18n/emoji. use the iterator: ''.length; // 6 [...''].length; // 3","good concern, but curry with arrows is fp in js 101. get a senior dev on staff to help everyone get up to speed.","language influences thought. arrow fncs are curry jet fuel for js fp explosion.","it's one of the most useful and versatile building blocks available to software developers.","learning tdd with unit tests doesn't happen overnight. you aren't just learning how to test. you're learning new app architectures.","right now it looks like .mjs is the leading solution. );","reducers are extremely useful building blocks that can be used for many things in many contexts.","reducers are not a \"redux thing\". redux just happens to use standard reducers. they are extremely versatile. explore other use cases.","as you make your app more testable, it should also make the app simpler and more maintainable. tdd should improve architecture, not harm it.","there are also dense, small functions that are hard to parse but work well, frequently called \"magic spells\" in code comments.","1. it's very useful in the context of fp to avoid condional branching (see maybe), and 2. a noop in js returns undefined.","stay focused. if you're working in js part-time, think in hours, not years: 1600 hours, minimum, before branching out.","also remember: close to 70% of professional programmers have little or no university-level math training.","specs to write before code: describe what the program should do (not how). describe black-box api (not internals).","a year coding in js full-time?","i'm fine with a function that makes an ajax call and returns a promise -- if it's separated from adding the result to app state.","hire smart people who love to learn. you'll hire faster and build better teams.","easy way to deliver tremendous value to your org: improve the perf of mission-critical apps. shave milliseconds off load times.","certainly all of those devs have made tremendous value contributions which span many organizations and had huge impact.","not only do 10x devs exist. 100x and 1000x devs exist. they are devs whose accomplishments deliver extraordinary value.","one of the reasons i prefer react over angular.","incomprehensible code is not as valuable as it could be.","@man_yells by optimize, you mean perf? the best time to optimize perf is the moment you discover (using profiling) that it's too slow.","at most large orgs, there are opportunities for individual developers to deliver $millions in value in the span of a week. look for them.","10x doesn't mean a dev does 10x more work. it means the work they do delivers 10x more value.","node 0.1x -> 4.0. ecmascript 3 -> 5. lots of examples where numbered versions went off the rails.","need code help? paste the minimum reproduction example on codepen. what were you expecting? what really happened? what did you try?","want to really learn your craft? mentor a junior developer. if you can't explain it simply, you don't know it well enough.","in a mentorship culture with lots of pairing and code reviews, even novice developers quickly become great assets.","great mentors are most cost effective when they're mentoring, not building features in isolation.","there are 2 categories of programmers & you need both on your team: 1 senior mentors/architects/guides 2 feature-focused devs","every js app developer needs to know: -fp basics -objects: composition vs inheritance -async patterns (callbacks, promises, events, streams)","learning to code makes you see problems differently. how things fit together. the power of math & language for general problem solving.","life is simpler when ui components are unaware of the network, business logic, or app state. given same props, always render same data.","i've seen lots of \"majestic\" monoliths get scrapped down the road. maybe difficult tests is a framework smell?","the opposite is true for react/redux or angular+ngrx/store.","are unit tests hard to write? that's a code smell. are your view & state updates deterministic, or mixed with side-effects/concurrency?","i'm avoiding generators in libraries, but using them in apps where a little extra overhead is outweighed by benefits.","outsource authentication, or move auth to a different service running on a different cpu. remember it's supposed to be slow.","interesting languages for programming language nerds: prolog, haskell, rust. what are your favorites?","s/limited experience and beliefs/empirical data from 60k pro coders/ - see cited data in the article.","what i'm saying is you don't need a degree to code for a living. most pro coders don't hold a degree.","yep. typescript-quality type inference works on normal .js files, too. no need for .ts files.","not necessarily. encapsulated components are fine. 1. is it saved? -> store 2. does it change other components? -> store","i've been hiring devs for years. can't say a degree makes somebody a better dev on real jobs. );","most colleges can't compete on salary for people who are really great developers. hard to find really great teachers.","profile. make sure your frame cycle runs in < 10ms, avg. try swapping implementations to see what is actually faster.","remember: open source developers don't owe you anything. have a problem with the project? contribute or fork. don't be a jerk.","lots of devs need redux 101","if you care about perf check out the rail performance model instead of worrying about micro-optimizations.","avoid mysterious bugs with redux: 1. reducers are your single source of truth 2. no side effects in reducers 3. only reducers update state","good senior devs are always learning.","the lifetime access pass includes the shotgun series, where you can actually watch me use tdd to build real apps.","pairing is not an alternative to code review. pairs sync up - act like one brain. an outside perspective adds lots of value. use both.","so it's not a matter of pair programming vs code review. you need both -- how much pairing you want is another matter.","there are bad pairings, and sometimes a programmer just needs to be alone with their thoughts -- in the zone.","no, it's not. even with pairing, code review adds value. i also find that full time pairing is not all puppies & rainbows.","i have heard of devs copying entire github repos from other people and claiming them. ask them to live code.","most knowledgable js interviewers look at your github if you provide a link.","stuff that will help your coding career more than a degree: mentorship, cool projects on github, experience building real apps.","most effective ways to reduce bugs: 1 code review 2 tdd 3 spec/design review 4 pair programming 5 manual (human) testing ..","failing loudly is good. scrolling the real error off the screen isn't. npm -s suppresses the npm error message.","when productivity suffers, great managers: * listen * answer questions * remove blockers * encourage pairing * encourage pr & code review","is it using the beta version of next.js? i think i already mentioned there's a bug that's been fixed in the latest beta.","possible you're missing some config? it uses a babel loader, i think?","yes. almost all app code i write is universal. i very rarely use globals, though.","window.namespace is not safe in universal code.","prototypal is the name of the js inheritance paradigm: js is prototypal. prototypical is a typical example: fido is a prototypical dog.","unreadable code is a hazard to security and safety.","code reviews help junior developers ramp up quickly to the same level as the best developers on the team. (tackett and van doren 1999)","code reviews help junior developers ramp up quickly to the same level as the best developers on the team. (tackett and van doren 1999)","no matter how good your code coverage is, bugs will slip through to production. is your user support / bug report process clear?","tdd & code reviews help you catch errors before it gets expensive to fix them.","i have more informed opinions about c/c++, java, typescript, haskell, lisp, and of course javascript.","api affordances are dev ux. they matter. class affords extends like balls afford throwing and chairs afford sitting. prefer factories.","delegate more. give other members more responsibility. if you got hit by a bus, could they keep going?","native stuff like fetch and async/await depend on the promise api. promise = 1 value. observable = many values.","depends. does the list above sound like your project? i use redux for most apps.","try push instead. optimizations are beside the point of the tweet. :)","clarity is king. are you clearly expressing the purpose of the code to the readers who must maintain it?","clarity is king. if it's unreadable, are you really expressing the purpose of the code to the readers who must maintain it?","as with natural language, less is more. don't use more code than necessary to express its purpose.","see algebra variables for an anology. an algebraic func is a fixed mapping with many different valued inputs.","es6 tip: be careful with recursion. tco was never implemented in most js engines (including chrome).","lots of apis rely on promises, including async/await.","robust != more code","this is common. you have the advantage of a more accurate view of the final design.","more code/more complexity has no bearing on fitness for use. usually, less code/less complexity is much better.","i'd love to read up on gfx performance optimization techniques from the playcanvas team. :)","structural sharing via object delegation was used to conserve memory in some of the earliest graphics apps in the 60's. :)","that's no different from any other gc language. i used the same techniques in c++.","yep. you can use it with apis expecting promises. ;)","in 6 months, will you remember that what you meant was you want to be able to cancel the wait timer? would a stranger see it?","i don't think it communicates the cancel intention at all to the reader of the code. do you?","tools like that exist for visual regressions..","do you directly call your reducers? i don't, unless i'm unit testing them. redux does. that's the definition of ioc, right?","are google's snippet answers automated, or human assisted? if they're automated, their natural language comprehension is getting scary good.","ioc = inversion of control: don't call us, we'll call you. for example, react instantiates components & calls lifecycle methods.","what's the difference between a library and a framework? imo, not an important question, but frameworks generally feature ioc.","sometimes the realization that broken tests are hugely valuable happens in the same day as complaining about breaking tests.","dev team managers: developers don't work for you. you work for them. clear obstacles. supply resources. mentor. train. build trust.","that's not a typo. book smart means you know a lot but struggle to apply it to the real world.","do you have a reference for that? it currently works with babel.","node has a node_path environment variable intended to address this issue. tools that don't recognize it should be fixed.","or put them in a store? redux action obj, etc...","my stance on typescript: it's very cool but you don't need it. it won't reduce bugs much. you absolutely need tdd regardless.","presumably most apps do more than data vis, and flow has good inference features. it can be useful even without flow typings.","react is special because it challenged established norms. there is no best practice in software design. never stop exploring.","unreadable code does not get maintained. it gets patched around, avoided, or scrapped.","none of that low-level nonsense is visible to users in js. only impact = passed arr/obj can cause shared state mutations.","when you pass an obj in js, the value is a ref. it doesn't make a copy. if you mutate the obj, it will change everywhere.","in other words, we only see the name and value, never a pointer to memory location, and we can't pass a by ref in js.","a is a named identifier that refers to a memory location that stores the value, 2, but that's all hidden from js users.","in my youth i started _every_ app with similar diagrams. now i serve penance by fruitlessly warning jungle explorers of danger.","i've seen lots of similar hierarchies. many had to be scrapped and rewritten. some at great cost. careful in the jungle.","graphql doesn't compete with redux. they do different things, and you can use them together.","can be, but you don't get that out of the box with mobx. you do with redux.","yep, but all the big modern fe architectures have embraced similar architectures since react.","the point is that state subscriptions are granular by default, whereas redux updates are whole-store by default.","/dom/view/whatever. of course you can connect those subscriptions to any sort of output. =)","mobx isolates subscriptions by default to just the bits of the dom that need to listen to any particular piece of app state.","some back-end devs create a completely separate product/service that the fe team consumes, rather than collaborates with.","it's great for small apps, prototypes, or apps that have 10's of thousands of dynamic dom elements.","to be good at something like react, you have to be good at vanilla js.","i think is better than unity/ue for mobile / web games. unity / ue4 are great for high-end console/pc games.","signs you need redux: * user workflows are complex * users can collaborate * you use sse/web sockets * you fetch data from multiple sources","frameworks like react, angular, and vue.js mostly solve the same problem: helping to organize your fe/view architecture.","don't try to learn every framework. learn one for starters (react is a good choice). learn others if your job demands it.","hiring coders? look for learning trajectory. how long have they been coding? what have they accomplished in that time? hire hungry learners.","how do clients feel when your estimate is wrong?","frameworks and apis change fast. software design principles are evergreen. learn principles that translate across language barriers.","\"tell me lies, tell me sweet little lies...\" - manager/client asking for an estimate.","you need great mentors, devs who get lots done, and jr devs. not devaluing any roles. story points devalue mentors & jr devs.","you might be able to do that with webpack.. personally i don't use the language module system for fonts, images, css, etc...","you want to master code? there is no substitute for practice. want a deeper mastery, faster? follow great examples.","while building your new app: use chrome with mobile device profile, 2g throttle enabled. make it fast here, first!","have you compared the runtime tooling?","do you ever think, \"that idiot shouldn't be allowed to code\"? check your ego. look at your code from last year.","if you haven't seen a test fail, you don't know if the test works. 1. write a test & watch it fail 2. write the code & watch it pass","the best code is no code. where there is no code, there are no bugs. no api to learn. no awkward ui. the best refactors are deletions.","java is to javascript as pain is to painting.","sure. i'm not the best designer. my css skills are good rather than great.","code is temporary. it exists while it is useful. if code is replaced by better code, good! if code can be deleted, celebrate!","think of the worst developers you ever worked with. what are 3 words you would use to describe them?","or create-react-app to help you with the \"complicated\" bits of react.","some people use big words to look smart. some people use fancy design patterns to look smart. you really want to look smart? think simple.","think of the most extraordinary developer you ever worked with. what are 3 of the qualities that impressed you most about them?","not specifically, but most of what i teach (oo in js, fp, unit testing, redux...) can be applied to angular apps.","popular idea: \"if you're using react, you're over-engineering your app.\" reality: most apps > 1yr old are large. react simplifies them.","what happens when that job goes away?","functional programming is the process of building software by composing mathematical functions, avoiding shared state & mutable data.","in spite of the popular 10x developer meme, we consistently underestimate the difference between good and great developers. be great.","a junior developer's real job is to normalize mentorship culture - a workplace full of knowledge sharing, q&a, code review, & pairing.","if you don't test your code on all your target platforms, you don't really know if it works on them.","unit tests are not just qa. they also give you a clear objective and help you define requirements and design a better api.","intelligence & programming ability have tremendous flexibility and capacity for growth. great managers harness the power of team learning.","devs do amazing things if you give them a goal & encourage them to collaborate freely. code review & pairing aid collective learning.","the same dev can perform radically better under better management. nurture mentorship, agency, & expression. don't micromanage.","the js drinking game: 1. think of a noun. 2. google \"<noun>.js\" 3. if a libary with that name exists, drink!","algebra by itself is too abstract. when kids learn to code, they see what it can do in action: moving pixels on screens...","in my case, learning how to code was great prep for math. i knew algebra well before school started teaching it.","yep. rather than make the language feel familiar, trying to make js look like java has created a whole lot of confusion.","reminder: `class` in javascript has nothing to do with static types. the result is a constructor function which produces dynamic objects.","wrong question. the best tool i know for remote pairing is zoom.us -- but it's not an editor plugin.","`class` in javascript does not define anything like a static type.","it's ok to have strong opinions. balance them with an eagerness to learn new approaches.","feature factory: turn a fast, simple app into a slow, complex app. ux driven: improve the app by making workflows faster and simpler.","what's your favorite recent blog post on javascript?","just closure. when you're teaching, you have to make some assumptions about prerequisite knowledge. => is basic standard js syntax.","in functional programming, which is the context of that example, braces and extra function syntax get in the way of readability.","e.g.: import { takeevery } from 'redux-saga/effects' function* watchfetch() { yield takeevery('fetch_requested', fetchdata) }","`class` in js is sugar for \"objects linking to other objects\" (delegate prototypes). `extends` is dangerous.","redux-saga middleware has a concept of watcher and workers. watchers watch for specific actions and workers handle them.","what's your favorite programming game? e.g., screeps, code combat, box-256, etc...","in other words, you can know a variable's type without cluttering the code with hungarian notation.","if you use something like tern.js (type inference ide plugins for js), flow, or typescript, you get type hints in your ide.","behind every overnight success you'll find years of hard work. i coded for years before i wrote a word about it.","for the same reason everyone learns to read and everyone learns basic math - you can apply those skills to any endeavor.","programming is for everybody. anybody with the desire can and should learn to code. all children should be exposed to code.","did you read the article? redux doesn't need to be the single source of truth for everything.","clients can't \"will\" a project to be faster and cheaper.","they don't exist. good managers deal in reality and help clients understand the process.","nope. that's what happens when you're not in the zone.","a great dev environment is a place where you could easily meditate with zero distraction. great code requires deep thought. your office?","managers: want productive devs and fewer bugs? make sure they have frequent 3-hour blocks with no interruptions. quiet spaces.","managers: want productive devs and fewer bugs? make sure they have frequent 3-hour blocks with no interruptions. quiet spaces.","deep in code / jacked in / in the zone: a trance-like state where nothing exists but the code. you are one with the code. there is no spoon.","shut off all notifications and block distractions. dive deep into your code. you'll code twice as fast with fewer bugs.","dev productivity killers: * notifications * meetings * emails * interruptions great managers block these. bad managers cause them.","i intentionally linked to some perf intensive stuff to point out that web apps can handle that stuff, too.","that's a webgl game. do you have a good gpu?","and what makes you think that because some web apps are slow that must mean that all web apps are slow? that's silly.","all pure functions have referential transparency. do you mean inline optimizations?","sometimes what you think you know for certain can make it impossible to learn something new. be open to being wrong. it happens to everyone.","put the filter before the map or use lodash or rxjs for lazy evaluation. or make a transducer. don't blame fp for your slow code.","during code maintenance, always leave the code better than you found it.","functional programming: building software using pure functions as the basic building block, avoiding shared state and side-effects.","node works great on the server. i've ported apps from php & ror, with dramatic performance and team productivity improvements.","you can thank for making it happen. :)","imo, it takes about a year to really master a new view framework like react or ng2. you can comfortable in 2-3 months.","possibly never, but apple already supports launching a web app in an app view from an icon. for offline, try app cache.","you can do silky 60 fps animations using the web framework. just keep the render loop blocks < 16ms. defer more complex work.","99% of learning to code is learning not to judge yourself harshly, & understanding nobody knows everything & that's ok. you got this!","\"come do research\" is not how most sell tuition. \"get a better job\" is. but most suck at training for tech jobs. :)","1. jsdoc kinda sucks. 2. does it work for css & react components & display live examples? i'm guessing no.","imo, maintainability runs much deeper than whether wemix markup & js. turns out that's not super important in practice.","i've also worked on a large ng2 project with html separate. it was far more chaotic than any react app i've seen.","i've buikd large apps with react. keep your components small. keep i/o and state out of them, & all is well.","what are your favorite tools for creating living style guides? any good ones specifically for react components?","it's been years since i saw a large production app that didn't use it or underscore.","it's not intended to be a comprehensive list of every library.","requires a bit of fine-tuning for any non-facebook devs. some defaults make no sense.","learning a new programming language: a few minutes to learn syntax + a handy reference & then a lifetime to master.","context switching is an occasional _negative side-effect_ of iterative development/responding to change.","no. iterative development, continuous integration, and self-correcting process are the secret sauce of agile.","yep, but those should exist as business process artifacts that developers have access to on-demand -- not a meeting/interruption.","developers need good specifications. fixing bugs at design/spec time is when it is cheapest. devs skip that step.","developers need good specifications. fixing bugs at design/spec time is when it is cheapest. devs skip that step.","a manager's primary job is to set priorities and delegate efficiently. devs suck at those jobs.","stakeholders should meet to decide what to build and capture specifications. after that, get out of the way and let devs dev.","how to speed up developers: * give them one task at a time to focus on * avoid context switches * cut meetings * avoid inturruptions","ddos is like posting a flash mob event on facebook and having them block the entrance to a business.","npm install --save-dev watch","i suspect the right answer is that dynamic prop assignment doesn't apply to root-level identifier names.","try using css for animations -- use an alternative css to turn off transitions for print display.","is there a good guide for using modular rxjs and/or automating tree-shaking to reduce bundle sizes?","one advantage: less code.","the immutable laws of dev productivity: 1. slow is fast 2. fast is slow 3. velocity lies 4. crunch time is crash time","i really want atom-typescript to offer tooling for standard .js files. anybody got that working? (can't get vscode kb shortcuts working).","a group of programmers is called a bikeshed of programmers.","functional programming produces programs by composing mathematical functions, avoiding shared state & mutable data.","meet with somebody who hires devs like you and ask them to evaluate you like they would a real candidate. collect feedback, brush up.","it's a great idea to do some mock interviews before applying for a new job, even if you're experienced.","which coverage tool does that? can you show a reproduction example you could file as a bug report?","strong disagreement forces us to strengthen our critical thinking & question things we take for granted. remember to disagree respectfully.","misuse of class inheritance is likely the most common and most expensive mistake in software dev today.","no assignments, no explicit returns, no explicit loops, no if blocks, ever? i like fp, but not ready to go that far in js...","what is it you like about static types? afik the primary benefits are tooling, perf optimization, & (overrated) bug reduction.","i ignored switch for years because for decades, i saw nothing but switch statements gone wrong. redux changed my mind.","redux uses switch statements well. none of the problems with switch exist in reducers if you follow the documented examples.","start by posting it on a large poster in the office, near the developers.","however, you will probably also fail to benefit as much as you could from the dynamic capabilities of js.","i agree that if you come from java or c#, you will probably feel more comfortable with typescript than standard js","rush developers & -mentorship & reviews halt -bugs pile up -tests get skipped -communication suffers -devs burn out -productivity suffers","akamai has been serving http2 on their cdn most of 2016. if the world wasn't ready huge chunks of the web would be broken.","each hour spent on code review saves 33 hours of maintenance. (russell 1991)","keep in mind, spdy and experimental http2 modules have been available for nginx longer than that. this code is baked.","but do a/b perf test this assumption. perf benefits can vary from app to app depending on page contents.","universal render can dramatically improve time to useful content render. in other words, let node render dynamic content html.","i installed the latest vscode yesterday.","launching a startup / app? money isn't your fuel. fans are your fuel. don't just attract users. build a great product. ignite them.","yeah, loading time is a bit of a drag for me, too. wish it would load packages incrementally and just dump me in the editor. ;)","nuclide is just atom with a bunch of packages tacked on. some i wish i could uninstall, like the mercurial-only repo stuff.","i disabled atom-tern.js -- assumed flow hints would always show up in nuclide, even without flow annotations. reenabled. :/","nuclide: i think i prefer the linter package over nuclide diagnostics. also, should i be seeing flow type hints in .js files?","the reason being that you need heavy unit test coverage, and testing/writing code is a highly iterative process.","i don't recommend this approach. i do recommend that you use that approach for acceptance tests (e2e/functional tests).","generally closures and objects are used together in js.","redux forces you to write simple code for state management. not really a good example of trying to be too clever?","encourage question asking, pair programming, mentorship, knowledge sharing, meeting participation, oss contribution...","good code is simple. code reviews are a great way to train teams to write simple code. don't be afraid to say \"this is hard to understand\".","wait.. web folks don't have to worry about gesture recognition? why did i waste all those afternoons on it, then?","haven't tried. currently looking at next.js -- haven't formed an opinion yet.","if it's possible to set reasonable defaults or infer data for app configuration, you should do so. don't just throw a cryptic error.","yes, but now experimenting with create-react-app & next.js.","purescript certainly does look cool. =)","unfounded fear. some do, but an overwhelming majority don't. 69% of working devs are self taught.","i agree. i used it to kick start my latest app.","i appreciate that. thanks. =)"]