["are there any tests worth sharing here from your work implementing dynamic import() natively?","yay. any more visuals that can help explain this stuff to folks are always appreciated.","if v8 need more dino stickers, happy to send y'all a pack when back in the states <3","cheers! just the last commit :) mostly trying to nail down the mvp webpack config to prescribe to folks.","devtools support is early atm but we can investigate. is that something you can share so we can repro?","thanks, martin! appreciate it :)","would love to see more folks move to what can be statically analyzed to drop double parse costs of runtime css-in-js.","yay! thanks for pushing through all the issues getting it updated. super appreciate it!","hmm. weird. npm appears to have 1.6.5 on there.","wait. precompiler meaning you avoid the runtime hit many current css-in-js solutions face entirely?","can you expand on what you would like to see in a standard library we don't have there already?","could slice take devtools code coverage as input?","looks really neat. would be nice if babel-preset-env was also baked in.","it's gonna happen!","happy jason day!","looks pretty nice! what's the seating capacity of the jsconf hall?","+1. thanks for your contributions to -env! super important package.","what are you using for css-in-js? assume you're using something build-time vs runtime.","anything else you'd add to js core from ld that you feel is missing?","til google web toolkit's code-splitting inspired webpack. amazing.","i am always happy to endorse you, jeff. sort of.","do we know if anyone is currently building pwas using nuxt? :)","thinking of a visual for code-splitting. scissors cutting up some bulky scripts? slicing a cake into smaller ones?","whoa. that's exactly the type of codebase we were after :) thanks for letting us know it's gone live!","that's a pretty neat component!","red denotes code (e.g function blocks) that are detected as unused. green blocks are used code.","59.0.3061.0 is what i'm on. open devtools > hit esc > three-dot-menu > coverage. should be in there.","is there already a glimmerjs todomvc in the works? if so..link? :)","both latest tip of tree & canary have it for me (59.0.3061.0). what build are you on?","would opensource projects benefit from shifting to a kickstarter per milestone? many non-corp oss projs driven by few in spare","that's..surprising :) were you able to dig into why that happened to work?","snazzy. what does the code output of this look like?","when i was interviewing for google, i did ask if i could do this. definitely down for a move to canada some day <3","all you, buddy! glad to see javascript daily still going strong.","it appears the at trick still works :)","thx for cc! any webpagetest runs for the before/after wins you experienced? :) talking to smashing abt preload too","<3 if someone in the community wanted to build a hacker news pwa w/glimmer that'd make for a rad demo could trace.","ahhhh. that did the trick! - i'm going to question why the production environment isn't defaulted (for pkg.json)","after scaffolding and running ember build on the hello-glimmer sample, i'm still seeing a 1.8mb bundle - am i holding it wrong?","source code up somewhere? :)","happy to add a paragraph - could you confirm current resource scheduler prioritization for h2? (gdoc appears to defer)","happy to add a paragraph - could you confirm current resource scheduler prioritization for h2? (gdoc appears to defer)","is the behavior of tsnext documented anywhere? great to see this natively working with that target & wonder if anything missing","anything we can do to improve react-hn?","dead code elimination (you used dead code removal as a term earlier and i needed to save character counts) :)","is this due to lack of dce _after_ aot + view compiler + other optimisations? cc","which might mean coordinating between quota management api and cache storage a lot more closely. know the latest here?","any particular topics? :) i've got preact/inferno, difficulty offline caching w/redux on my backlog but open to more topics.","a target-specific bundler that shipped diff bundles based on device? our advice so far has been to ship less code to all users","if there's a specific aspect (e.g app architecture, offline, push etc) that we can be explaining better, we can work on improving","poll: building progressive web apps would be easier if you had...","i think we should consider baking in hashedmoduleidsplugin & namedmodulesplugin into a webpack cli template","on this particular point, i really want us to try baking in better default config - perhaps via 's webpack cli effort","my read is this is a long-term caching issue. i used chunk-manifest-webpack-plugin for it. still a prob in wp2?","oh gawd. also whaa - i had no idea and i shared a birthday. happy birthday, dude! :)","thanks, hans! i hear + code reviews make for a perfect pairing ;)","happy happy days, folks!","if you have more details on how facebook's feed uses preload (inspecting), <3 to hear more.","it appears to primarily use preload for component stylesheets. is that correct?","ahhhh. i remember this! :) i didn't know you were involved in the original spectrum doodle behind it. that's awesome.","these are the numbers i was after :) thanks a lot for digging these up! appreciate it.","these are great. i'll be sure to reference them. appreciate it folks <3","do you happen to have any before/after traces? :)","i like branches if possible (super easy diff between sample code between chapters). subdirectories also work to a lesser extent.","today, conditionally dropping back ws -> rest api and caching those responses for offline loading is probably your best bet.","ah, so that's where that demo was from! i've been meaning to play with the gv api. lots of potential for accessibility apps :)","appreciate it! enjoy the holidays. pretty please^infinity on those wpt traces if you get the time to dig them up :)","wooot. this is great to see. would you happen to have the wpt comparisons still up somewhere? :)","what app is this? :) it's clearly flawed! :d","i think this can be solved in a more rudimentary fashion using code-coverage as input to decide on chunks/splits.","\\o/ also using sw-toolbox! :)","amazing. means for js bundles you're also amortizing cost of parse/compile w/v8 caching. looking forward to appshell usage!","has been working on something that might help here for more vanilla web cases.","welcome! \\o/ hackathoning on sw tooling today? :)","you made sure to capitalize the important parts. i totally loved it!","if your json req are though fetch() those requests currently do not respect preload and will 2x (being worked on)","would a bot that validates issue contains at least 1x code snippet or jsbin/fiddle & comment back help here?","ooh. really? i'd be keen to dig into what their approach looks like.","do you know if anyone has played around with preloading their react router routes based on analytics usage data? could be neat","appreciate the check :)","appreciate the check :)","heya. would the 'when deploying react apps to production, make sure to use' string be present in production builds or just dev?","working well for content sites like washington post etc. web push notifications too","woo! congrats! going to work on a technical case study? still using wp or diff back end?","going to update your post on angular 2 hn with these new numbers? :)","wooooohoooo :d so great to see those bundle size numbers keep going down w/aot & new compiler work.","i'd suggest code-splitting footer updates & link rel=prefetch (low prio). risk of fetch on scroll is jank","i'll write up a case study on what was involved in the pwa. if we were starting from scratch today, we'd probably use redux","manifest.json is valid. manifest.js was webpack specific. taking a look at what was breaking there.","i'm a fan of moving more of this work to compile time. until that happens perhaps more micro/modular wc runtimes will surface.","live deploy appears to work fine on android but not getting past entry screen on ios. bug?","we had productive convos with on html modules wrt . imports v2 needs framework buy-in, demonstrable perf/dx value.","if the and i were at a concert we would likely still be talking about source-maps and js, yes :p","^ thread reminds me of our tooling meeting at blinkon. do we have the webpack sourcemap permutations somewhere we can look at?","if we can make strides on lowering code size & parse/compile this year, i'll be ecstatic svelte does well here :)","if you have feedback on api surface we'd be keen to hear it (cc )","work on import() & module semantics are underway but not quite ready for dev workflow. everything else should be","does sharp use its own encoders written in js? (find myself still needing to use imagemagick most often for image processing)","on any given day, i can open , visit a few sites & be shocked anything anyone ever builds with js actually runs","\"implement npm so you can `npm install jquery`\" :d","can't wait to see prpl in ember. automatic route-based chunking, caching & smart preloading ftw!","congrats! welcome to google, ben! do we need to guess which team you're joining? ;)","to enable code coverage 1.enable devtools experiments in about:flags (restart), 2. settings>experiments>track css usage","i'm skeptical of package managers doing install time resolution/rewriting but perhaps hope if yarn exploring?","yep. i have hopes for that web packaging format long-term. we're trying to get more loading eng looking at it wrt modules etc","has considered listing devdependencies on individual package pages?","wondering if we need a upf (universal packaging format) short-term - packages provide files for esm, es5, umd, typescript.","this is one of the best practical decks on page load performance i've seen in a while. thanks for linking my posts/tools :)","^ i feel proud & awful for remembering to call it angular instead of angular 2. only took correcting me 4 times","huge congrats. aot + new view compiler + service worker support in angular-cli is setting angular up for a pretty nice pwa story","& others use prpl + app-shell in prod for mobile web; instantly loaded placeholder ui on 2nd view","this. i think we need 2 things: short-term, perf guide per framework for advanced devs. long-term perf \"by default\" for longtail","indeed. on my todo list to better advocate code-splitting & smarter js loading this q. libraries encouraging this also helps :)","woot. has someone started an awesome-webpack repo to track recent webpack posts like this on 2.x, performance and such? :)","but we would benefit from tooling guiding you on the right path; flagging expensive deps","if a gap here is official react docs capturing considerations for mobile, happy to help.","happy to jump on that call too. interested to what extent react fiber might help with the issues we see in traces.","happy birthday, myles!","i've always been happy with it overwriting, but my workflow is sketch source-> export -> run through imageoptim. maybe an option?","strongly recommend great suspender for keeping tab memory use under control. chrome's still working on improving this natively","hey! as a longer term goal, love to see that. & i have talked about better bridging webpack & lighthouse for tti","iirc their web worker solution shipped but is still an opt-in (cc ). wonder if we'll get to defaulting ww use","but agree there are significant hacks required for responsive uis, task scheduling that platform could better support.","still much to be done short term for average/lower-end devices (high js parse/compile/bloat, more work off-main thread)","are there specific web worker shortcomings you'd ideally like to see prioritized? perf with larger message sizes? cc","largest reasons to standardize often speed + libraries needing to ship less code (win for all) but features def aren't free.","we had a convo about this. hard to answer the q \"if this can be done in library land & fast, should it ever be in the browser?\"","cc in case it's a known issue. what browser/device were you testing on?","i think this would be a babel side issue were you thinking otherwise?","i assumed in webpack 2.x ensure() might be proxying back to the import() implem that has the issue. unsure now :)","we'll aggregate a list of these to make sure we avoid similar detection pitfalls for future apis.","fair. i wonder if api feature-detectability should be an ergonomics concern we better highlight in blink-dev intents?","do you have a list of other recent apis that are a pain to feature detect?","would the previous es module loader api extension semantics have addressed this sufficiently?","some of 's decks cover how our graphics pipeline works. depends on how x-browser you're aiming for here :)","@iegraymundo google translate is failing me, but rock on :)","i think keeping them separate is fine. do we have a thread where we can continue prioritization api discussions post-blinkon? :)","i'm going to agree with dan and say tdd isnt quite as useful when working with a lot of components.","we had a chat about prioritization apis and a lazy attribute at blinkon. i wish in the short term wevhad better lowfi controls","for data-plan insensitive sites, would pausing load & prompting \"this page appears to be data heavy. continue loading?\" help?","i agree with that approach. i don't believe i've seen alternatives that are much cleaner than just pkg.main/module","nice! cc as this is using sw-toolbox. we're working on v2 of precache/toolbox atm","hopeful we can evolve build-time performance hints to be useful enough to switch on for cra.","thanks, richard! comment is fair. we're trying to push g apps teams to follow more of what we say. meeting with more of em soon.","go for it! has convinced me illustrations for how browsers work can be a super useful complement to technical text","it sounded like your original question was sorted out. let me know if any of the comments on wrapping could use more clarification","same v8 comments generally apply. if there's something specific to node requiring clarification holler and i'll add a note","this is from a phone over remote debugging. you could also use devtools cpu throttling (at a 3.5-5x slowdown) to approx a g4","i was talking to about approaches for measuring this yesterday. we might do some experiments & a write-up if","i do hope to write more about this space soon.want to also talk about your ideas on shared codegen caching of cdn libraries etc","translated with google (i totally cheated!) :) fingers crossed my multilingual skills will get better someday!","i would love to have y'all at chrome dev summit later in the year of we can swing it.","working on a prpl story for angular with and his team. should be usable for ionic","til which i initially thought referred to i/o :p super interested to see what you build. it'd be hella useful.","nlp analysis of talks is something awesome i'd never considered. wish we had a webapp using nlapi we could drop yt links into :)","this is exciting. glad you're exploring sw support (offline support as noted, but also opts you into earlier v8 code caching)","np! btw, is this using the ember sw helpers by ? (noticed it mentioned in the post but unsure if using under the hood)","this was a hella useful format. i learned a bunch about the 'whys' of preact's internals. thx for doing it","nice! webpack 1->2 codemod support?","do you mean on desktop? it may be the case on windows, but we haven't shipped x-platform pwas on desktop just yet","lazy-web: is anyone out there shipping an es2015-only codebase to production (without transpilation)? interested for v8 perf.","that is so awesome. are you working on the final pattern designs in-browser too?","not yet afaik but i recall being told an official package is coming.","hopping on that should tools give developers the ability to set per device/browser/etc targets so they can track size over/?","we're working on exposing first meaningful paint for rum as well as in tools like lighthouse and webpagetest.","there's a new webpack plugin for critical by that should make this straightforward","yeah! was trying to remember which of jeremy's projects used that docco format for source docs.","in trying times, it's compassion & solidarity in our timelines that help. tech can wait.","i might start there. i've otherwise been running cli over csv/sitemap with a little custom code to get the page to page numbers","you might also find chatting to is valuable for your contributions. has been doing great work on devtools patches.","^folks who work on oss libraries or browsers you enjoy are impacted by recent changes. be understanding. let them tweet non-tech","happy birthday, dude. those balloons are..something :p","my 1st real oss contribution was bug-triage/docs for . helped me learn how to help folks & how the core apis worked","and i were wondering if there's a list anywhere of low-level web apis felt were still missing.","this is :) i remember seti ui for sublime not being too dissimilar. which one are you installing?","i completely forgot browserify and rollup were on that page! that's rad. will sent more folks straight there. thanks, dan!","cc would you know the best person to talk to about trying to trim down the zendesk js widget bundle size?","aye. dreamweaver used to generate that code as a way to preload sources for image rollovers. before css got better for uis.","it might be the typescript requirement, but getting closure annotations gen'd is pretty nice. will try.","we've been wondering if we need to make closure compiler easier to reason about or intro a clean abstraction to it","i like the idea of projects merging. has an opencollective been started for it? seems there's ship ujs2, merge, maintain long-term","it's been good to see receptiveness to load being nuanced. fast fmp isn't always enough, but fast tti = usable/tappable soon","if the underlying code is angular based, aot + treeshaking should trim some. i'd also look at source-map-explorer to analyze.","woot. i'm glad the goodfirstpr label improved over time. are you trying to contribute to blink or the devtools?","fwiw, i anticipate far fewer devs will opt for a non static specifier so dce should still be fine.","we might be able to reuse the same machinery for as=script here. or may know more","import() hasn't been fully implemented in any browser just yet (wip). still wip on the preload story too","old thread, but did we end up filing for as=module support? unclear to me if as=script will match behind the scenes.","i've sadly only been to cork once! if there was a js conference in ireland, i'd totes consider coming if time allowed","if y'all ever need help with code-splitting, & i would be happy to walk thru. deec w/react router + import()/ensure","i can confirm i have lost many feet to the web. onus is on us to optimize native implem + loading sufficiently i think","data-structures, algos, caching & optimization strategies.","you *know* i'm going to say perf budgets but i guess that would require the dev/prod env stuff to be deterministic :)","sensible env defaults, well commented hints + link to docs for common tasks (commonschunkplugin, import()/code-splitting etc)","just saw. thanks! excited to see if there's appetite to improve our input controls with more subtle tweaks like this.","thanks for taking the time to test and validate approaches (& on diff network types). mind if i share w/chrome?","y'all are awesome too. let's keep bettering this web thing","it's typically not react on it's own. tends to be a combo of libraries+plugins+user code.","low-hanging fruit seen via bundle-analysis. opts like preact/inferno if using react.","(nuanced) but if possible, split to serve critical js for page. defer rest","trends we're seeing in traces are bundles often >400kb, code-splitting used 10-20% time.","thanks for the offer :) was mostly interested in an iphone 7 as i don't have one in our device lab. got the perf stats needed :)","lazyweb: anyone own an iphone 7 and have a minute to run a quick web test on it for me?","thx to for pushing for it! with all vendors working on script type=module might work out","yep! let's noodle on that soon. we also through most popular babel plugins as a proxy for 'feature interest' last week","it is one big monorepo. tooling mostly makes it easier to handle cross-project dependencies, navigation & discovery.","i've (regrettably) traced quite a few sites that shipped dev mode to production. could we find a way to ameliorate?","+1. iirc there's been renewed interest from safari in building more on <template>. room for more on data-binding?","lifecycle ops alone can save you having to ship some of that custom code, but agree wcs could have a more compelling story there.","for js, modern web bloat imo is a combo of large bundles + high parse/eval costs. webpack budgets help w/1st problem","curious how much of bundle is react + router + add-ons vs custom components. also, any insight into parse/compile of bundle? :)","thx for checking! was a gent & helped with perf testing i needed for a new tool. all good :)","getting there! we've got <script type=module src=module.js> doing fetch + execute. more work on parser, exceptions & csp left to go","have we talked about adding preload support to <script type=module>? iirc module specifiers are pre-parseable.","is `preact run board.js` pulling app dependencies + completing a build without requiring configuration?","i also want folks (library authors, browser eng) to feel like we can constructively work together on areas like perf to help devs","aimed at a cross-section of latter. concretely, i want folks to feel like browser vendors, engine hackers etc. are approachable.","i approach most things from the perspective of being an idiot :) always happy for others to help fill my gaps in knowledge.","the web's success came from working together. let's collaborate more. none of us is as smart about browsers, frameworks & tools as all of us","parser blocking scripts (regular script src) also now get parsed on a separate thread so this should apply to all of them.","evaluate both. angular 2.0 + ahead-of-time compilation + code-splitting would give you similar perf wins. atm i use react/preact,vue","navigation preload for sw could allow for earlier response->code cache cc for pre-1st-exec","for vscode, chrome & terminal, i've found the 2015 mbp 15/i7 handles multiple concurrent projects & hot-reloads flawlessly.","nah :) refactoring a few projects and either codemods or lebab save what's a pretty manual process.","\\o/ was looking forward to browserlist support. that's awesome.",":) i'd see how far you can get with the iphone emulator in xcode for safari, but otherwise webpagetest, browserstack ftw.","i usually pop open a jsbin/fiddle to experiment with syntax then switch to cli/build when comfortable i can build something real.","it'd definitely help (dep on deploy frequency). also opts you into code-caching earlier (1st exec)","neat! i could imagine higher volumes either being a paid service (or defer to something like firebase rest api which offers similar)","that's awesome. it's pleasantly surprising to see a script budget that low w/some vigilence on staying there. great work.","i think we'd benefit if more folks followed 's example of helping make interfaces to core tools more accessible","\\o/ also works pretty ace with the rest of the react ecosystem + can help your app get interactive a lil quicker.","i need to find time to update that book to es2015+ this year. fingers crossed that'll happen.","will check out the issue tracker for existing threads. does webpack care about engine specific opts? (e.g code cache, js streaming)","welcome, tobias! thx for all you've done <3. what would you like to see browser vendors do to help make webpack more awesome?","i wonder if this is because the source uses ts. we're thinking about better treatment of dev config","fmp will vary heavily depending on type of app, how it was authored. both support ssr, critical path optim tools otherwise","i liked 's promise-based api proposal. wonder if have any interest in it.","thanks for putting up with our show! we appreciate the support :)","you want runtime js->bytecode? i know there was bytecode gen work being done w/v8 ignition but cc","this is one reason i think we need to tackle ux+perf like a multiheaded hydra (bake perf-rails into popular tools, docs, data)","i disliked the reaction but feel we can also improve acknowledging nuance (a e.g: biz must prio perf work for devs to do it)","in 2017, i want create-react-app/vue-cli/ember-cli/angular-cli to all highlight perf issues & help people stay on a fast path","i try to acknowledge devs will always use what gets the job done quickly (frameworks, tools). work with toolers to address ux.","do ionmonkey/jaegermonkey support disk-based persistent code caching? read a paper exploring this but unsure if ever implemented.","those main.js files appear to have diff hash ids - same build? i wonder if analyzer is stripping artifacts s/w","neat! thanks for sharing. on mobile safari, it appears to be failing to fetch data. bug?","that said there are frameworks/libs that abstract their cli on top of it (e.g polymer-cli, react-native etc)","i'd be happy w/cleaner integration between ghstackoverflow so bugs/feat requests go in one & questions another. avoids forum infra","we've been chatting about a different set of budgets for dev or just showing in prod. i think est min/gzip is helpful","7: so you can preload all of your app's dep graph (i'd caution measuring cost). i'd preload based on analytics/likely routes",":) can't wait for complete native support to land!","you will need babel-plugin-dynamic-import-webpack to get this working fully iirc. cc for a confirm.","appreciate the head's up! just fixed it up with an annotation overlay.","we've chatted about making the modular builds even more atomic (e.g splitting up auth etc)","there are interventions where browsers can throttle/redirect to faster path but not break the web","glad! i'm strongly in favor of giving devs better data, tools & guidance to fix perf issues vs","my preference is enforcing cost constraints (parse/eval/size) at a framework/tool level. drive improvement wo breakage","+1. working on webperf + ux experiments to figure out a clean way of introducing per-device suggestions. fun problem!","til. my workflow for per-script blocking has been using the network requests blocking experiment (i wish we'd ship it..) :)","happy birthday, paul!","let's chat! speedometer 2 includes react, redux and inferno workloads but we can def do better.","then evaluate if there are components or deps that aren't needed for particular pages/views. i would import() those.","if bundle is still big, try analyzing the break-down using source-map-explorer/webpack-bundle-analyzer for offenders","i like that. dumb follow-up idea: hook to allow webpack dashboard to visualize historical changes in perf w/blame.","<3 preact. tbh most of the bloat in these bundles look like user-land components & vendor deps vs react being main culprit","wp puts all your scripts in a dependency graph & generates production bundles for them. supports code-splitting, tree-shaking.","do you have traces or a webpagetest before/after you could share?","fortunately script streaming will work for either approach.","just updated a webpack video we're doing to use dynamic import(). hurrah for what should be a quick system.import>import codemod","rm -rf url.js? :)","til! thanks for the insight on this working on parser blocking scripts too. the advice around larger (vendor?) scripts 1st is good.","i want to enable \"fast by default\" in as many libraries & frameworks as we can.cli tools then throw on doing the slow thing","this was across different classes of app (including those predominantly using react || ember || angular 1 etc)","will be publishing a large study on this in jan. sites that are interactive most quickly ship <250-300kb script on avg","that's my understanding. embedders run a streaming script task on a background thread in order to stream scripts to v8.","this is just for v8. i don't believe chakra, spidermonkey or jsc use a similar approach but worth checking :)","+1. wish the es2015 support in the safari tech previews was becoming the default sooner. would save on polyfills sent down the wire.","emscripten and wasm have been the most interesting bridges between those two worlds of late.","yeah. you can either just run it via an npm script or run it as a shell command via gulp. don't need a plugin.","exciting! deets? we had a ~idea for smarter bundle deployment: ship smallest payload based on feats+device+connection","haha. a fortunate typo :) i otherwise always wear my es combat boots while writing js.","as we shift to more deploying es2015/16 to browsers via this, js engines have more opportunity to bug fix & optimize","with some of es, i think both compat and combat apply :p","i still work on :) if you're dev'ing for the web, it's good to know about all the browser devtools available","that looks so nice. will the switch to async import() likely happen before webpack 2 goes out of beta?","i'm known for my edgy javascript movies. nightmare before gc. charlie's caching factory. beetlejit.","y'all made the single largest saving to my daily dev workflow thx to install speeds this yr. huge thx","looking at main thread scripting, fmp, tti, si. all data will be published, but slow going. mobile device testing takes time :/","today is smaller apps w/basic optims+transforms. i'm working on larger scale profiling of 15-20k prod sites using js frameworks","in this particular case, i'm using a slightly different modified benchmark. looking at diff with preact 7.1 now","if you care about who spends least time in script, so far looking like: vanilla -> inferno -> preact -> vue -> react lite etc.","it's probably going to take the rest of the day. profiling on real devices + wpt + across a few diff benchmarks.","jake's correct. this is an optimisation devs shouldn't really think about. if it happens to lower parse/exec, win.","starting the morning with a parse/exec time study of react, redux, inferno, preact and vue across diff mobile devices","in v8 we cache compiled code for scripts seen twice in 72 hrs. if loaded from cache api, we cache in 1st execution","if i have time i do want to get inferno in there. on my backlog along with cycle.js.","ember cli is already covered (major fws) :) as is angular 2.0, react latest etc","system fonts aside, this looks incredibly promising. excited for the webfont byte savings that this'll enable","work now includes major fws, typescript, vue, raw es2015+babelified es2015, webpack w/react||preact, redux, elm. almost done","but this can't be gift-wrapped.",".app helps with breaks. i'm pretty sure he could be turned into an extension.","although if you're looking for more docs on a particular workflow, sure would be happy to hear about your ideas.","that's totally awesome. enjoyed how quickly --preact wired up aliasing in builds. --inferno + scaffolding for new apps is","does nwb --inferno also do the same for existing apps?","totally reasonable :) will give it a spin on a few larger codebases and file if i run into anything.","google crawler can interpret js so spas should render fine. that said, folks like iirc still saw seo wins w/ssr.","it will be open source for sure and work in diff browsers. web workers are out of scope for now but may explore in future.","thanks for publishing the source, jason! noticed a few quirks on ios (but you appear on top of them). works great on android.","cycle.js has a storage driver for persistence. would one use a similar in-memory driver for switching between store/no-store?","nice! fwiw, it looks like filters and removing items appear broken on live atm. great to see more ps examples in the wild.","primary reason i use electron apps are deeper os integration, presence in mac app switcher. hope pwas on desktop cater for this one day","i wish any dev could remotely observe tc39 meetings so they're way more comfortable before asking y'all about full participation.","interesting! (cc ). our numbers for devtools suggest ~24-25m based on opens/use of elements. great to have another data pt.","cheers!. digging into perf of 5-6k apps using react/angular/ember/jquery/other things atm. perf todos all around :)","i have no qualms saying perf on many of g's apps require perf work. diff teams, but trying to get them caring more","not opposed to this, but only if caveated with \"measure before you optimize\". we want better drill downs","if i had to describe in one line: aot compiler targeting vanilla js + micro-framework?","so awesome. did you end up publishing the source to the next hn app anywhere?","not at the moment. iirc --v8-cache-options=code will force code caching otherwise.","could you expand? in a world with engine-level code caching + sw caching of scripts for repeat visits, interested in the gaps.","v8 caches code compilation data (and loads from disk) if a script is seen at least twice in a short space of time.","totally agree. we're focusing more on tti these days and want to expose a proper rum api for it via wicg eventually too.","i'd measure perf difference of observing specific subtrees you care about (build tree, exclude text fields) vs d.b","tree maps (what most js bundle analysis tools use) are based on a tiling algorithm. there are a number of such algos","1. check if dep is really needed for current route (or can be loaded later). may not be used at all, 2. look at lean alternatives","+1 we asked to work on trimming their js client sizes down and new releases will be getting a little smaller.","i think there would be huge value in native bundle analysis tooling baked in. unsure just yet if it'll happen.","^ many other tools exist here (webpack-bundle-size-analyzer, disc, webpack-visualizer) but this works w/anything w/a source map","i use seti ui for my terminal and editor theme. terminal app itself is iterm2.","we don't see enough apps settling the main thread quick enough to hit a fast tti on real mobile devices + networks.","<100kb of script = less js to parse/eval/compile = less main thread pegging -> quicker tti (as measured by lh)","in our traces, the avg app built with a modern framework is interactive in 12-24s on average phones. <3 for this is good.","splitting alone doesn't improve perf - split to ship *minimum* code to get a route useful, defer rest","hey folks. <3 libscore. using the api does v1/libraries/<foo> always return the complete list w/o needing other options?","seems to be working here atm (just tested rendering a few charts calling the api). perhaps doing a slow roll-out of updates?","time to first is valid web performance metric ;)","shipping less js + service worker caching for scripts and styles + a little ssr ftw.","qq: did you use the cli + mobile flags when building this or did you have to manually handle sw since that flag is disabled atm?","awesomeness. thanks for getting that deployed! appreciate it :)","but make it a point to not reco libraries i haven't used yet (inferno). happy to once i've tried it out.","between chrome, opera mobile & samsung (2015-16) ~50% global mobile browsers support pwas [statcounter data]","would love to see more tools enable a swap later on more easily (nwb offers this via `nwb --preact`. super sweet).","my workflow is to use react and its perftools up to a point then swap in preact for prod builds.","my workflow is to use react and its perftools up to a point then swap in preact for prod builds.","i was super surprised it was already implemented in two browsers. need to keep up better :)","glad to hear it! :) happy perfing!","not enough folks talk about the problems with react's ssr at scale sadly (high cpu costs, need for streaming)","the very best of luck with what comes next, sir. your contributions and mankinis have been super appreciated :)","excited to see if this exploration leads to byte savings over uglify w/easier setup than webpack cc plugin","oh for sure. i'm saying there's plenty to inspire a better breed of baked in a11y tooling.","testing it all serves and builds as you would expect. live reload works etc :)","i remember you played the by our desks in london. you most def can play. i always assumed 1 man band was your fallback career :p","profiled a few hundred spas recently and the median time to interactive is over 11s on real devices + 3g sadly.","it gets a lot of things right and i'm a fan of their low-size footprint. would love to see more production vue apps we can trace.","our team at google s the front-end community. we want everyone to collab & do well perf-wise on mobile regardless of tech stack.","i had this issue w/ reacthn & shaved many kb switching to fb modular builds. got a about this coming soon","map entry points to a partic/custom directory structure (e.g code-split by /routes). similar to next.js uses a pages directory.","did per route js bundle size improve?","i agree phrasing can be tweaked. perf optims cross-section of splitting (bundler, router), bundle (less user, (maybe) lib code)","what my research on a few hundred react apps (on real devices, networks) showed was we need to highlight perf issues better","even bigger issue on mobile devices. higher load, parse, execution times on real networks makes for long waits till interactive","i cover this in my chrome dev summit talk. often folks shipping monolithic builds (or large chunks) pegging main thread.","my team work weekly w/react (& webpack), angular, ember, preact teams. we want to collab on everyone perfing better","thanks for flying down just to co-present. hugely appreciated your insights and time. also great seeing !","looking forward to more production apps shipping with next.js that we can trace. lots of goodness in next.js othw :)","appreciate the kind words. thanks mike!","nasa wanted to try switching to pwa & heard of polymer. in this case, app toolbox was a good fit for architecture & perf targets.","i'm pretty happy with preact. it might be useful for folks to drop it in and check if their unit tests still pass.","..and scalable loading too! ;) (prpl, http/2 server push, preload, code-splitting, parse/eval and all that fun stuff)","same. it was awesome meeting you all in person and talk webpack <3","do you know if folks usually run webpack-dev-server in a diff tab? trying to run a webpack plugin that relies on server running","yay! that's awesome dude. cc . we'll have more on what this might look like for webpack cli soon :)","\\o/ although bytesize isn't the only factor, smaller total code for a route = lower load/parse/compile time than a big js bundle","i was pretty happy with 's import proposal. fingers crossed for stage 3 reviews.","before long that is the solution for esm and tools then just use as canonical","tbh would love if create-react-app did this. workflows like next.js try to prescribe by default iirc","require.ensure()/system.import() with webpack works well with react & react router. covering a lil at cds","thanks for initially hacking on this. it's awesome. riffing with on some work that builds on it now. exciting!","been digging into sw with ember and angular too sadly only have 30m for this talk (trimming content still). next time!","out of interest, were you looking into this as part of react fiber or just a separate exploration? :)","parse/eval/complexity are something i want factored in the future, but requires instrumenting script. byte size is the mvp.","^ huge thank you to the webpack + react community for the warm reception to the rfc. looking forward to iterating towards an mvp","lifetime chunk/bundle tracking is an interesting idea. could see it working local (save metadata per build, compare) or hosted","needed to write this for some perf analysis stuff i'm building on top of lighthouse. would if we could switch to tsproxy for lh","not that i have heard. afaik, most of the focus there is working on extension api stability vs improved dx","retained circular references between js objs & dom objs that may leak (but delete & accidental deopts better)","do you have a test case/page/pen where this is happening so i can try reproducing?","this appears to be an edge-case issue with one of the v8 backends. is assigned to that bug and may look further","we'll aim to update web fundamentals with the final heuristics in an easy to reason way. personally had to reread a few times","did you try getting that one api you needed for the coverage project re-landed? would be to not need a custom build for users.","i usually use web font loader to async load in fonts. recently falling back to a sans serif if not present was nice","\"every <link /> background pre-fetches the json representation via a service worker\" omg. awesome.","working on the firebase issue (their default bundle is huuuge). the modules in their npm pkg are a lil smaller","if we can reduce initial library payload needed, lazy load rest that might help.","i doubt most apps use 100% of react/ember/ng2/vue for interactive 1st view.","\\o/. anything that helps devs get interactive sooner on real devices is welcome.","wish more frameworks had modular builds + progressive bootstrapping. splitting user code has limits.","thanks for pinging over the demo :) wonder how feasible it would be to reduce api usage by polling/analyzing at shorter intervals.","to support top-level await we'd need to execute as if wrapped in (async function() { /*top-level await code*/ })();?","happy birthday, dude!","cheers. the team have been heads down on service worker tooling lately, but we'll hopefully come back to updating it soonish","tbh i wouldn't expect to see debugging support massively improve while custom chrome builds are still required for webvr. someday","i believe we're waiting for the launch calendar entry for that one to be approved ;)","might be a good question to ask about in a follow up survey. my guess is most current prod apps written pre-create-react-app","^ so far: 55% webpack 1, 26% webpack 2, >60% using code-splitting, >30% using some form of tree-shaking, >25% http/2, 20%: sw","there's definitely nuance on that last one (e.g enterprise apps targeting desktop). generalizing atm so i get at least a rough idea","just dropped in a preact option to the last question.","wasn't able to make it down this yr sadly (visa & closing on a house). i will be all over polymer & react at chrome dev summit","iirc es6 classes extending react.component don't support it so might eventually get deprecated.","\"yarn publish\" publishes packages to the npm registry.it supports html imports > than npm does too","could you check you haven't got chrome:flags -> -app-banner-engagement-checks enabled?","ah, how i wish we could ship proper chrome on ios. sadly still have to use wkwebview behind the scenes.","this is more bleeding edge than the dev channel (everyday vs once-twice a week). linux: atm, dev channel is still the freshest opt","does preact-compat also shim support for replacestate()? running into a few issues with it showing up as undefined.","savings wise, shaved about (gzipped) 37kb off final bundle size. for a drop-in library, that's pretty decent.","i've only found one bug switching a react app w/react router+ssr+webpack code-splitting to preact. about 98% \"just worked\"","closest thing we've got :) i honestly don't see the loader landing in browsers for a long time. modules sooner.","we did have a canvas inspector in 2013 but it was removed 2 years later as it wrapped objects for canvas calls & was fragile.","^ a few more notes: lighthouse does 3g throttling *by default* & the chrome extension works on production sites + local dev","curious if has come across the need for this in his web push debugging.","could you file an issue with some more info against yarn if there are packages missing? (in partic, kind of pkgs)","if i have time (early next yr), i might do an angular 2 series similar to this one. waiting on: --mobile flag coming back & perf","^ part 4 on universal rendering and progressive enhancement for react pwas should be up sometime this morning.","w00t on the byte savings :) did not know about the appearance in the fe focus newsletter. thanks for letting me know!","with npm cache and i were seeing installs in about 10-15s (cold ~150s). yarn is still faster at 1-2s.","there's definitely a trade-off. minified chunk sizes looking okay for my apps, but maybe worth doing a study on?","now is the time! getting better at tooling that can expose goals (lighthouse+tti), patterns (prpl)","entirely agree. there's only so far we can go with existing tooling/approaches. want prpl adoption too.","good news is talking to webpack about 1. providing proactive perf suggestions and 2. splitting by default","this is just react router stable + webpack 1. not planning on switching to v4 just yet :)","precisely :) the default module bundling most folks use is shipping 1 large bundle for an app vs just what a route needs","whoa. *someone* is looking mighty dapper today.","to me, pe is resilience to spotty network connectivity blocking js & any content rendering. ssr or small js bundles/offline help","the app toolbox with service worker support is legit. lots of interesting perf work (& broadly applicable)","tip: if deploying to node on google cloud, the `--verbosity debug` flag will save you a whole lot of time debugging weirdness.","discovered while doing my masters that most authors are happy to just send you a pdf if you ask them directly vs pay those fees","so far only worked on react projects where ssr was added in later on. in hindsight would have been way easier earlier.","we all want the web to win. if we get more optimizing tti & reliable perf on mobile devices, win for users","as noted in another tweet, react doesn't make codesplitting harder at all. just want to see more ppl split by default","react. this is specific to perf on mobile+3g. most sites we profile have large react+webpack bundles. smart chunking helps lots","at a v8 level, we're working on optimizing library & framework code better. reliable perf reqs work on both sides","what happened to the idea that we can *all* do better on perf? a faster device is not a panacea for addressing this for all users.","i'm all for getting pwas fast everywhere. high end and low end phones. less js to execute benefits android *and* ios users.","it's unfortunate..like seriously that this is your reaction to this work. route-chunking alone = shipping less bytes to *everyone*","i mention others later on in the series (including selio - built with react and flux, us iirc).","pleasure! if you come across anything that needs a little more clarification, please feel free to yell. happy to write more.","^ parts 3 and 4 will be out later this week on offline support & enabling progressive enhancement via isomorphic js. excited.","definitely been convergence in many areas. i think the crux is invite abstractions & tools to the party when they'll add value","would love if there was a curated list of projects that went react preact","codemirror had a vi mode experiment that might be reusable here. soooo..maybe possible :)","shift + return/enter will take you to the next line (rather than execute) and history (up/down) has code entries","most of my requirements for still exposing a url bar would be solved by the share api + copy-link-to-clipboard","theres an unspoken cost to oss & lots of good-spirited folks happily take it on to help others. deserve recog","i'd be interested in recognizing people *behind* the \"best of 2016\" js projects (folks that contribute big but don't get )","ah, gotcha. i'll check out your branch and tinker with the build some :)","3kb isn't bad at all for compat! vendor bundle with react+deps is 100kb gz atm. hopeful for trimming w/preact","i really want to experiment with preact in a branch of reacthn (in partic how it plays with react router, ssr)","cheers. i'll keep an eye out for them maybe appearing later in the week","fwiw i worked around this in reacthn by using the unofficial api to ssr comments in one request+hydrate later using official api","i'm mostly using webpagetest (which supports network waterfalls, markers, timelines) & is also pretty nice for more","oh gawd. i remember this.","a plugin would be super appreciated.","that's awesome! i'm doing something very similar in another project using webpack 2. super duper nice. only issue i ran into was ssr","also how much we can library-ize storage usage info x-browser (w and w/o storage, quota apis)","over in devtools, we're also looking at surfacing how much of each storage mechanism you're using","i put developer experience first over user experience. the user always comes first. if you deliver on perf & use tools you ,","real credit goes to who wrote most of the webpack chapter ~2 years ago :) he's a great writer!","whoa. this is *super* interesting work. just read through the blog post too. is react-wildcat used in specific parts of nfl prod?","perhaps not. configuration/flagging for script source and descs might be nice but wonder if others want this too","i would prefer for descriptions to be hidden behind another flag so really just want names displayed","if you're experienced with and are interested in progressive web apps or prpl, would input on a new article i'm","i found it better than reviews might suggest. hard to fit heavy character development for that many in the time, but it was deec","brain-storming ttt s4: webpack 2, flow, lighthouse, timeline & chrome:tracing, service worker libs++, perf budgets","not yet. prpl guide & pwas with react rolling out in next weeks","libraries like preact have been helping with the \"ship least amount of lib code\" for react-like route booting","i think you get it. assume react + libs = fw code here? for route boot, need much of it or a sep leaner thing","this is one place where frameworks that are small or have a modular core/code stripping really help keep entry chunks lean.","congrats! if there's any interest in getting more technical reviewers on board, we/chromies are always happy to help.","it becomes tricky because i've seen people assume same (stage-0 legit for prod) just because a babel transform exists for it","i prefer esnext. it's terse and also applies to early stage features that are still being super iterated on.","great work! this is way nicer than what we designed for the v1 apis. less magic","this idea has been brought up. i'd love to see it happen.","we would collectively benefit if more tested on real devices & developed w/cpu & network throttling (3g) on in","\"if i can get ember to load in 1ms or an 8mb js file to parse 30% faster, that's not money i'm going to leave on the table\"","i would go incremental on prpl as might be an easier sell: code-split by routes, look at preloading, sw then maybe h2 eventually","you're absolutely correct. requires careful design otherwise entry chunk becomes bloated, negates code-splitting","with minimal work on the build setup side. ideally a lot of this work can be inferred and automated better","webpack2 can look for system.import refs to understand which chunks should be automatically bundled into sep chunks","webpack 2 uses system.import from the es module loader spec (polyfilled). a little easier to automate than with wp1","gotcha. so chunk dependency resolution for specific routes fail due to revision names changing between builds?","also fair. use case is perf: rather than shipping 1 x large bundle for whole app, ship smallest chunks for route. lazy-load rest.","thinking of a few ideas for automation. tricky as have to assume using a ver of react router & partic patterns","i might write something. this falls loosely in the realm of what webpack validator style tools could help with.","i feel you. webpack code-splitting is straight-forward but i recall needing 10-11 articles to \"get\" it because docs confused me","neat. as mentioned by one or two comments makes a lot of sense if split by routes. imo worth exploring. only serve code user needs","i worry about the \"doesn't ever happen\" cases due to cost of refactoring. if not factored in early, we'll keep seeing big bundles","automating by routes is a lil better using system.import + webpack 2 with react router but still feels like a black box for many","my experience too. guess there's a few phases to the webpack journey: transition, sorta grok it, eventually optimising","heard similar on that last point. folks unsure on how to craft a code-splitting strategy beyond generating multiple chunks","i would love to explore the webpack docs tackling this better & improve awareness through a 'that bundle looks big' mode somehow","noticed many sites using webpack don't use code-splitting. is this due to 1. difficulty, 2. awareness or 3. bundle small enough?","it happens! if it helps some of the podcasts i've been on have all participants record their audio so multiple fallback sources","it's shorthand for webassembly","has some js coverage experiments for unused code that might interest you","varies based on engine but we know some es2015 code in v8 (and node) could be faster. as says pressure helps","benefit of transpile to es5 minify step is js engines (e.g v8) are better optimised for that vs raw es2015","iirc, fkl use webpack's require.ensure() + async getcomponent with react router + link preload. oss!","i'd wonder how much of the firebase, motion and ui packages are really being used for the entry point. that 1.2mb is 1st bottleneck","i personally liked the approach. would love to see shadow dom experimented with more in the react ecosystem.","what's in that 1.2mb vendor bundle other than react? i'd investigate that first. app.js: code-split based on routes using webpack","newer guidance on optimising for interactivity is in the works. see code-splitting with webpack, prpl w/polymer atm.","only loading the minimum bundle for a route, optimising for interactivity and lazily loading in non-critical js all the way","let's add it to the backlog :p. i think we're going to see more complex sites running into the need for some guidance on approach","a potentially better model might be responsive + forked code paths (a set of bundles for mobile, bundles for desktop, % overlap)","will route chunking and html streaming be coming to fkl/mobile too?","this. so much. npm is awesome but smarter caching and http/2 support would be mucho welcome.","nice work on react-server. interesting to see lazy-loading defaults, ssr & nods to bigpipe and scaffolding baked in there.","might webpagetest consider \"suggested profiles\"? e.g \"progressive web app\" (mobile 3g, nex5, 3 runs) to encourage mobile testing?","despite knowing blink browsers are fine with just those 2 sizes for homescreen+splashscreen, i use realfavicongenerator to be safe.","i know has been keen to improve the webpack docs story and loader readmes may fall under that.","react supports ssr to enable progressive enhancement. custom elements do too (define content in light dom (works w/o js)) then upgrade","if it's not feasible, you might be able to get away with appshell caching using sw-precache and feed caching with sw-toolbox.","nice! any details on how you approached sw offline caching for your content, updating etc? :)","grats on the article! do you know how often rb is used for prototypes vs starting point for prod apps? (imag most start frm scratch)","full cms-page caching with a service worker, some route chunking and h/2 feasible. lose perf benefits of appshell, refetching ui.","this doesn't sound as dramatic as a week in javascript. unless these are all node modules.","what is happening.","i'll be including some react specific advice though this should work just as well with preact","haha. this approach is probably too pedantic or silly for most, but i like it.","working on a write-up of the prpl pattern with webpack (route chunking with precaching, h2). if folks have qs to include, hmu","yep. npm repo :package is nice and quick if you know the pkg name. command falls back to 'name' field locally if not supplied","i've been happily using david the last few years but it's also neat there's a simpler version baked in. one liners to bump are","tips open repo: npm repo open homepage: npm home old deps: npm outdated strip devdeps --production fast init: npm init -f","this is awesome. imagine most users unaware of chrome net internals - would love to see h2 dep trees better highlighted in devtools","^ updated with info on cache eviction, persistence & querying storage use. holler if you have web storage qs i can capture there","do it! how else will the children remember? think of the children!","lost.js: a framework that rewrites itself every week to stay en vogue.","seeing how crazy i go with js laptop stickers, starting with them on my skin could not end well.","we're working on a generalised version of prpl for webpack and jspm users. will have non-polymer docs soonish","looping in on devtools docs","looking at sharding approach - wonder how feasible it would be to async load in initial bundles.","appears fast! planning another write-up? learnings","might have looked at webpack code-splitting+h2/push i think","talking to about how we can tackle this for the webpack (and react) community. collaboration ftw.","i think we try covering some of this at pwa summit and chrome dev summit. sure theres more coverage these topics could use","i think some folks see so many cases of big apps built with fws that are slow (esp mobile) and get sad we can't do better. def can.","(afaik) bg parser doesn't know js and doesn't look in <script>/<script type=module> so modules can't use it yet. would need change","wcs: afaik browsers have bg parser for html off main thread, html imports take advantage of that to parse/fetch deps async off main","wc certainly isn't only way. you can use any library/fw. key is fast time to interactivity, good perf on 2g/3g, lower-end devices.","+1 many google apps need to improve perf. we know many 3rd-party ones do too. we want everyone improving","if you use rail, get fast time to app being interactive (& a high lighthouse score) use w/e.","sure. we're planning out ideas for more (cev1+interop, lazy loading wcs, reactive elements). stuff","i would to see that. beyond intelligent bundling next part to nail is reliable perf (sw precaching, app being interactive early)","there is more at a fw level that can be done to save on lifecycle code with custom elements. let's keep talking!","i want to see as *many* devs empowered to ship fast pwas as possible. we'll get out more tooling & guides on tti soon","working on a very similar train of thought with webpack 2 - seeing how close we can get to prpl for react folks","cheers! back now. is this using h/2 push + code-splitting?","seems to be down :) super interested in details. some of us have been exploring prpl outside of polymer w/webpack, jspm lately","fair :) pros/cons, why use over existing tooling, est bundle diffs are always","into a little of everything. my team work with polymer but we also work w/react, ember & angular. helps us grok diff approaches","thanks for sharing! for state management, are there benefits of baking in that would enable more than delegating to a library?","i react's model. that said, custom elements work with virtualdom, jsx, ssr, es6 modules. what specifically would you change? :)","i use rollup + the rollup uglify plugin on my babelified code. assume babili may eventually be faster","good question. highly dependent on your system (throttling my mbp is very different to throttling older pcs). adjust appro","i ran into this when trying to throttle an app using some realtime firebase data. looks like someone might be on it.","was looking at react-server last week (neat!). didn't see h/2 push in docs.","this version is a gwt-ified java build that isn't fully ready just yet (should be soon). cc who worked on it as fyi on perf","i've heard (as of july) bing bot executes/understands js as part of their crawler too but havent seen confirmed widely","crawlers are js aware now. ssr valuable for ensuring content gets on the screen fast (w/o spotty networks, js being bottleneck)","understand. correct me if wrong: diff between regular filesystem api and apps sync filesystem api was sync with google drive?","we're interested in understanding (and filling where feasible) the gaps between pwas and chrome apps. what are you missing atm?","it's too much work today, but i think we can lower the friction for setting some of this up with better tooling","no guide yet but cc in case its on his radar. iirc one orig idea was presets for diff devices","at the end of the day if code-splitting + tree-shaking + h2 push + some variation of prpl = good ttfi i think it's a win","i have many thoughts on prpl (outside of polymer). to see it/a deriv work for webpack","this. the web would collectively benefit if more of us developed with network & cpu throttled (e.g low-end android) devices in mind","phew. thanks for confirming! i'm on the lookout for some more oss samples using these patterns w/webpack2. might just write them","read this when you published :) enjoyed the framing as progressive loading. fan of moving towards progressive render+bootstrapping","that approach seems pretty reasonable to me (not as concerned about hmr for this setup)","i've got some concerns about the impact of duplication but it'll vary app to app. link to your plugin out of interest? :)","good to know. is there an issue tracking your code-splitting efforts?","digging into lazy loading with webpack's code-splitting + react-router. interested in production apps using this pattern","they mentioned they're still stripping back ember-cli portions they don't need but this helps (cc )","has anyone bulk run slow-deps against popular clis? curious how much room for improvement there is on angular-cli, ember-cli co","time-to-first-pain is definitely a real thing in web dev :)","i think the api might let you update in video annotations (cc ) but animating would be a custom player :)","thanks! we could probably do a follow-up deep-dive on webpack 2 sometime. i'll add a note :)","this is dope. working on it for a talk/demo? :) assume it's all based on webaudio api under the hood.","eric's right (all devtools feature requests go through there). i haven't seen requests for forced sync events just yet.","are you debugging sw with the application tab in ? flow there is way better than sw internals page. feedback welcome","should be wrapped up with annotations by tomorrow.","^ tip: gzipped & min localforage is 8kb (w/x-browser support). if just targeting browsers w/promises you can get it down to ~6kb","the homepage mentions \"works without javascript\" but the rules expand this to \"javascript libraries\". unclear if js is forbidden","oh, this wasn't a slight at webkit at all - just excited about writing patches. i've seen chrome take just as long to build.","you're a trend setter, joshua! ;) one thing i'd love to explore in more detail is how x-browser quota and eviction works.","appreciate the confirmation :)","how? *clearly* you were named after the programming language :p","has anyone managed to test out how well offline caching works with the latest experimental builds? this is huge otherwise!","heck yes. fun stupid fact: my first real experience w/js was writing a parser for it in pascal. i miss other languages sometimes.","pascal delphi c/c++ visual basic c# actionscript javascript","space cat pants sparkly jacket bill murray shirt ex-googler most sf thing we could have seen","at some point we might also want to look at webpack load/bootup time for the average build","gotcha! that's totally rad. (may be worth including this info in the readme referring to alternatives)","i'd love future versions of yeoman to better enable creation of create-react-app type clis","would i be correct that idb & cache api are only storage mechanisms that work from sw? web/dom storage have no worker support","afaik popular apps default to cct/webview more often these days. may have more insight here on this","attempting to deliver a ux flow like native (in-app) i'd expect anchor cct, window.open() browser","this is one of those edge-cases where i don't think native share/ballista would help much (each site would need share)","both polymer-cli & angular-cli now support sw and appshell models. would a vue-cli flag for pwa. happy to draft ideas","going to try this out with sw-precache (cc ) as it has good support for runtime caching too (sw-toolbox)","entirely depends on the type of app being built.","if can't do this, i'd opt for appshell (ssr shell) and dynamically load content. it","i like appshell (ssr shell + initial content) + js to fetch content for other routes","aidan! i remember him. he's a really chill guy. was indeed the recruiter that hired me :)","@_hooan there's sane defaults and then there's installing half of npm by accident. hopefully clis will balance this by focusing on the 90%","in this case i'm referring to complete web apps (something real you'd use) vs. a starting point (boilerplate) or smaller example","possible :) i've found oss apps that cover advanced routing, state mngmt, server-side rendering, async data fetch etc lacking","we convinced ourselves that new projects can't be started without tools to solve problems we don't yet have. this is changing.","another option: communities rally around 2-3 exemplary oss apps not tied to a company; we invest more time in making those","this is true. i think we've all written and deployed enough bad code to make this less of an issue, but could see it happen.","this is particularly prevalent in both react & angular communities (hoping recent official cli stories shift focus to examples)","seriously. provides 1. learning opportunities, 2. free prs to improve app from folks who it, 3. way to maybe identify hires","+1 your gist. ember-cli is imperfect (gaps in webperf addons, deploy story) but o/w covers *many* bases","js framework communities: imo users would benefit from fewer boilerplates & more real-world, up-to-date oss app examples","the rich add-on ecosystem is probably the biggest gap for me (helps for things you don't want to bake in just yet)","they have! i usually use the tech previews for their latest devtools + a combo of simulator/real-device for safari testing","amp does and will hopefully inspire the long-tail. for today's web, imo experimenting w/stop-gaps that improve user happiness is","what device/browser are you running into issues with it on? we could prolly do a perf audit and share some suggestions w/them.","this was actually just frames from webpagetest but devtools > timeline and network both have screenshot support.","realaudio and realmedia were legit. oh no. now i remember windows media player and quicktime","nice! remember having to write one of these a few yrs back. perhaps it'd make for a fun supercharged episode?","web payments is standards track but i wouldn't be surprised if we saw libraries that played well w/both","thanks! we're planning on improving value summary of web components / polyfills compared to polymer soon. gist would be","happy birthday, paul!","happy birthday, man!","definitely. also cc working on webpack related tooling in case they're interested in direction of this.","chrome 54 (canary). enable experimental js features.","ditto. can't wait. currently in-dev across all js engines.","this is 54.0.2803.0 with experimental javascript features on. async/await was staged so there's also that option too.","i just use application -> clear storage to reset state of the world (storage, sw states) but +1 on","can you provide more insight here? debugging sw via the application tab is relatively straight-forward. using an older chrome?","^ i'm working on updating the framework benchmark to use latest react, ember, angular etc. more to see in a few months.","glad to hear it! mind if i drop you an email? a few questions on caching strategies, tooling etc.","react is the new backbone in my mind. mostly bring your own architecture, some logical evolutionary steps taken, but still kiss.","i recommend using devtools emulation for breakpoints/ua but ios simulator & real devices to test layout, cpu, browser bugs etc.","and webstorm! ran out of characters :)","might be worth commenting with your research on h/2 and (for now) continued benefits of critical css with it.","good question. afaik, the hn api doesn't support third party clients authenticating, but we can double check.","i think this is pretty neat. do you know how accessible these components are? probably been the biggest challenge i've had w/css only","we're a big company. you'll see complex apps in prod using polymer, angular, gwt or internal frameworks","they've seen it :) btw, is it on github already? we're happy to help with any pointers on perf, sw etc in case helps","i absolutely *love* ok-google.io. surprised we didn't ship something like it from the start :) <3 to see it as a pwa!","yep. realfavicongenerator is what i use and they have sep tools you can use too (use' end up pruning generated icons)","do atom or code support ligatures?","open web request: list of coding fonts supporting script-style italics","mobile/browser/os stats are all from google analytics. rest of the stats i use are from lighthouse.","the hacker news api is open (runs on firebase). if someone wanted to work on a polymer port should be possible :)","^ stats a day in: 34% android (most accessing w/a browser that has service worker), 29% ios (safari), remainder desktop browsers","most native apps include their shell/ui in the bundle installed (avail offline). pwas encourage this via an appshell","it's less for users with js disabled and more for unreliable network conditions where js bundle might take longer to kickin","cool cool. if you notice any ff bugs at all, happy to work on patches. i'll do another sweep in the morning.","works everywhere. full offline caching (enabled via settings) will work in chrome, opera, firefox. degrades in other browsers.","that's fair. i've wanted a gui on top of that api since reading the original article. will be using this. thanks! @vdemedes","but also personally validating pwas building with react, ember, angular 2 and so on.","if you need to store, i would personally cache code chunks in an async storage mechanism like indexeddb","working on updating a benchmark with \"legacy\" angular, backbone, ember and react codebases this week. i feel your pain :)","it's tricky. if on the go/smaller screen, i use multiple desktops w/devtools fullscreen for perf audits","nice research. i'd love to see a lot of these steps directly integrated into angular-cli's build pipeline (default for prod builds)","yep! figured :) hoping to update speedometer w/latest versions of apps soonish. interesting to see if any significant perf diff","with our powers combined we are the the progressivewebappeteers! <i'll show myself out the door now>","^ these libraries work well regardless of whether you opt for an appshell model, ssr shell+content, shell+streams. choice yours","fingers crossed. i'd filed bugs to raise all this info (for all storage types) in devtools > application tab","interesting! our of curiosity does look at benchmarks for webapp perf like speedometer? (v8 & jsc use it)","silly q: why generate a <domain>.webmanifest file rather than a <domain>.json file? txt editors already understand latter.","link sharing (web share api and co) might help here. shorter term i'm hopeful uas provide some affordances for getting the url","i really like the a2hs badging in this build. thoughts on any discoverability concerns for the 'pop back to browser' gesture?","i wouldn't be surprised if / and c/o were interested in this for wct once available on npm","it's interesting! biggest challenge i've had is embedding snippets that are part of a larger source (e.g few files for an app)..","iirc and others have asked about native meteor support for pwas, sw but nothing heard back just yet.","not yet! meteor doesn't have a great pe story, but it would be possible to add sw/push/manifests to their apps","1) sadly not! preparing to move countries :), 2) would still love a jsbin tee! 3) small. maybe see you when back in london sometime? :)","prefetch (all except safari), dns-prefetch (all modern browsers), preconnect (ff, ch, op), preload (ch/op), prerender (edge, ch, op)","started watching this earlier. *so* good hearing the perspective of someone moving from native to pwa & all the back story","react isnt used on any official google projects, but a number of us like using it on side projects. library-use is diverse at g","when you say load the manifest file, what isn't working? a2hs should be in stable, webapp banner is experiment","yay! super happy to hear that :) cc","..which it could (links work), or if it applies to fully hydrated js view. main thread doesn't lock until v8 parse/executes fw","q: my apps use ssr/universal for fast ttfmp (content) then async load in fw bundle. unclear if ttfi applies to ssr render..","happy birthday, dude!","and manually tweak based on any nuanced knowledge about app structure","i treat precache as a post-build part of pipeline. input w/e built dir wp outputs","i've been directly using precache & toolbox w/webpack w/o issues. any partic pain points?","indeed! that said, i'm surprised it's taken as long as it has for this to happen. potential battery & memory savings could be huge.","curious how this impacts real_world apps vs microbenchmarks & how perf varies on engines","@_hooan it's up on my github atm. i'm working on write-ups for all the apps from my talk so folks can repro the setup/tooling more easily","totally tooling tears will be back in a few weeks. and i are wrapping up a few post bits first :)","this looks really nice. incremental dom, ce v1, es2015 modules, decent docs, acks jsx etc. great work :)","osx can but this supports customising which terminal app gets called. i needed it to launch iterm :)","yep. as chase mentioned you can customise which terminal app to use via prefs.","on the ground, how eff'd this is isn't well understood by the average dev (imo). i think there's value in more directness.","@masshaste afaik, the built-in service defaults to system terminal and can't be switched to iterm (unless you write an apple script)? :)","i guess it's a case of this being primarily a developer need vs. a feature the average user would find useful.","my reco for psk1 is to continue using that build pipeline (i would). lots more to smooth over between cli + psk2","will be happy to see inquirer used in there :)","btw, if you have deployed public apps where you noticed these changes, love to profile. we'll otherwise check demos/bustle/etc","we can take a look at impact across a few diff frameworks. jsc has done very well here. we're playing catch-up :) @ryosukeniwa","a number of v8 optimisations landed, some of which will help ember. @ryosukeniwa","i'd love to see some demo apps that cover this when v2 hits","there are a *lot* of relay + universal boilerplates floating around, but i haven't seen any real oss apps using that setup just yet","ideally, would love to see this replace the phantom backend with a similar api to what is offered today","@_hooan i've gone through about ~4-5 ssr techniques with react. for now settling on something very very simple (likely dumb), but works.","using css vars (over /deep/) made theming way nicer in . i think applying to wcs in general would work out","apply was implemented behind a flag in chrome 51, but afaik isn't supported elsewhere yet. miight be a runtime shim somewhere.","shadow piercing combinators should be deprecated/removed where implemented. i'd use css variables and mixins instead if pos.","i remember seeing what you were referring to but can't remember what it was called either :/","more tools should adopt this helpful message. it's usually true :)","whoops! can't even remember doing that. fixed! sorry.","+1. would <3 to see more cross-platform/device approaches (like material design) explored.","i'd love to see more examples of universal rendering strategies w/nested components & complex data being open-sourced","annotations are an interesting take on this. nice alternative to maintaining a critical.css or auto-scraping style","i generally use webpagetest or lighthouse vs. psi these days. that said cherry does have bad scores (i point this out in my talk)","i went fully static (generated) and just host on gh pages w/cloudflare for ssl. saved a lot on hosting bills. use gae for apps.","if not displayed on the homepage perhaps a problem could tackle (extract package.json \"main\" gzip() share filesize)","avoid ad-hoc cancellation apis being defined. cleaner to standardize. third-state isn't a bad way of achieving this.","enough apis & user-facing code would need to vend a promise & cancel() (fetch, animations, piped streams etc) you'd want to..","hah. i'm an idiot. if you approach everything with that mentality it's easier to break it down for the rest of us average ppl","not yet, but brought this up yesterday. want to see more apps using light dom for content (better for first render & pe)","<3 idb in web workers and iterable nodelist","imo app-shell makes sense for spas, but content-heavy experiences should ssr content + shell so text is delivered asap.","boo. do they have a valid web app manifest defined?","indeed. full content caching comes with a ton of security considerations for certain classes of app (chat etc)","hacker news client with (currently) real-time updates by default. trying to balance where to fit ssr content","it was one of those 'durr. why didn't i think of this in the first place?' type moments :) thankfully hack applies to other apps too","qq: app relying on real-time data (websockets) using sw for shell. would you ssr content + shell for first view then upgrade?","code for all the apps will be up in about a week. just need to clean up and go through google oss licencing.","as has said, reliable perf is a big part of pwas. hard to get w/angular 1.5. for load, try ng2/appshell/universal","i've done similar before and brought up with chrome the need for exposing native image encoder/decoder to js. want this @ryosukeniwa","that's high praise from you, sir :) hoping to keep beating the drum on framework/library perf wins and possibilities this year.","our community wins. i want that. lots of diversity in approaches, let's improve the playing field.","thanks! plan to keep pushing load perf on the ember app (lots of low hanging fruit). cant stress how much i <3 ember-cli + fastboot","i think it's important to point out these are all very different apps of varying complexity. takeaway is better perf possible today","will be going through google oss releasing in the next week. hope to get it out soon!","huge thanks to all of the ember team for answering my questions these last few weeks :)","whatever happened to web intents, paul","thanks! long way to go yet :) i talked to before about maybe doing a gymjs/workouts round up. maybe after i/o :)","\"this library should remain drop-in and easy-to-use\"","lf is def small. for me size starts to matter when looking at combined total size of libs you're using. code-splitting ftw."]