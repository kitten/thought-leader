["there's also an effort to add a plugin for for css in js which would be great","both solid tools!","oh right! this was in react-motion right?","gave a great talk about these two at react conf this year","the most important part of software development is shipping","npm has always had `npm ls`","eslint plugin? don't use react-motion with glamor(ous)?","there are way more people using npm than yarn :-(","yes! <glamorous.a css={{':hover': {color: 'red'}}}>link</glamorous.a>","honest question for anyone who knows: once npm@5 lands, what are the reasons for continuing to use yarn?","possible, but won't happen. there's an early issue about that. i don't think it's a good idea to write your styles that way","now my workflow is: start in codesandbox, download it when it's too big (it's pre-hooked up with cra), eject when it gets serious","sometimes you build awesome experiences for keyboard users and think it's a shame that not everyone will get to enjoy it.","it's like this really cool thing for styling react components using","curious why you're using the css prop passing in named styles rather than just making components yourself","browser crashed when i tried doing stuff on about://tracing i open up chrome again and everything's fine. sorry :-/","yep, happens in incognito too. i haven't tried rebooting yet...","there's a javascript framework called \"nest\" and i'm nervous to use it because i'm worried they'll have to change the name","then it could judge whether to transform code based on how willing you are to pay for increased size in exchange for better startup time.","the work i'm doing could definitely be used by prejss...","no worries. i wish that i could have the vim-mode-plus of atom with the pretty much everything else of vscode","i'm unsure whether it will. probably not that smart. it may show up with the ternjs plugin, but.... yeah :)","lol, i'm a webpack sponsor on there","i had two people email me for support with webpack. please don't email me for support on things. it makes me feel bad that i don't have time","[poll]: what should the glamorous website be?","newbies (myself included) are confused by the .dotfile and \"rc\" pattern. please just make it simple with jest.config.js","wait, is that true? doesn't appear to be...","i appreciate the empathy, but i've personally never noticed/cared much when a dependency released a patch version","i was specifically referencing not minifying and gzipping your code.","especially if you're leveraging the npm ecosystem.","a browser may be able to load modules, but it will cry if you try to load hundreds at once (which big apps will probably need).","oh, and a reminder that this _does not_ mean we're one step closer to not needing a bundler for serious/big applications.","sorry i never took the time to update much of the codebase to actually use es6","`npm install css-in-js-precompiler@beta`","it really is. snapshots are my favorite assertion for babel plugins","that lonely \":\" was supposed to be a happy \":)\"","is there an atom plugin that'll show me what js modules depend on the module i'm currently working in?","kind of ironic but i think it wouldn't really make sense to go through the course on a mobile device...","need another css-in-js library?","one of my favorite parts of being a js dev is that i can hack websites to do what i want :)","potentially. actually, the work that i'm doing could potentially be used to work for _any_ precompiling, not just css-in-js.","i'm able to statically determine the value of your dynamic css-in-js (unless you're doing really wacky things) within a single file.","i just made a pretty significant breakthrough on my css-in-js-precompiler!","my least favorite part of developing babel/eslint plugins: when you can no longer use astexplorer because you need a file system. :-(","no, this is totally different. it's a library for making styled react components.","that's great as a non-user i appreciate the gesture","we should record our talks as screencasts! or submit to react remote conf :)","i'm sure that contributions would be welcome on the prettier vscode plugin :) i think this is a great thing!","yes, my babel transform is different.","omg you're right! it's not twix in the shape of a pause, it's bacon on a twix wrapper. genious! shame it's burned.","just use statically analyzable static css-in-js objects, then yes, this could remove a runtime entirely.","i guess we'll be sticking with babel + flow afterall...","that's cool! but also a bit of a let-down because i expected it would give babel-plugin-like capabilities to ts","is there a way i can do this without actually creating css files?","then they can use the extract css plugin thing if they want it all in a single css file right?","i'm thinking that i should add an import for the generated css file and require people use the css-loader right?","or , yo, you around to chat really quick about a webpack loader i want to make? just wanna verify assumptions.","not specifically. but could definitely apply there!","for ex: i often don't need to actively try to make my components fast anymore because the \"pit of success\" that react gives me is so wide.","yeah, i just don't set up a lot of apps that need more than cra can give me","and i can spend my code review time focusing on the real problem that we're trying to solve. that's a in my book.","once i've learned it, i can apply it to all sorts of things and i save a lot of time not having to review prs for following conventions.","now i don't have to worry about it thanks to react and css-in-js.","in times past, i had a ton of conventions with my file/variable naming strategy to match up css, html, and js for a single component.","i think learning and using tools that make it so you don't even _need_ to explain or follow (and enforce) a convention is useful.","wait... i thought the point was smaller builds?","having create-react-app means i haven't needed to set up a webpack config in months. i'm forgetting how to use webpack","that's fine. enjoy your css :)","that's freaking awesome. also i freaking love react and next.js","just gotta make it so glamorous components can use the new api (if possible... )","looking at the code, it looks like the stylesheet is the same, which means it should inter-op fine with glamorous!","\"extracts css into a css file\" this makes me so excited what are you working on!?!?!?!?","feedback on the _same_ exercise: dev 1: took a few seconds, not challenging enough. dev 2: this was super hard for me teaching is hard.","note that the workshop is not yet optimized for someone working on it without the lecture instruction.","snapshot testing is truly an enabling technology. so happy to have that assertion in my toolbelt! i can do more because it exists.","i could never really figure out jscodeshift, i really prefer babel. so that's what i'll be teaching.","one each for eslint, babel, and codemods.","it'll go perfectly with the no-console thing we'll be building for the eslint side of things","i want to build it (or something like it) during the workshop :)","yup! also, there's a lib+plugin that does this already. can't remember what it's called though...","i feel like jest + cypress are the winning combo for testing any javascript application.","ha! i supposedly fixed it! apparently not?","thanks so much for helping make that thing. i'm really happy about it! we'll get you stickers for sure!","and now i can show people how amazing it is to get snapshots of not only your html/components but _also_ the css that goes with them!","i'm also super glad that i decided to add a demo of glamorous and jest-glamor-react because it forced me to update cra to jest@19","before i was like: \"hey, render this component with this redux state.\" now i get both and it feels more like an integration test","and doing a full integration test with react router is awesome. i'm like, hey, render my whole app at this route and it does it. so neat :)","i'm soooo glad that i decided to upgrade to react router v4 the night before my testing workshop no really, i am, it's awesome.","const slicedcode = slice(sourcecode, coverageinfo)","bingo! it helps you understand javascript better :)","just refactored some of my test code so i didn't need to mock something. feel so much better because the mock was really confusing.","in the testing workshop, i try to stay principles based rather than specific tools. but people are so amazed by that it's hard!","this looks great! happy to accept a pr to add that to the examples","i'm using create-react-app which has jest v18. is that v19 only? appears to not exist on my instance of jest.","it's less scary and more practical than you realize! also, learning and using javascript asts will make you better at javascript.","that's a mock? i thought mocks were technically things that asserted on themselves...","yeah, a new open source testing utility library to maintain either that, or a maintenance liability. or both.","where do diminishing returns begin with regards to unit testing code coverage in large applications?","in js, have we convoluted \"stub\" with \"mock\" ? i've pretty much never seen a \"mock\" in js actually perform assertions on itself.","the paypal one. i'm going to delete the dev mountain one.","yeah, my webpack workshop was exactly that","but i'm making up a bunch of stuff because i haven't read the code. maybe it's not that simple","take the top code sample and change it to the bottom code sample","contrived examples: \"wasn't practical enough\" real world app: \"too many files was distracting\" teaching is so hard","ah yes! he was so dapper looking!","yeah, i'm doing that now (though i think it's pointless to include react's size )","meaning that you need to have glamor's ~14kb gzipped in your application as well if you haven't added it already.","huh, i'm still uncertain of what you mean. you want to use the jsxstyle api with pseudo selectors/elements or you don't?","biggest thing: special privileges in google search results. total abuse of power on google's part.","nope, there are two approaches that told me the team is evaluating right now. definitely possible","seriously can't wait for webpack to get this feature so i don't worry about it in my applications too!","said facebook would do it.","what's your favorite talk (video link?) or book about testing that isn't just: here's how to use this tool? looking for more principles.","yeah, the library wont free you from feeling like you're writing 3 apps ;)","awesome! i'm not good at design things, and would love to get better! i appreciate the help <3","one nice thing about prettier-eslint that i hadn't considered is you can just do: prettier-eslint \"**/*.js\" and it'll honor .eslintignore :)","oh man i totally would if jsair was still a thing","the main ship-stopper is that the cypress app is an application with a gui. docker can't do guis :-(","if it's a \"known technical issue\" then i'm assuming that means it's in the process of being fixed.","the point of all-contributors is: \"recognize all contributors, not just the ones who push code\"","only thing worse than not getting accepted was to have them all accepted! but that will definitely not happen","haha, yeah, i seem to remember you tweeted something similar recently!","i think that's the whole point of css-in-js. so sounds like this talk would be handy","what's the most convincing talk/blog post about css-in-js you've seen? (other than\"the original\" by )","with that in mind. would you be more interested if the talk was framed as more of \"the why of css-in-js\" instead?","note, it wouldn't be: why i made glamorous instead of just using styled-components. it would more justify css-in-js in general.",", just fyi, i deleted your feed a while back because there are so many episodes it crashes my podcast app","i don't think it can. babylon (babel's parser) cannot parse typescript due to incompatibilities with the typescript's syntax.","you know one really cool thing about prettier? when i'm giving workshops, i'm not wasting people's time by reformatting the code as i go...","and oss maintainers need to learn to not feel guilty for not build/fixing things and instead inviting others to do it.","... then don't worry about it. move on. this is oss, the code is ours. do what makes you happy.\"","we're on the same page there i'd love to see improvement in this area. things like phantomjs are a real tragedy.","whoops i mistakenly thought you were talking about function components.","i can appreciate burnout. but i disagree that burnout is the _only_ reward. i really personally enjoy oss. that's rewarding to me.","note, i believe this works exactly the same way with styled-components as well, if that's your jam","the code is mostly there for you to copy/paste. just a matter of making the pr and iterating to the final solution :)","so maybe a rephrased point: prettier is for folks who don't care how code is formatted as long as it's readable.","2/2 reality: prettier is for folks who don't care about code format but want code to be readable.","1/2 common misconception: prettier is for folks who care about code format","once your entire codebase has been formatted, the diff should _only_ be their new code (which has been formatted).","you shouldn't have to create wrapper components... i'm a little confused. maybe an example could help?","where can i learn about open-bot? google's not helping...","some would call glamorous (or even css-in-js) premature abstraction","this is part of why you and love jsxstyle so much right?","yeah, this is a: please build this tweet","what's a javascript software bug that got a lot of bad pr?","i made a mistake of going to a grilled cheese place on national grilled cheese day (unbeknown to me). i just happened to have a craving!","i'm waiting for someone to build a css-in-js utility library that includes helpers for css grid that fallsback to flexbox","plugins, plugins, and writing codemods with :)","for me, it's mostly about my own components in my own app.","as mentioned in the post, i just use regular js modules","it should have been there to start. i developed it on paypal time for paypal.","i realize you get this with react dev tools, but it would be nice to see it in the normal elements pane :)","a babel plugin that adds the component's displayname as a data-component prop to the root el during development.","i have 11 brothers and sisters. i think that is so awesome. happy national siblings day!!! (guess which is me )","lol, i just happened to be on the show when i published the blog post.","import glamorous from 'styled-components'","that's great feedback, thank you very much! did you already try running the validate script? `npm start validate --silent`","yeah, i should make it be >=6.9.5. not sure what's up with the mongo thing. did you try running the install script anyway?","i've always said: \"publish code that runs in the environment you want to support.\"","please don't publish non-transpiled stuff. at least not the \"main\" in the package.json.","i love javascript","yeah, it's actually _three_ projects in one. the setup script runs yarn on all three, one at a time :)","yeah, native please :) unfortunately i can't force everyone to use bash mode :)","glamor + glamorous = ~14kb gzipped styled-components = ~20kb gzipped (styled-components uses glamor under the hood) also...","i'm really excited to see people actually build stuff with glamorous and contribute back to make it better. i really like it :)","i think you just reinvented css-modules no? :)","would be awesome to have a codemod that went both ways. that way people could try out the other and go back if they wanted.","you can always find a program that runs faster when written in assembly. slower (but fast enough) is a great trade-off for dev productivity.","don't forget that in react, children are just props.","i'm 99%sure you'll see a perf increase using over . though i'm unsure about this if you're using the babel plugin","i say if you like the api, go for it. let me know how it goes!","what are the chances glamor could support react native?","const react = require ('react') react.proptypes = require('prop-types') react.createclass = require ('create-react-class')","right, but now for react@<15.5 folks, you're now shipping all of those extra bytes.","i suppose they could, but then people using react@14 need to pay for the extra bytes :-( no fun","6/ because otherwise we're all going to be getting a lot of nasty warning output in our terminals during tests and browsers during dev. :-(","5/ so i'm really hoping that react@15.5.2 will remove the deprecation warnings and give people time to migrate or something...","4/ ... because first not everyone's going to do that, and second that's just not very fun to do as a library author... :-(","2/ every single library that uses proptypes (as they probably should) will need to have some sort of mechanism to get the proptypes based...","oh. my. goodness. i just realized something pretty darn frustrating about react@15.5... hoping they remove the deprecation warnings...","totally agreed. and having a separate package just makes it a little less convenient :-/","is the umd/index.min.js setup with speedy already?","wow! thanks for sharing! <3 i'm working on fixing the broken codepen in the article right now!","as for performance, it's certainly not as fast as raw css files, but it's pretty darn fast","lol, i never said it was stupid :p counter-point, you've had several months to build tooling. give us some time over here","unfortunately stylelint operates on css strings, not js objects, but thanks!","could do that with some extra tooling, but not everyone's going to use css-in-js that way i'm afraid. i want an eslint plugin.","that's not css-in-js","it's making _me_ happy :)","anyone know of a linter that can lint css-in-js? thinking of stuff like: {display: 'flxe'} would warn: 'flxe' is not a valid display prop.","yeah, i missed a bunch of people. so much happening! great job on the conference!","i was talking about developing applications, but realized how much this applies to raising children too. my kids don't sleep like yours!!!","it really bugs me when people apply their context onto my problems. your solutions may not be best when applied to my problems.","yep! that could definitely happen! if that's important for your use case, then you should probably address that!","yeah, sorry, to be more clear, i'm arguing more of a: \"let me apply good practices to my problem with my context\" attitude :)","maybe do, but you need to remember the trade-offs. some architectures take more work and are objectively \"better\" in some regards","i'm _some_ applications that may be true. but in some that's simply not true.","but at the same time... what's the first thing you do when you see a broken app? click links or refresh?","anyone know of a solution like messageformat.js that supports pluralization but isn't so big?","that was kinda weird. i'm using it in an app at paypal and not seeing that at all.","what is super about that api is the ability to not give names to things that don't need them. stop calling things wrapper/container.","if this tweet is familiar, it's because i decided i wanted to also frame this in the context of the jsxstyle api because that bit is great!","yeah, i think they're mostly useful for applications. not quite worth it for standalone libs!","yeah, cjs + dce is probably the way to go","just use commonjs (if you can)","did all the work, i just wrote a small wrapper package ;-)","i need it to style third party components i don't control and dangerouslysetinnerhtml. it's a hard requirement for me. also, rtl","yeah, almost feels cheeky, but i wanted to hat-tip to styled-components and so i asked for permission","i remember evaluating it. can't remember why i decided against it. does it support child selectors?","in a workshop about testing javascript applications, how much time (if any) would you like to spend on tooling setup?","features. code splitting is huge. but it doesn't do module hoisting like rollup does (yet!)","up next: [ ] pantsjs","yeah, it's great! i'm still 100% on the webpack train for apps though :)","big thank you to and for their work in styled-components which inspired this work!","oh, and a jsxstyle-inspired api as well for when you get tired of naming things \"wrapper\" and \"container\" ;-)","100% on webpack.","there's no better tool right now for library bundling than rollup. webpack's great, but too much overhead. rollup's super","not talking about perf. talking about debuggability. angular was not easy to track data changes.","this all seems just so much like angular though...","could you paste all the output into an issue on the repo? also, you should probably upgrade your version of npm...","i'm not asking about the tests specifically (though i appreciate the feedback), i'm asking about the general approach.","ha! you're building a testing framework :p ;-)","this actually happened twice yesterday. just deleted both of them. that's better...","it's magic when i set some variable and something happens that i cannot observe by looking at the code in front of me","i just am not hugely excited about decorators and magic happening when i set/get properties on objects.","or, you can still build for the web the way we did before all these tools...","have you tried create-react-app? or maybe pitching in to help solve the problem?","note that i'm using nps, so my scripts are in package-scripts.js","ah! phew! i can reproduce it if i pop the dev tools into its own window.","oh sweet, one of my favorite bugs: can only reproduce when devtools are _not_ open","haha! for sure! i like \"modern javascript\" or \"esnext\" too :) i consider these to refer to anything >= es6","most codemods these days use jscodeshift, but that tool is really confusing to me. i prefer babel.","it makes it so if you're using esm on a module that exposes itself as commonjs, it changes you're use to default import","oh yeah, i remember grappling with that!","is it possible to get all css selectors on the current page in devtools?","it's just every blogpost i can remember seeing doesn't have examples like that.","yeah, i can appreciate that. it's just really tough when i've struggled finding real use cases.","but i have no reducer for changing a user's business status (because that doesn't happen). thanks for the help anyway!","yeah, i know _what_ i'd update, i just don't know how to manually update state without reducers via devtools or similar.","is there a good way to manually update redux state in an app and cause a re-render? using redux-dev-tools?","i realize this is a solved problem (a la webpack loader), but i'm using it for my asts-workshop so :)","hehehe, i just wrote a 50 line babel plugin that precompiles handlebars templates i love","still not as fast as raw css, but we're getting there","seeing some other replies and i'm like: why u teach js fatigue? they so innnnnnocennnnnnnt.","i don't understand vpn tech well, but i don't want my isp spying on my computer/phone, or my wife's computer/phone. how do i prevent this?","lol, i hope that you're talking about our app! i'd love to see a speed up there!","yeah, i know that old workflow well, super annoying. npm link is a breath of fresh air :)","yeah, i love the explicitness of setstate. implicit bindings are what caused me grief with angular.","love how approaches preventing bugs: 1. could types have saved us? 2. could linting have saved us? 3. could testing have saved us?","you don't really appreciate how blazing fast is until you run thousands of tests. then your mind is blown.","haven't tried it yet, but the web payments api sounds interesting!","i mean descriptive variable names :)","just had a thought. \"how to do a good code review\" would be a great talk topic.","that sounded like something you'd read on webmd for computers","and trump doesn't look happy about it...","huh, i've not done much of that. why can't you just do normal react elements for those?","so if you choose faster dev, then work on making that perform better. and if you choose faster perf, work on making development faster.","everything is a trade-off. for example: you can choose between faster dev of new features and bug fixes or faster app performance.","my guess is noisy people responding to this survey have no idea what the current wasm dev experience is like. no context...","i'll clean it up when i get prettier for css :)","(hopefully) the last version of webpack-validator was published. 3.0.0 will throw an error if you have webpack 2 installed. stop using it!","yeah, it's great! i can use them to help me know what my codemod should do","i love that site and i'm currently using it as inspiration for some codemods.","i know right!? though, webpack 2.2.0 has a built-in validator now so please don't use it anymore!","this would allow you to safely share a single version of angular across all those apps for example.","actually i referenced the domo apps thing you built as a perfect use case","i really enjoy this stuff because it's proposing solutions that are totally impossible in javascript otherwise","i remember reading the docs and tweeting all the gems about clean code and such i was gleaning.","happy birthday! 1. is super helpful in any oss project he's involved with. 2. planning on it! 3. can't make it","react.createclass -> class?","make a new webpack bin that works and change the link in a pull request :)","this happens for every technology i get excited about. aphrodite, ava, jest, glamor, ... when i start tweeting, i'm support","may even just do /mobile/src/shared and /client/src/shared","just use the shared directory as if it were in each app's root directory.","i would create a symlink from /shared to /mobile/shared and /client/shared, then you can...","presumably you should be able to make it work, though i think styled-components removes the css- prefix","i love the api, a lot. but i don't love sending the parser to the browser and no rtl support. so i brought the api to glamor!","hah, depends on the use-case. for data-entry applications this is a must have.","thanks for building that!","also react, enzyme, enzyme-to-json, and glamor. i love you all too.","i added the functionality right into angular-formly because it was pretty useful for my use case.","hi, my name is kent, i wrote the most popular forms library for angular, and i just found out that type=reset is a thing.","what an awesome upgrade of tooling","if that's the case then: \"yes, if i had that requirement, i would find or build something to make that easier to do.\" :)","seems too high level a thing for react to concern itself with. i don't want it to become angular","here here! there are many packages that are underappreciated. this particular package is by who is deff a hero!","ah, good point! most people will care about the totally drop to the size of the stuff they use in their apps","also, the after the browser uncompresses that gzip, it has to parse all the javascript. this drops that by 20%","regexp in javascript is going to be getting a lot of love for es2018 :)","i'm working on a similar abstraction that uses javascript objects. totally dynamic and no parser needed.","i like it a lot, but i want to drop the parser (possible with a babel plugin coming soon), but...","this is basically how javascript implementers (like browsers/node/etc) know whether they comply to the specification.","there are over 100,000 lines of code for tests in test262 for async/generator tests. wow.","no, this is for members. everyone at the meeting now can have one :)","yeah. from object to components, i use map","oh, if i could, i would totally use: babel-plugin-react-intl it's truly amazing","i knew you'd be there for me eric! you're the best! any idea why that might be happening? pretty weird...","sure, but when you're using an abstraction to create components, you don't have all style objects at once","couldn't agree more. there are some things in life worth spending on. good internet tech is one.","... they were applied in the opposite way i wanted because of the way they appear in the generated style sheet","thanks. so this will result in the same css properties applied as my example? and does fela support child selectors?","[poll]: do you need your css solution of choice to support theming for your work application(s)?","just need 2 more babel plugin ideas (one simple, one advanced) and 3 codemod ideas. (two simple, one advanced). any more ideas welcome :)","often, in a spa, you'd compile that stuff in the browser, on the user's machine. but doing it at build-time is user experience++","for example, i just created a simple i18n babel plugin for my workshop which would allow you to pre-compile i18n strings per language.","never ceases to amaze me how much a custom plugin can improve dev exp. without sacrificing user exp. (and often improve it!)","ah, yeah mine is more tricky because it requires running linux/mac-only gui application","ok, getting on a plane in a minute. what css-in-js libraries should i install to play around with on my flight?","yeah, if that doesn't work, i don't know what to say... babel plugin?","you could totally do that with the api i'm developing.","should i write the blog post introducing my new css-in-js thing _before_ i work on open sourcing it so people tell me why it's bad first?","docker and bash on windows don't work. the problem is that the application (required for development) doesn't support windows.","unfortunately not because the incompatibility is due to a required application which doesn't support windows yet.","i have no idea what you mean by \"wsl\", \"x server\", or \"insider's build\"","it's an application that you run locally during development and a cli that runs headless chrome during ci","i don't think so. it requires an application...","the problem is the tool i'm using (the amazing ) doesn't support windows yet (who knew?! )","also, fun fact, that code was formatted by prettier","it'd be super cool to have something similar to babel-preset-env for eslint!","how well does it work when you're using babel heavily?","have you written/used a custom plugin that was useful for your codebase (but maybe not generally useful)? if so, what did it do?","the problem with showing how to write practical examples of eslint/babel plugins is once i write it, nobody else needs to anymore","have you written/used a custom rule that was useful for your codebase (but maybe not generally useful)? if so, what did it do?","also, what happens when you say: sorry, i can't write your app for you. \"but i paid!!!\"","[poll] would you be willing to pay for an \"immediate support membership\" for any of the oss you're using?","1s rebuild!? huh, that's weird. i've never been able to refresh my browser fast enough to get a stale rebuild.","huh, rebuilds have always been super fast for me in watch mode. initial builds though... that could use a speed up!","i love babel-plugin-{module-resolver,lodash, env,transform-react-remove-prop-types,react-require,emojification} & stage-2 plugins","y'all should say: \"thanks for your patience. have you paid your immediate support membership dues yet?\"","i really do need to try jss. my impression is that the amount of extensibility is confusing and fragments things.","yep, all major browsers support it by default now i believe","then keep using styled-components","builds on the work of styled-components and jsx-style for the api. uses glamor under the hood. it's ~140 loc + list of elements/attributes","haha, so i'm making a styled-components that works with js objects rather than template literals. not gonna lie, it's pretty sweet :)","i'm aware of that. my assertion is that you can't do as advanced transformations with raw eslint. need jscodeshift or babel.","with cra you can already use *.test.js or __tests__. both work :) and both can be colocated.","i'm toying with the idea of using babel inside the fixer function","nice thing about doing it with eslint is when you're done you have a nice rule to prevent people using deprecated apis :)","when do you use a codemod and when do you use a fixer with eslint? my guess is eslint's fixer is less capable than babel/jscodeshift...","yeah, i like the idea of it being \"webpack optimized\" but not \"webpack specific\" :)","jsx-styled is your jam right? i've been meaning to try that too","right now slice-js parses the code to an ast 5 times to do its job!","i'm working on slice-js again () and i just added prettier-eslint integration to the slice. looks lovely","huh, that's funny, i'm the complete opposite. i like to name everything. i need less code comments that way :)","yeah, i'm actually surprised at how neat it is to create components with: styled.button` /* my button styles */ `","it me: grunt -> gulp -> webpack for the last 2.5 years","it me: css -> stylus -> csstyle (with stylus and less) -> css modules -> aphrodite -> glamor -> styled-components"]