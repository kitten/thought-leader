["even components that don't add dom have internal instances that are managed by react.","it's the same cost as any other component. really depends on a number of factors.","the real solution isn't to ship less code; it's to split code into chunks and load it lazily.","ok then your code looks right to me. setstate in cwrp; side-effects in cdu","setstate callbacks and componentdidupdate have similar semantics. but not exactly. how are they different?","it's a callback. like an actual callback. similar semantics to `componentdidupdate`.","i remember you showing this to me at react wednesday. looks really nice, excited to hear how it works out","still used redux for other stuff, just not data fetching","counterexamples: enzyme, redux, react router","haha i'd do that + rage redesign some of the lifecycle methods :d","is there a way to customize how webpack inserts/removes script tags into the page?","might be worth suggesting in lieu of createclass, for folks who can't/don't use babel.","that way product devs aren't spammed but infra team can still address","i'd be more interested in a survey of what problems people are trying solve, rather than what api they want","a more selfish reason is that by splitting prop-types into a separate repo, the react issue tracker becomes easier to manage :d","aside from code size (which, you're right, is minimal in prod) main reason is so other libraries besides react can depend on it.","remember three months ago when everyone's opinion on the filibuster was the total opposite?","have you seen 's react conf talk?","talk will focus on react itself, so unlikely, but thanks for the suggestion!","i'll be speaking about react at in may. anything in particular you'd like me to cover?","in the existing class api? unlikely. will instead replace classes with a stateful functional component api","yes but setstate isn't the only issue; will need to rethink entire component api.","not initially at least. maybe when we go async-by-default? more likely we'll release a new functional component api","partly. even with functional setstate api, there are staleness issues. no solution yet, still working on it.","facebook has tens of thousands of components we have to upgrade whenever we break an api so gotta take it seriously","the other changes have been pretty friendly to codemodding. a context api change, not so much.","oh i meant the name of the function that replaces react.createclass, not the transform itself :d","forgot an option: createreactclass","needs to play nicely with transform-react-display-name","needs to play nicely with transform-react-display-name","writing a codemod to convert react.createclass callers. imports from react-create-class instead. what should the function be called?","yes, haven't finalized an api yet","the tick that happens each second is really (intentionally) expensive. without spreading the work across frames, the animation locks up.","it's not safe to use it for updates, which is why redux manages its own subscriptions","the redux use case (a glorified global) is the only one we really support.","wait but if you're hank, who builds the robot machine gun?","would you mind if i or one of the other react folks review it before you publish? :d","componentdidupdate","to be fair i've got some september/october tweets that are real stinkers","will likely replace them with new helpers that use streams only for side-effects (so, during componentdidupdate)","biggest issue is that the observable helpers aren't fiber-ready. api will have to change.","also, i know way more about react than i did when i threw the initial api together. some rethinking is due.","thanks again to and for holding down the fort while i'm busy with react stuff!","both dan and i are on the react team and we have no intention of leaving redux users in the dust","i'm only commenting on over-redux-ification of everything. flux/redux have their uses. and we will work to solve for fiber.","depends how you use it. we'll have to come up with some solution. not redux specific, applies to any global state.","at fb we use setstate everywhere! hardly a small app","i think so. i'm one of the creators of redux, along with . we're also on the react team. we say use setstate first :)","fiber has a strategy for pausing, splitting, rebasing, aborting updates that doesn't work if you deviate from component state","can't take full advantage of react prioritization model if state/actions are all global.","..which isn't to say the setstate api couldn't be nicer. but it's idiomatic react and you shouldn't feel bad or un-advanced for using it.","these small, focused prs are a great first step for learning the codebase. if you've ever thought about contributing, give it a shot!","oh wait are you at react conf? i just assumed based on your wording","i have my \"fake news\" tweet drafted for when this inevitably disappoints.","you're describing a limitation of react, which we're working to fix. not an inherent problem with async","the point of \"async render\" is to un-freeze your apps, by working on more than one thing at a time","applies to so much. what part of life isn't about trade-offs? my patience for purists and ideologues dwindles","what about react europe?","don't sweat it too much. we'll figure out a good upgrade path for everyone. we definitely don't want to break your apps.","theoretical answer: no guarantee this.state won't be stale practical answer: so fiber doesn't break your app","idk if sessions communicated inappropriately with russia, but his answer to franken reads to me as intentionally misleading, even in context","the best thing about what happened at the oscars is that for a brief moment the entire internet freaked out about something other than trump","remember how your english teacher taught you that \"bad\" and \"good\" are lazy adjectives, that \"very\" is a lazy adverb? \"problematic\"","\"hello, programmer here. i've achieved god-like status in my career but i occasionally make the mistakes of mere mortals, just like you!\"","that \"hello, me here\" thread devolved into unadulterated humblebragging even faster than i expected","ah so my usual approach! problem is i only ever attract girls that way :d","i can't bring myself to have an opinion on .mjs other than my usual \"why do filenames have extensions, anyway?\"","another app! i have app fatigue. looks interesting tho","if you're feeling adventurous, import reactdom from 'react-dom/fiber'","alright y'all i did a google search before i posted and got conflicting information","i don't believe there is a non-ideological way to approach law. so aim for diversity of approaches.","new api likely will be stateful functional components. danger is releasing a half-assed version that isn't forward compatible.","we will have to replace classes with a new api for fiber, anyway. so it's on our list. we're not rushing it.","can i ask why you're convinced this will happen? i suspect it will too but i fear it's just wishful thinking","lol and i forgot the ... code tweeting is hard :d","just learn react. in the future fiber will get new features, but for now the difference is only in implementation.","i think solution will be to make component state more redux-y, rather than vice versa","i've experimented a bit and where i usually end up is: this is what components are for","aren't those called \"components\"?","\"virtual dom\" was used to explain what jsx was all about. nobody should need to know about fibers.","i don't think anyone will care, except contributors to react","i am often rude to my echo (\"stop the timer\" -> \"shut up!\") bc i enjoy it and robots don't have feelings omg this is how westworld happens","psssh the best developers i know make apps with zero errors","and yeah, we also do stuff like print the component stack so you know where it originated.","...bubble the error up the component tree and allow you to catch/handle them. like a try-catch block.","no what we do is ensure that user errors never leave react in an inconsistent state, like they do today, and...","the way react fiber handles errors is pretty neat. do any other view libraries/frameworks have a special way of handling with errors?","a component with 100 children and a parent with 1 both represent 1 unit","ah yes, that'll show them money-grubbers at apple!","don't fret about this too much. the real solution will be new apis in react that guard against accidental \"mistakes\"","technically no but since there's no better solution for now you can keep doing it","the original router was copied from ember, right? seems only fair that you give them one in return :d","yes, but for each use case we'll provide an alternative, better way to do it","we're going to fix this problem in a future release by replacing classes with a functional api :)","people do it without realizing it, e.g. by dispatching a flux/redux action, which triggers updates elsewhere","for the purposes of this discussion, setstate on self is not considered a side-effect. setstate on another component is","aside from perf implications in dev mode, not all prop functions have side-effects","you can use them to set instance variables. just shouldn't mutate anything outside the component itself.","re: componentwillreceiveprops, performing side-effects in there isn't much better than doing them in the render method. avoid.","you can call this.setstate in cwrp, but you shouldn't trigger updates on other components.","you can set up state for the component itself, not other components though","cwm is not safe (we warn if you call setstate, for example). cwu isthat's where you clean up subscriptions! cdu is safe, too.","cwm is not safe (we warn if you call setstate, for example). cwu isthat's where you clean up subscriptions! cdu is safe, too.","it's not, that's actually the only thing that you *should* do in cwrp. just don't call it on another component.","if you think about it, putting effects in `componentwillreceiveprops` isn't much better than putting it in `render`","i'm mostly curious if this is something people even think about when writing their components","all are correct, except cwrp. you can `setstate` (on the component itself, not a parent/sibling) but should avoid other effects","let's say anything besides this.setstate (on the component itself)","that way if the api changes you only have to migrate the until, not every component that uses it","use a high-level abstraction/util that uses context under the hood. like redux's connect() does.","when you have 30,000 components in production you don't change apis lightly :d","fiber will keep the same api, initially. we want it to be as easy as possible for people to migrate.","looks like a redux middleware :d","yep! with a separate <provider> for each thing on context. future version might not support multiple contexts per component.","by \"future self\" i also/especially mean the poor junior dev who will inherit your beautiful mess","that's what react does too. hard to make it both performant and \"correct\" though, given current api. we err on the perf side.","the keys of the context object establish an indirect link between components. would be better if static.","y'all if you're using context in react, do your future self a favor and use it via an abstraction (hoc). api will almost certainly change.","tell me about it :d current version has many flaws so i'm excited to change that. not so excited to migrate facebook's codebase!","though the context api will likely change, too","yeah not sure what we'll do about that state arg, since react currently uses it for context.","though maybe for preact that's a plus, not a minus :)","this is really cool! heads up, though: react will have similar-but-different in the (near?) future, so might be compat issues","hocs are immutable. the original component isn't changed and can continue to be used.","i don't think the question is about functional vs class components","if i remember the books correctly, they were filled with that sort of humor","a parent and child are re-rendered. whose componentdidupdate is called first?","if react always waited to check if there were multiple calls then it would ever be sync","in other words, the only safe use of cwrp is to call `this.setstate`. it's not the best api, unfortunately.","the part that's confusing is that setstate on a parent (or other component) inside cwrp is *not* safe.","the gist of it is: nested updates create many problems. we're going to see if we can get away with removing them completely in react fiber.","that's a problem that react fiber aims to solve, but if that were the case in react-of-today, then no updates would ever be sync","that's about the gist of it, yeah! there are other scenarios where this happens, too","not quite, but react fiber (future react) does prioritize different types of updates, so i like how you think :)","all updates are queued. question is, why does react sometimes flush the queue immediately and other times wait until later?","the first part is correct, but there are other scenarios where react does the same thing","if react waited to see if setstate were called multiple times then setstate would never be sync.","the escape hatch will likely be something like `reactdom.unstable_syncupdates(() => { this.setstate(state) })`","if react waited to see if setstate were called multiple times then setstate would never be sync.","react fiber does this, but that's not why react-of-today defers some updates.","important because in a future version of react, *all* updates will be async by default. (we'll have an escape hatch to ease migration.)","react fiber does do some clever stuff with scheduling animations, but the original question applies to current react, too.","..only that it is sometimes, and your code should not make assumptions either way.","react trivia challenge: sometimes setstate isn't applied synchronously, but deferred until later as part of a batch. do you know why?","there a bunch of optimizations though. hard to say what the actual big o is.","updates on the component itself are inserted in order of priority. worst case insertion is o(n), common case is o(1)","so each component has a queue of updates, but the entire tree is also a queue. to find the first component to work on it's a bfs","omg i was using --save-dev instead of --save. works now!","ounit. or any unit testing library.","js has its problems but npm install pkg -> require('pkg') sure is nice.","tried using reason again. gave up because i couldn't figure out how to install a library, again.","it was helpful for figuring out starvation. like a \"todo app\" of scheduling :d","if we ever introduce an explicit api for low pri updates, perhaps not","true, though i can still forsee bristling at higher-order functions being a central part of the api.","love it! works great in reason because you can assume familiarity with currying/hof. wonder what js users will think.","i skeptical anyone will care as long as it's easier to type and their code still works (for now).","few people know about this api, unfortunately. example of pit-of-success failure. need stateful functional component api!","it's clear in react-of-today. in react-of-the-future, it will be misleading.","what's the use case? to avoid having to wrap parts of subtree in another component and use scu?","i wish `shouldcomponentupdate` were called something like `areinputsequal`. i think that's a better description of its contract.","i had no idea what i was doing when i made my first ios app (a puzzle game). the code sucked, but it worked and i had fun. and i learned.","i started hacking shit together with frameworks way before i became a decent programmer, and i'm glad i did. there's no one way to learn.","type information from flow or typescript could help with hidden class stuff","we need eslint-plugin-optimization","because i thought redux was better in every way :d","or if you use unstable_batchedupdates. but again, best to write your code as if it's always async.","right now it's only async if it's called as the result of another update (e.g. componentdidmount/update).","it's not always async but you should write your code as if it is because one day it will be async by default.","a relic of some old linting rule? can't remember tbh.","cool! don't know much about dev tools so can't say. dan?","react devs engaging in arguments about separation of concerns in 2016 is like trump continuing to litigate the election: we already won.","they're components, just the loading is different. did you read the github thread? api could enable streaming rendering","saw manchester by the sea last night. woke up, still devastated.","a \"loading boundary\" would let you show a spinner (or whatever) until all promise components, even deep in the tree, resolve","each component has a queue of updates sorted by priority then insertion.","til how a pending update in react is like a dead cat in a box.","both, though haven't decided on the exact api yet","every change you make to your code is a prototype for the next, less shitty version of it.","eh, facebook doesn't support oss purely for the warm and fuzzies.","when react finally clicked for me i felt i'd won a victory.","yeah i see, react native has done a good job with that but it's trickier with core react. thanks for the feedback.","or flashback to last week when i got excited by a tinder match, but horrified once they messaged me (*force quits and deletes app*)","\"quis custodiet ipsos custodes?\" is latin for \"what if there's a bug in your error handling code?\"","i had a -style nightmare last night in which i was working on react fiber in a world where flow didn't exist","i read this as \"babel stage features.\" the heart is dangerous indeed.","i just spent, like, 2 hours debugging three lines of code. most of it just staring. finally figured it out.","iirc the constitution allows for this possibility on the first tuesday after the first monday in november.","darn i wish i could appreciate its brilliance","remembering just now that ivanka is basically a liberal democrat. maybe she'll have influence?","thought i just had: i really hope paul ryan remains speaker of the house. the alternative is terrifying.","almost as bad as trump winning are all the takes about why trump won by people who said it would never happen. jk i will read them all.","guy on cbs: \"people who are worried about [trump] need to remember that we have strong institutions ... he can't do anything he wants\" lol!","silver lining: he will disappoint them all.","i was prepared for this, but i wasn't prepared for this, ya know? like i knew it might happen but i have no idea what happens next.","remember how at 8pm et they didn't call georgia immediately and folks thought it was good news for clinton? i miss 8pm et.","the polls were off by 3% in 2012 but nobody remembers because the error favored the eventual winner.","whatever happens, don't gloat (i'm talking to you, andrew). 2/5 of the country will despair at tonight's results. tough times ahead.","it's also what happens when you have nested updates. if it were totally sync you'd get cascading renders.","so far, working on react is just as much fun as i thought it would be","sure, i'll admit to having no empathy for anyone who thinks this._reactinternalinstance.pendingworkpriority = 1 is a good idea :)","there may be higher-level apis, yeah","sorry, hard to offer specific advice, but traversing children usually isn't idiomatic react. might work, but not future-proof.","yes. there may be some new apis but nothing that directly exposes prioritization.","imagine a future react that re-renders on every frame, like a video game.","but you could provide those props with context instead. instance.render is only meant to be called by react.","why not just render the component? <component {...this.props} />","react fiber is pretty much a job queue :d","i went to the bathroom. what happened??","@dmaczor not a react native expert but afaik css-layout supports min-height already. selectors like last-child are unlikely.","sure, i mean whatever use case subscriptions solve, there's no first-class way to do it","a first class way to do subscriptions would solve a large class of lifecycle-related problems","though really i should be counting down to november 9, not 8. 15","i like abstractions that are forgiving of localized messiness. like react components :)","sounds like facebook, too!","it's another thing for a new dev to figure out. whereas the one-liner it replaces is clear.","i've believed this for a while, but especially since joining facebook","apple, i only want landscape mode when watching videos. it takes 2-3 frustrating swipes + a tap. put a button on the video ui. , andrew","as opposed to it being an unfortunate thing that sometimes happens but oh well better luck next time","and one day it will happen to democrats, too, if we're not careful (signs of it already)","in a multi-party system, or any pluralistic society, compromise is essential or this shit will happen","can't even get routine business done like budgets because house wont pass anything unless majority of *republicans* approve","\"nothing more\" than... a lot. it would require a herculean effort to change how presidential votes are apportioned","iow if enough states (>270 votes) collude they can impose whatever system they want without technically abolishing ec","maybe states could collude to obsolete ec by pooling their votes together and apportioning based on ranked preference?","for local/state races this is fantastic but i worry about what happens for the presidential race if the rules are uneven","is it serializable? would need a registry of components, no? and assumes no setstate update functions, or callbacks","i think the ideal version of this debugger may be just the normal react dev tools with a \"unit of work\" slider and a fiber pane","it'd be great to collect that info and put it in the react-fiber-architecture repo (or a similar centralized place)","conceptually yes, they are the same. react won't expose fibers to the user, though. merely an implementation detail.","easy to laugh now, but do you remember which other anti-trade, septuagenarian politician from new york claimed the 2016 election was rigged?","so there's a huge benefit to learning reason/ocaml, elm, haskell, purescript even if you're not (yet) able to use them in your actual work","can you update my bio to say that i'm working at facebook, please?","the whole conservative media ecosystem is terrifying. the left is lucky they don't have the same problem.","many members of the cnn focus group *still* can't decide which candidate they prefer. and we revere these people... why?","if she's bad, she's bad within the normal parameters. she's a centrist technocrat. a more hawkish obama.","and yet, big overlap between who blame democrats for \"crying wolf\" & folks who think clinton is literally the devil incarnate","if an election like this one happens every four years, sooner or later, a trump will win.","so depending on your point of view, this either means react saves lives, or it causes unemployment.","reconciliation is react's diffing algorithm. it's also how obamacare got past a filibuster.","it's a programming language for uis","i'd use react-fuck-ken-wheeler no matter what it did","afaik angular doesn't use any form of concurrent rendering. could you explain what you mean?","i'm scared to google it","e.g. instead of hunting for our next meal, we write incantations to make colors appear on a magic rectangle","i'm for trying, i just think a protest vote in a presidential election does less than nothing. get members into congress first!","honestly doubt most people even know what the capitol building is, what goes on in there, or how to spell it.","i wouldn't expect total coverage, but it could check the input to a query builder method, say","i also remember thinking a more descriptive name would be \"call-later\" but i confess that was a stupid idea. hardly rolls off the tongue.","never liked the word \"callback.\" when i first learned js, i thought it was some privileged concept. nope, just a function.","think about how react motion uses it","on balance i'm still pro jsx but this is the strongest argument against imo","how do we communicate to folks that react elements are essentially a lazy function call? <func>{cb}</func> is like func(cb)","reduce seems more appropriate than foreach here","i didn't show you the whole program! a burger for lunch today will also make me happy.","if i never heard the term \"virtual dom\" again, i'd be happy","behind on this convo but how is this about redux? problem is scu broken. even w/o redux wouldn't be safe to assume no one uses","my gut tells me he'll lose unless there's some exogenous event that disrupts the race. which could totally happen.","imagine if the voters who gave us current candidates also got to vote on appropriations. or... the debt ceiling.","haha, there are so many anti-patterns in react that kinda go out the window when you work with forms :d","omg the barbecue place at facebook has sweet tea. thank you jesus.","but until we fix the enhancer design, middleware is too tied to redux's pecularities","i want to enable \"local redux\" with full devtools & middleware & enhancer support, zero caveats","the few other applications i have in mind aren't possible until the init problem is solved","in their current form, there are some nasty caveats that we've never been happy with.","but it will be a minor api update. don't feel like you need to wait for that.","can't remember if we ever documented it. it's enhancer = createstore => newcreatestore.","hmm, maybe. i think adv of web dev is you're constantly thrown off guard by some new framework or paradigm. keeps you nimble.","jealous! i tinkered with html stuff in middle school but never touched a real programming lang until i was out of high school","that's true but i'm thinking of people who first coded when they were, like, 10. that's a lot of practice!","few things stir my imposter syndrome as much as when another dev tells me they've been coding since they were a child","you probably could! the super tiny compiler and itsy bitsy data structures are both fantastic","also remember that the optional second parameter to setstate is a callback that fires once the update is rendered","the reason is state updates are not necessarily synchronous. multiple updates may be batched before being applied.","@ilyakayli i devoured it, yeah","would you believe that i paid 30 bucks for wifi mostly so i could follow on twitter because that's what happened","@ilyakayli mmm yeah. i know what that's like. happens often and i have to power through, although with bb i was hooked from the first frame.","@ilyakayli honestly can't remember the last time i watched a tv commercial (except during live events)","e.g. the dom is a retained mode api, but if you update it imperatively, that's immediate relative to using something like react... ?","technically children mount first but your broader point is right","idk seems pretty straightforward to build a static route config on top of v4. try doing the reverse with v3.","not a bad description","confession: i'm a regular listener of many podcasts, but none of them are about dev/coding/engineering. not sure why.","thoughts after my first week at facebook: omfg. wtf. stfu. srsly. lol. this place is ridiculous and surprising and awesome.","externalizing is trickier, but 99% of apps don't need *entire* state tree, just global bits","recompose can do local redux (withreducer) but doesn't do middleware bc of init action","though i still don't quite see how it gets you closer to a better api for ast transformation","my initial, uninformed reaction is that jsx is good for data => tree, doesn't help much with tree => tree","can you explain it to me? i think i understand the goal but don't get how jsx gets you closer to solving","i suppose a top-level <history /> component will rarely be re-rendered","maybe ? smart team there working with react and (i think) react native","oh gosh i hope nobody was inspired by redux-rx. i forgot that even existed :/","it's my last day at opengov it's my 24th birthday i start at facebook on tuesday (...trump might be president ) well, let's do this!","just something to keep in mind. might not be what's happening in your situation.","i've accepted an offer from facebook! couldn't be happier. is this real life?","i try not to let this happen anymore because i also neglect to eat.","some people are intimidated by relay's api, but in my experience it gives you an incredible amount of features for just a bit more typing.","i've been using relay for about a year, super excited about relay 2. the static optimization stuff looks killer.","in more concrete terms, i believe this api will be broken if/when fiber is released cc:","i mean quite literally. i'm looking at the source and it looks like it just calls the prop inside componentwillreceiveprops.","which breaks the biggest (trigger warning) anti-pattern (sorry) of react: no side-effects in the render method.","can something be called declarative just because it's expressed with jsx? idk.","hmmmm. using react elements to represent imperative ops does not gibe with my mental model of react. (but i'll keep an open mind.)","seems like putting side-effects in componentwillreceive props will soon be especially tricky, too","\\_()_/ my platform is only so large. also i could try harder.","yes! that's a great and underrated code pattern.","yes! that's a great and underrated code pattern.","in general, i advise people to always start with component state. only move to redux when it becomes necessary.","you could use reducers and actions but keep it local to a component.","what i object to is the globalness of putting form state in redux, when forms are almost always local.","so in your view, only valid use of redux is at the top-most component?","what if had said \"this in javascript is confusing and react's api relies too much on it\"?","for now i'll just say, try to imagine a relay api with callbacks instead of hocs.","i don't think it's about power. i wouldn't want to use a render callback for all my relay components","i'm using your plugin for hmr on the backend, which is running webpack-hot-middleware for the frontend. works great!","it's going to take lots of deprogramming for me to stop saying \"you guys\" to refer to a group, but i'm up for it. what do y'all say instead?","one way es6 class components are less confusing, defaultprops is just a static property","e.g. i've definitely had a reaction to certain (but not all) breads before, never considered it might be a wheat allergy.","i told my primary physician i had developed some allergies (soy, nuts) and he sent me to get a lab test.","i appreciate it, thanks!","honestly, most tweets are humblebrags. it's a humblebrag platform.","looking at source, you're passing the arg directly to shouldcomponentupdate, even though it could be a function","cool! but that shouldcomponentupdate check won't work for setstate(state => newstate)","promises bubble errors, too. to me, biggest win is your async code looks like your sync code. try/catch instead of then/catch.","so if you're doing lots of functional-style programming in js, may want to consider immutablejs or mori","so for you this is a spec issue, not a tooling issue?","parser may be the same, but they can't run without webpack (or similar)","what extension would you use for a file without jsx but with flow and css modules?","psa: i have absolutely nothing to do with react fiber. all i did was jot down some notes. all credit to , , and team.","what happened to core-notes? :)","same, i think. i like looking at old code and seeing how much progress i've made since.","on the one hand, your old code looks like shit. otoh, if it looked great, that would mean you're weren't improving. yay for old shitty code!","need a confidence boost? look at some code you wrote a year ago. maybe even a month ago. you're so much smarter than you used to be.","yeah it's dev preference. ran out of characters so i had to phrase it declaratively.","function-as-child and hocs solve similar problems. use former for parent concerns (layout, routing), latter for own concerns (redux, relay).","it sucks because until i figure it out, any react component that uses an hoc is a black hole of \"anys\"","i'm sick and tired of the all the best features going to the top 1% of browsers","damn gotta figure out how to write a codemod for myself","oops meant inappropriate","i think it's reasonable too, i just think it's appropriate for the government to compel them to release it","also easy to see the slippery slope argument. where does it end? congressmen? city council members? all public employees?","happening on the left, too","yes, but you wouldn't need the wrapping div. can return an array directly.","bc if you call the function eagerly react can't yield to event loop if it needs to avoid dropping frames","so in fact, with fiber, using a normal function could result in worse render perf than using a component","why not go all the way and turn `renderuser` into a functional component?","i believe it's where you render to json, take a snapshot, then see if anything changed.","like react? redux? graphql and relay? come work at opengov! please reply if interested.","i watched that episode a few days ago and had the opposite reaction.","does \"dramatic\" mean api changes? because \"amazing\" is what i meant.","huh. maybe he means \"people don't know how to write js, only jquery/babel\"?","see thats why im a bit averse to it. feels like using !important in css.","the analogy would make more sense if context in js were based on the callstack","is it just context? react context is a bit weird. using `this` makes it seem less special than it actually is.","is there an equivalent for facebook's dataloader for ruby?","interesting! i take the opposite approach and never unfollow anyone, especially people whose opinions i disagree with.","sorry for recent politics tweets. our regular program of js asshattery continues next.","mouthpieces are disgusting objects that should be kept in your mouth or in a designated case, always.","yeah i hear ya. otoh, i abused the heck out of componentdidupdate when i first started with react. didn't know any better.","then the person is forced to at least consider if there's a better alternative.","ah! i was trying and failing to follow along with the new reconciler infra progress. this helps a lot! appreciated","\"normalizing data from multiple endpoints\" is an apt description of a graphql server, too.","figured out a way to make recompose work with rxjs 4/5, xstream, most, kefir, bacon, <insert-your-favorite-stream-library>.","yeah, but rxjs 5 conforms to it, and core-js includes a polyfill. closest thing to a standard we have.","that project is no longer maintained, but the exact same api is available via rx-recompose","i think part of becoming a programmer is deciding what is important to you, and what is not. can't spend time on everything. for me...","basic problem is i want to use plain es observables, but i don't want rxjs/etc users to have to do observable.from every time.","i use redux for state management, rx for certain types of async flow. they're not necessarily competing approaches.","i stopped using those projects, but the goal imo was to treat the router as a controlled component","doesn't look like it accounts for function components","thank you for looking after redux-actions! its a handy package but i havent been able to give much attention to it lately.","show them the source of one. they're just container components.","i usually make the comparison to lodash. more api you must be familiar with, but trade off can be worth it.","maybe now candidates will stop redux-splaining to me in interviews (though i do kind of enjoy that).","but you're applying an hoc to an hoc like hoc1(hoc2), which makes no sense. should be hoc1(hoc2(component))","yeah i think i will. started to write one for recompose but it's better for react itself","are there plans to document higher-order components in the react docs?","like jsdoc but not terrible? :d","awesome, was so excited to see a glimpse of that at react europe","seems like first step to something like \"squashing\" in react is a more functional api without public instances","are they any such optimizations on the horizon? clearly this stuff would be better handled by react","that sounds super cool! not even sure how to start approaching that tbh :)","which is the best name for a higher-order component `x` that does `x(props$ => childprops$)`?","though on the plus side, restricting refs to dom would also remove confusion about null refs for function components","ref forwarding could be cool, but does facebook often use refs on non-dom elements? i've never had this problem.","i expect i'll be making up for sleep lost at react europe for at least a week. totally worth it.","this is the third time it's happened to me this week","note to self: stop using the words \"minimal,\" \"easy,\" \"simple,\" \"elegant,\" etc. in oss project descriptions. that's for others to decide.","confession: i have never used them in a real app.","where can i learn about reason's js interop?","you can use redux-like patterns locally, without writing to global store","it's great if you can manage it, but it's easy for things to get messy, especially on a larger team of devs.","nowadays, i always start with local state. only move to redux once i need to share it across multiple parts of app.","more local state. use redux only for \"global,\" app-level state. (bonus: relay for data-fetching.)","in my experience, opposite is true. redux is great for small to medium apps. hard to scale to large, nested uis.","i struggle to be objective because none of the ones elsewhere i've seen appeal to me personally","yeah before mucking with the api i would prefer to experiment with higher-level, alternative apis","i guess i don't care that much, i just hate api creep.","what happened to \"your stuff is your stuff\"?","but these are huge, complex, recursive data structures. >10mb in some cases. not every app will have this problem :d","depends on the app. we use relay/graphql for most data. we have more complex structures that we might use datascript for.","we have large, complex data structures. redux (or elm arch) only gets you so far. at certain point, you're reinventing a db.","we were a bit overzealous moving stuff to redux last summer and we've since moved stuff back to component state.","depends on the app. we have really large, complex data structures. at a certain point you're reinventing a database.","one downside of redux/flux is it encourages you to treat app state the same as data, which can lead to problems in larger, data-driven apps.","for the sake of discussion, couldn't proptype validation be moved elsewhere? component + props is all that's needed, right?","forgot about that :d would that alone be worth keeping reactcurrentowner?","yeah i was just joking about the rename. don't want to turn this into another \"component state is evil\" thing :d","which afaik is the only reason jsx compiles to react.createelement instead of directly to an object","with a callback ref, which is better because react doesn't have to track the current owner","admittedly it's not a huge win relative to css modules, but collocation sure is nice. can also do fancy stuff at runtime.","it's less weird than it seems at first. instead of putting css in `style`, put it in props","diff would have been nicer if i had remembered to rename __ava__ to __tests__ after migrating them all over :d","awesome talk today! we've been running (at opengov) a node graphql server that wraps our rest apis since oct. it's been great.","do those last two exist in js land? only example im aware of is s layout prototype and es discuss thread","could happen! i will never stop predicting her return"]