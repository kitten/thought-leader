["typescript. because it's being actively developed and is larger in adoption.","kiitos! quick feedback: what do you think we should focus on developing when using those funds? :)","pnpm is a separate package installer than npm. pnpm is deterministic (with shinkwrap).","i'm talking about pnpm.","cool that you're building this!","what is there to learn once you know rxjs? :)","i'll put zero trust in google cloud. they're building a paas with lock-in features everywhere.","the industry will end up trusting only open source and self-hostable technologies, and that's what i'll advocate too.","they just did some kind of cron magic and gave me a storage bucket with those backups. our client was happy.","typescript typings would help to make the api more clear. ps: thanks for gun!","i would use gunjs, even if it's less developed than firebase, simply because if things go wrong you can still look inside and do whatever.","the bucket that firebase automatically creates in google cloud storage cannot be configured to use a different region than us.","firebase being closed source and google refusing to store its data in eu makes it unsuitable for customer projects in eu. *avoid firebase*","google cloud: i decided to simply export all my data i put in a nosql db in google app engine. lol haha yeah right. the lock-in is strong.","will release some code in the following days.","for state management in , we found a way of doing something between collections and onionify with simple api and good performance.","i'll be surprised if anyone thinks that's an inflammatory comment. :d ps: react native is a game changer, though.","too much code to attempt to put it in jsbin, but i'll try to push something if i can't solve this soon","making it unnecessary building an alternative p2p social network.","well, if you're comfortable calling any code in any program as \"functional\", i can leave this discussion","e.g. your problem is how to build facebook. my problem is how to destroy facebook. sounds rough, but i'm honest.","anyway, carry on, i don't care even if react calls itself profunctor optics. there are much bigger problems to solve in life.","and the most important fp superficial distinction is programming with expressions, not statements.","so the real distinction in my opinion is indeed the api, not the concepts (you also have \"classes\" in haskell)","you can get escape hatches such as lifecycle hooks and shouldcomponentupdate with a function-oriented api like in snabbdom.","declarative programming is surprisingly vague as a term.","frontend in 2017 \"i love declarative and functional programming! watch this: class button extends react.component { ... this.setstate()\"","even with transparency, complex systems can obfuscate facts. so simplicity is also a component for justice.","how many ways of writing html do you have? like maybe 5 or 6 my dude ur like a little baby, watch this","yes it is, which builds supervised ml test data for their ai.","one huge pr => slow review, chance of rejection and disappointment many small prs => quicker merging, creates trust and collaboration","yeah. same as in the browser, just in a separate window without a url bar and such.","it's the same as what i get in a browser tab (which is to say: not the best responsive interactions).","i find it pointless when web services have electron-based desktop apps. with real native you get much better ux, e.g. telegram desktop.","this thing is basically my alternative number one to google analytics. boss!","is there any way of managing github issues and prs on mobile devices with excellent ux? i feel like that's a huge untapped opportunity.","current status: hacking on a functional pull collections library similar to xstream, inspired by ixjs, bacon.js properties, etc.","hi! 1 intro to reactive programming 2 creating observables from scratch 3 basic operators 4 subjects 5 higher order observables","erik, what ever happened to asyncobservable? i haven't seen any impl of that. cc","that is wicked wrong... i'm surprised because i thought i was exaggerating how wrong they are, but apparently i wasn't exaggerating","they say they can't track your brain as data, but so did they say about whatsapp data usage. you really cannot know unless it's open source.","good that i never used that app, sad that they do this","nope, they make it happen, i just exposed it so we can wake up to that reality. the exposition is nasty, as is the reality.","privacy wasn't even mentioned in my tweet. facebook's evil is multiple, not just privacy","that was already done by facebook's business model. metaphors are needed for protest and communication. such as pawel kuczynski","facebook dehumanized people as soon as it started using them like cattle. i'm just exposing a fitting analogy.","i am blaming facebook, but facebook only stands on the shoulders of our collective complacency.","people who use facebook aren't bad, they're victims.","it is exactly exposing injustice if the tradeoff of staying on that website is not fully understood.","twitter is like facebook, except doesn't do a good job at being evil. facebook is very successful at being evil","and even if i'm safe, by being in facebook they are helping zuckerberg's empire continue their goals","because by the time i think that, it's too late. e.g. facebook live","this year i will turn 30 and i'm asking friends and families for one simple type of gift: to delete their facebook accounts permanently.","do you see a problem with facebook?","instead of a `utils` folder, have a `to-publish` folder in your project, with modules that you'll put in npm soon.","struggled many days with a bug in some 3rd party js library code and finally solved it. guess what, it was type mismatch error. !","basically asking people to run a script that counted frequency of operator usage","i did a simply list of (1) before designing xstream","just add a sentence there: this will not be a marriage proposal. (or will it?) because it happened once in reactiveconf","all i can think of right now is \"windows xp = windows cross-platform?\"","how do you organize files using styled-components? i would put them in a styles file but... they're components...","probably would have never happened with types. 'dynamic' programming is hard. :d","yeah it's just glorified shell script","remove duplicated package.json scripts in many packages like npm run lint npm run lib npm run release-minor etc","to remove duplicated scripts in package.json like npm run lib or npm run changelog in each package","yeah, for those cases people want a smaller bundle size, since css2obj is small","if you happen to hear a module that uses styled-components to offer a typescript objects api, ping me :)","i did bump quite often into typos in the template string though. i'd prefer typescript and objects, but this is superficial to the approach.","just used styled-components to refactor styles in a cycle (react) native app, and what can i say... it feels so logical and easy and neat :)","i'm planning an egghead course for real world cyclejs usage, but why not a cycle.js workshop... eventually","this is the essence of asynchronous programming. the values are not there yet.","that's however, just for \"servers\". it's easy to install the client.","yeah twitter suffers the same, and i'm working on a p2p alternative for that.","5. give people the choice of selling their data or paying for a subscription 6. not use an algorithm to hide some content","that's okay, i just wanted to check. building a proof of concept with 'offline' / lan synchronization of local db.","when i ordered my mbp it was uber important to get us layout and it's not a big obstacle even in finland","is it `snapshotter` on npm? that looked cool","slowly coming to the conclusion that tape wins all other test runners for js. least amount of magic, does one thing with no surprises.","le interwebs on monday.","i believe if they were to reinvent haskell they would give names \"mappable\", \"chainable\".","learning observable by building observable","take a look at highland.js","because it's a simplification of the rxjs v5 implementation","open protocols are important. if google had invented email many decades ago as a closed service, by now it would have been discontinued.","and in production you should use google closure compiler, and i wouldn't call cycle.js the current state of js.","we haven't updated todomvc in a long time, we are taking more initiatives to reduce code size (xstream is 5kb), ...","there will be a type error in javascript and you will die. it will be an interesting life.","why: sanely solving callback hell and similar types of asynchronous programming problems, more than promises can.","\"too little commits, this library looks sketchy. too many commits, this library looks fishy.\"","it's not virtual dom itself, but would work well with the existing web standards (as opposed to introducing new virtual els).","baked-in diff & patch might have an api that looks like morphdom, have you seen that module?","so it's fair to say jquery promotes fp concepts as much as react does.","of course every javascripter is putting setstate including the `this` reference into a effects monad. of course.","no, there's actually a blog post that mentions \"functional programming\" together with \"functional setstate\".","reminder to react users hearing about \"functional setstate\": theres nothing you can do about `this.setstate(f): void` to make it functional.","yeah in 1999 no real programmer made any typo anywhere, ever.","coding in javascript and just had a typo causing a runtime crash and thought \"why did i even leave typescript world for even a few minutes?\"","is it really too hard to see? people look up to them so they become thought leaders. they're in fb. they lead react.","because while wcs benefit basic web devs much more than fb devs, react team members voice has a huge impact.","are there even any proposals for ssr with wcs? not every underlying framework under a wc supports html rendering, for instance.","it's one problem, which may be irrelevant or large depending on the application. elm can't do ssr and a lot of people still love it","some non-web developers shame js and the dom, and miss out on the great things happening.","even the dom has serious flaws, but we built ton of cool apps and abstractions on top of it.","in reality there are plenty of ways wcs can already be useful, and preact proves that interop.","precisely my intent too. the only issue i opened in react repo was how can i help to bring wc interop.","why does that matter if public things were said about wcs by several core members?","atom supports jumpy plus vim, which for me what absolute perfection. still miss it in vscode :/","it's not either wcs or frameworks. quite the contrary actually, you can have wcs to make react work well with angular.","so what that facebook frontend won't ever use wcs? it's not a representative site of the \"normal\" out there.","web components shaming started (as far as i remember) with react team, and now there is sadly a persistent culture of wc shaming out there.","you can think of this as pick/props/lenses for *types*. js doesn't have types so it's impossible to translate this to js. :)","so you could actually use both typescript pick2 and ramda, no problem.","you can't compare the two because typescript pick is just about types, while ramda's props() is just runtime function.","and in practice, using vscode, it's \"editing time\" ;). you see a red squiggly line if you write adres.","compile time. typescript has no runtime.","did you know that typescript will emit an error if we did the typo `adres`? because `adres` is not a field in user.","these issue plus imperative plus classes plus jsx plus (the then) react-id were things that pissed me off with react.","which means they do *not* provide more options. they just provide more ways of depending on facebook.","facebook has only gotten more closed and less interoperable. they are not interested in being replaceable in anyway.","runs synchronously. causes no side effects (meaning also complete isolation between tests), and is simply testing your code's logic.","short explanation for non-cyclers: it tests app interaction on a counter over time, without really waiting over time and without rendering.","facebook is simply a middleman, and a middleman's core business is to be a necessary evil.","facebook is simply a middleman, and a middleman's core business is to be a necessary evil.","with polyfills, so are web components (and you might not need polyfills if you dont use the full wc spec).","my point is the ability to create react2wc / cycle2wc / ember2wc helpers and then wc as common layer.","yes, with cycle. i wanted to use an existing component library, and i did that through wc.","i still feel very passionately that web components are the only sensible *long-term* solution for frontend interoperability.","whitespace: yes. tag capitalization: i think so because we convert from string to jsdom. self closing tags too.","well how about spending a bit more than 1 minute to read the codebase? :)","there's nothing about the structure/architecture which is new and to-be-learned. there are just more lines of code","to be honest, i don't know what is the challenge with bigger apps. the structure is still the same, just ...bigger","it's incredible how testing gets progressively easier as you convert magic dependencies into function arguments. functional programming","subscribe in rxjs can either be subscribe(observer) or subscribe(next, error, complete)","i'm planning it. :) but i just finished recording a course on best practices in rxjs in general (not testing).","i'm happy for now with this, but wow, node-notifier could be really handy in other projects! thanks!","perhaps oliver's point was \"when [async cancellation for browser apis] is still in question\"","also makes it easy to use web components without registering them globally with a tag name","\"you're not a real developer if you don't enjoy finnish mammi kerman kanssa\"","explain to me how the cycle.js has little meaning.","groups don't die, but the channel (facebook) may die. the actual collection of people will find another way.","had a deep realization that \"readable code\" should mean \"quickly learnable code given few assumptions\".","that \"reactive\" is necessarily those 4 attributes. or why did you tweet it?","just found a fun way of learning some js optimization tricks: 1. google closure compiler 2. feed it into prettier 3. study","wanted: drag mouse to crop any area in macos and display that as picture-in-picture. would help a lot with viewing browser while coding.","the global app state can still be serialized. or are you talking about something else?","no drawbacks.i used to use type/payload because it was necessary when parent action wrapped child action. not anymore with onionify","sigh been there. try \"lib\": [\"es2015\"] in tsconfig and remove the package for promise types","this is how they build a hypocrite image how msft and american companies are good guys while basically north korea is the threat.","if you can't do without keyboards you are not a real developer.","i. did. not. author. redux-cycles.","so far i think a \"mostly client-side\" approach is better and easier. server can render some basic stateless html, just for seo.","is it the term or the technique?","it should definitely work with cycle/rxjs-run, but not xstream. for that, we have cycle/time, cc","that said, as app state gets more complex, it resembles a database, and usually needs to be relational.","i'm very interested in this because we also have basic lenses in cycle.js.","fill in the blanks: a good code review ________. a bad code review ________.","for js, the only sensible solution is to exact-lock all version numbers.","i'm witnessing the official death of semver, where angular team is telling rxjs contributors \"major won't mean breaking change\". \\_()_/","yes, avoid multiple instances. the programming should only happen inside main ()","no actually angular is the opposite of what i mean with predictable/traceable. di e.g. loses traceability. magic orchestration etc","this isn't a mail client, this is patchwork, a social network.","nanocomponent looks sweet! should be easy to adapt for snabbdom too (and therefore cycle).","neat! the code intelligence comes for free","it's pretty awesome, it's what powers vs code. i'll love beaker if it has a monaco based editor.","elm is all about web dev and it has zero components.","also, for what it's worth, i don't think the web today is necessarily \"components get out if you dont speak components\".","imagine if the browser's default styles would be more like medium, less like times new roman.","plus, i've been finding vanilla html (without css nor js) for writing blog posts very compelling. small and performant to render too.","there's nothing wrong about teaching developers how the web is about documents. gotta learn the legacy to understand how we got here.","i just find facebook's invasion much deeper than twitter's. and as a company, twitter actually isn't overpowering","simply because users are not customers. they aren't optimizing for users.","well i'll give it a thought, but definitely not eager to trust companies like facebook","facebook as a company is an obvious success. is it good for society? another discussion.","i won't say most states are \"good\", but i don't believe in free market to optimize for freedom and welfare.","reputation is something a company can build disconnected to their \"good/bad\" behavior. it's commonplace to pretend to be good.","another for \"no\": js is already 1 of the least understandable languages. breaking changes in small corners would make it worse.","i answered no because i believe javascript's purpose should be as a compilation target.","i think it's due to parity with js try/catch. the err in catch(err) is type any.","slack as a community hub for open source is a serious problem for the open web. the conversation log is not public, not indexable.","i agree, but the lack of any type inference (java) is much much more code than average typescript.","but writing annotations is good for someone reading your code. we should always optimize for code readability.","if you write ts code assuming flow semantics, you'll find \"bugs\" everywhere.","flow and typescript are different, people coming from flow can't consider every flow code to be valid ts code.","that's just using typescript wrong. should be const p = new promise<string>(...","yes, while trying not to lose developer experience. essentially we like to aim for minimal amount of breaking changes.","in my opinion \"annotated or any\" is a good choice. `any` is as bad as javascript, and people still love js.","okay, flow's inference is just better. typescript is getting better, though, and quickly better.","hence the best practice in typescript, since it's focused on typing all libraries (as possible).","when crossing package boundaries, though, you can't be sure what is the type of `utility` unless you annotate.","okay so here's my point: freedom in js weakens ts's inference. but actual code usage strengthens flow's inference.","typescript complained because you asked it to complain in those cases.","not happening here with me. i just rewrote a small function from annotated arrow function args to non-annotated. ts v2.1","or if you use xstream fold(). if you use most.js you'll most likely have ref transparency everywhere.","just a clarification: managed i/o in cycle.js happens via drivers, roughly haskell stream i/o style.","want: `prettier` for typescript. because... i don't even javascript anymore.","you should be saying \"oh god pls no\" as soon as you start using js, not much later on","please const this happen","disappointed that my good tweets are less retweeted than my brainless tweets. come on world, be better.","cool that by studying programming you can actually learn kung fu.","or, to exaggerate, purescript?","so what do you say about kotlin compiling to js? :)","i think i made it clear enough i'm talking about frontend, and not the entirety of programming nor internet protocols.","cool, if mutually-assured destruction ever happens, it'll be an awesome show to watch","what i did with that rxjs talk was far from elitist.","even in the case of fast-producing websockets or midi events or clicks, lossy backpressure (dropping w.r.t framerate) is enough","hasn't happened so far in frontend code i worked on. it's a plastic problem, made up in a laboratory. diff story on the backend","i won't ever have a use for such kind of observable in frontend-oriented javascript.",".. because it takes more than 20min to build a promise or xstream stream from scratch in an intuitive and thorough manner.","consistent feedback from most programmers...","but haskell is also \"fp with a declarative approach\" because fp is inside the category of declarative programming","top 2 worst ideas for languages: 1. dynamic/loose types (js) 2. strong types but no inference (java) top 2 popular languages: 1. js 2. java","yeah js is a language for those use cases you want to give an object as argument to math.sin. because freedom. </irony>","yes please! an easy and light ga alternative is needed.","the longer people use facebook, the more indispensable it will become, and the more exploitable (by companies and governments) too","effect is i/o for any device other than cpu or ram. every effect is a side-effect,","yeah i have, and i know my code style wasn't idiomatic haskell","like waiting for it to be perfect? not even javascript is.","the way i see it, the compatibility is for ease in migration and familiarity, not interop or engine swapping.","think browser-specific bugs, but applied to this component ecosystem.","yeah i see that 95% compat could just have been 100%, but the devil is in the details. probably would manifest in peculiar bugs","what's sad about your initial comment is the assumption that \"100% like react\" is the supposed way for component ecosystem.","not as a faster/smaller react. that's preact.","inferno started out with a very different component api than react. it became closer to react just for familiarity/adoption.","what? why not? what if a nice component kit library is written in preact and people want to use it from react?","because angular 2 and vuejs have pretty clear component boundaries, and excluding them would be this same story over and over.","yeah it might help to remember what really matters in life, like family and close friends. then it's ok to suck.","interwebss. only conferences unite these folks.","to add a few: rehearse like crazy, but not just before your talk. then deliver it without strictly following script.","just my 2 cents, imo. if you disagree with the 2016 review, whatever, happy new year!","2016 front-end: - rxjs went mainstream (thx to angular 2) - reducer state mngt becomes state of the art - pwa 2017 front-end: up to you!","the best developers i know are cyclists.","it has all sorts of apps, including fido u2f.","in particular, angular 2 already does some pretty neat aot compilation of templates.","i.e. the fact that a dsl allows you to do optimizations under the hood since its a higher lvl of abstraction","i'm quite sure i heard this same argument for jsx multiple times. i just don't like jsx itself.","try taking a walk. unless it's crappy weather...","have you tried rollup or google closure compiler?","you can specify a github address instead of a version, in package.json.","but i've heard a lot game design happens in spreadsheets, either videogames or board games.","totally. i once designed a puzzle game and build a small program to search for optimal levels/configurations.","i'd love to try designing one some day. i have a couple of ideas","i doubt all these operators are *fundamental* and how much more verbose code would be without some.","turns out by the time you're a teenager you know what \"apply\" means. you can be a 10year java programmer and not know `$`","e.g. rx has a ton of shortcuts to make code more terse. i prefer a small subset which can accomplish nearly everything.","so this is the point where fp community proves again how there is something else i dont yet get, hence cannot read code.","well i know what bind is. i find it a problem that i couldnt read the code once my eyes hit <=<, even though i know >>=","yeah sure because obviously dollar sign must mean \"apply\".","thats in python and coffeescript and it has never been close to unreadable. everyone uses avoid != in js anyway.","`!==` js is worse than `not`. if we can make something readable with no disadvantages, why not?","we should make code as readable as possible with a small set of core abstractions.","yeah that has to be the same case, <=< is as common as the ternary operator, yep. ps: i find coffeescript's way better.","i disagree a lot. i teach programmers and they feel at ease with examples. after exposure to enough examples you generalize.","its not a problem to build a generalization on top of another generalization. it's problem in educating people.","hope you see how wrong this approach of overly abstract terse explanations are, man...","its okay. seeking react interop is good. some things in the arch are funky imo but so was cycle.js funky in the beginning.","awesome! stockholm doesnt disappoint and hopefully cycleconf wont either ;)","that had nothing to do with community approval/rejection. it had all to do with google internal rejection. check the link.","could be related to applicative (`ap`) use cases since monad requires ap...","monad and cancelling/subscription are different things. but the bottom line is, laziness implies you need `subscribe`.","note: i would *not* have been able to live code my own promise on stage, because it's more complex than observables.","the actual effects happen only later, in `subscribe`. so `then` for observables would make little sense.","it's familiar and easy and that's why people like it. but sync programming cant properly 100% \"hide\" async. the abstraction leaks.","yeah and i want to talk about async/await too. the gist being: sync/procedural programming is a thing of the past.","i'll probably eventually blog about this in tech details: in my opinion promises are crap. use observable in its place even for single vals.","in tc39, domenic wanted to drop subscription for es observable and use ct in its place.","by the way, c# has both rx and ct co-existing. but they kept rx subscription type in c#, with laziness and cancellation.","the way promises were designed in js (eager, cached, stateful) is a bit against cancellation.","because they would: - add another possible state for promises (= more complexity) - add try/else/catch/finally syntax to js","i'll just answer both: for language design, a bdfl approach like in python or elm.","better alternative for language design or better alternative for cancellation?","apis are designed in a \"laboratory\" style, discussed with \"top scientists\". average users and best practices in the community have no voice.","in retrospective, pretty scary how the committee dynamics happen. it's pretty clear they are committed to companies, not the js community.","too late yo. this is the gold rush of js names. soon all one word names are taken.","cycle.js v: the empire strikes back","i'm happy that comver is compatible with semver, so i would keep it as it is. but emotion.breaking.nonbreaking can be something else","yes, except a good amount of analytics data happens in the first few seconds of interaction.","certainly tracking the shit out of users is a penalty on performance. we need to migrate to the true p2p web, like ipfs etc.","but given ad blockers on rise, what if we changed our default approach? ads => microdonations deep analytics (like ga) => shallow analytics","simple guide to improve performance on and decrease time to interaction: rip off google analytics, google adsense and all that google crap.","@ashtonwar installing foo@1.1 would not break your app, and it would be a sensible default.","yes i know i can fix the situation. that's not the point. my point is why does npm default to dumbness.","if npm package foo@1.2 is deprecated and your project depends of foo@1.x, why can't npm pick foo@1.1 to install? why install foo@1.2?","really can't use v2.1 ts code from v2.0 projects.","typescript is great, i love it. ts v2.1 is even greater, it's awesome. but darn, v2.0 => v2.1 is a breaking change. come on, folks. really?","my motivation for making cycle.js has always been the curiosity for \"what does an rx-only architecture look like?\"","lol now you think you know my motivation for making cycle? redux didn't even exist at that time.","i'm starting a contest called staltzawards. nominees (npm packages): - free-style - inferno - concurrently - menrva - most - fun-task","because minifiers like uglify-js can't minify everything, like object property names: obj.disrighthere","to manually minify the source code","in v5, every subscription is already composite","well that's not \"the website docs are confusing\", that's \"google is confused because there are 2 versions to pick\".","if you're using rxjs v4 and not rxjs v5, ... why?","i've also used it in closed source apps for customers.","that's cool, i appreciate the blog post. but how can we make this quicker than \"install mysql & php\", \"download owa\", etc?","is there such thing as an easy plug-and-play analytics add-on that is *not* google analytics? bonus if it's all open data, for transparency.","it'll be hilarious once facebook starts blocking fake news links hosted in facebook itself. what a disgrace it is to consume content there.","i meant a promise a+ library implementation versus an observable library implementation.","i'd do this from anonymous to anonymous. i don't think i'm even an experienced dev. i'm barely advanced beginner in fp. :d","while rxjs not being dependable is also false.","doesn't it? the foundation will be shaken, pretty objectively actually. not in a breaking way, because it's js. but still.","junior dev: i didn't know. i didn't judge the person. i didn't even try to label his competence level.","if that's what stability means, than rxjs is even more stable. v5 introduces some breaking changes, but not too much from v4","it's ok to punch down angular2 but not ok to punch down flawed critiques? i know that rxjs 5 is stable, \"beta\" says nothing.","yeah i could write about that, also including async/await, but it wouldn't refer to this blog post on angular.",".. is written in a language (typescript) safer than javascript. by all means rxjs v5 is super reliable.","marketing.major.minor would still be ok for (hat) ^1.2.3 dependencies, which is npm default.","jsx adds one more meaning. another reason (for me) to hate jsx. :d","not at all. reactive conf is a react conference. sad naming...","(you have to buy a separate cable for usb-c to normal usb, big issue for development) beard gets stuck in speaker grills. it hurts.","weak battery. (biggest issue) super crappy vibration. volume buttons easy to mispress. usb-c charger has is usb-c to usb-c only.","would you come to speak about advanced rxjs and/or hear about advanced rxjs topics?","so cycleconf *will* happen. here's an idea: since the audience is anyway familiar with rxjs, what if cycleconf serves as an rxjsconf?","you can take psycho.js if you wish","i love rxjs and still use and teach it. nothing has changed.","so my advice is xstream for beginners, and rxjs later.","so my advice is xstream for beginners, and rxjs later.","dreadful facebook","what if you're a suspect based on appearances, or police staff is abusing their power?","@nikanorovalbert _animated_ matrices in javascript _can_ cost you 1672 lines of code (that's what's in src/, not the bundle).","specially with programming, the story is usually \"i used to use x but then i found y which is much better in many ways\"","3 the web is multicultural, interpretation styles vary across countries. 4 some people disagree with a premise and just quit.","what browser you're using?","sure you can. try out the website, there are controls that resize the matrices.","i have to squint very hard to see cyclejs there","still genuinely interested in redux-observable examples of legit mergemap use cases","to be, essentially, god. in a few decades, people won't \"pray to god\" for help, they'll pray to google.","google's will become even better at it. its ultimate goal is to be your oracle, to answer questions before you even ask.","now that's code splitting","... powered by firebase, a closed-source component owned by google","about \"any google service\": i don't know. about \"any response\": yeah, can't access any site at all.","once upon a time we \"surfed\" the web. it was fun. nowadays we survive the web.","keybase should be pretty easy for non-techies","frequent frustration: a video hosted on facebook which i can't watch because i don't have an account. burn in hell facebook.","til that i \"happened\" in 2016.","code comment with a link to that article. :d","i don't understand why i don't understand why pwas are an exciting topic. is it just google or what?","does redux-observable affect how reducers look like?","i have a new rxjs course coming up. 100% recorded already. just polishing the final details.","i don't think there is any library out there for this, sorry","rxjs pros: has 120+ operators! rxjs cons: has 120+ operators. xstream pros: has just 22 operators! xstream cons: has just 22 operators.","with haskell or purescript you could make an adt type like timerange satisfy the enum type class, and then you could enumerate each.","i also endorse typescript a lot, but it also suffers from the problem that you can't enumerate over a union type. (otoh there is ts enum )","pubicist? like puberty? what the hell?","and this is also applicable in angular 2 with ng-rx and typescript. cross-polination for the win. cc","i disabled location tracking but this includes also info on all the apps i used and when.","i use firefox and duckduckgo on my phone, but maybe this is android 7.0 because they know all the apps i opened and when.","so you haven't heard of snowden apparently","no, just google translate.","looking forward to ubuntu phone. i don't like iphone that much, but i'm wondering if it's less crappy than android.","i'm mostly shocked that the freaking clock app sends metadata to their servers. i didn't even imagine they'd go that far.","i can clear that from my own view. but google will keep everything.","so basically turning off some parts of the app?","yes in cyclejs repo, under examples/animated-letters","check our cyclejs repo, then /dom/custom-typings","i'm mentoring two nigerian programmers (woman and man). they're brighter than many other white male programmers i've encountered.","yep! that's what happens when people make stereotypes. fwiw im brazilian, not into pizza, coffee, energy drinks etc","nice! thanks. and as we speak i'm recording more, about rxjs flatmap etc. :)","...about almost anything you're working with (task, fp js, static land, fantasy land, kefir, etc)","curious what you're building :)","no breaking changes to the api is easier, but a bug fix may change behavior and compatibility","also (ignore that i am into fp) it's dynamic typing, and to my experience so far, strongly typed is the best \"guiding buddy\" in programming.","i tried to write a bmi calculator with eve and failed. :( i guess it's not exactly \"programming for humans\" just yet, but i love the effort.","won't happen if you group streams together under a function. it's the same idea as tree of react components","my initial reaction was disappointment but then i considered how touch bar could be customized for programming.","firebase is also heavily closed source. can't see the source code and it comes already minified/obfuscated in npm.","i sort of think that is implicit already in \"js framework for ui\"","i used firebase with cycle.js in a frontend at work. now i'm looking forward to horizon, with rxjs and no google dominance.","shhh silence. someone might catch the npm package name for that","aww man, we certainly need reelm, recycle, reangular","i was just at an angular conference and now i'm in a react conference. why? to steal users to cycle.js of course muahahah","mapping each node without changing the structure is one valid type of reducer function. what's the problem?","playful thought: an rxconf would have enough audience from angular, cycle.js, android and (some) react communities. anyone want to organize?","poor facebook...","yeah i understand ben's mantra for \"use each tool for its best use case\" but observables just cover all that promises do.","just don't blame facebook because they are gods, right","however, if an open source project can avoid a patents file, it's even better. let's not pretend react is perfect.","and... react native. yeah this is the life of some real developers out there. forbidden to use these libs.","also applies to immutable.js and jest. good job facebook, this is working just fine.","today i learned: some developers cannot use react at their company. their legal department got scared with the patents file.","unaffected by possible misinterpretations, a lot of people are mixing app state and ui state in redux.","lenses and reducers aren't mutually exclusive techniques ;)","in fact, react tries to have srp by advocating some use of component local state, right?","interesting. apparently it uses something like a reducer function. :)","check out redux-observable","where would you use this? server-side rendered css?","wait, isn't self-rolling what browserify is all about? :)","it's probably easy to say \"webpack is easy\" once you're exposed long enough to its config files.","i gave webpack a try in a real project once and i'm back to browserify. i found it too magical, too big.","double excited for next week: in paris with plenty rxjs talks. in bratislava, a conference about pure awesomeness.","luna is in closed beta. i'm eagerly awaiting they open source it. it's conceptually very close to cycle.js.","typescript interfaces. a .d.ts file for your rest json endpoint. can include also thorough descriptions in jsdoc comments.","getting tired of semver problems, i made a draft for something to improve/replace semver. would appreciate feedback. message me.","yep! just not with a lenses-explicit api, but that's fundamentally the idea :)","it won't happen no matter what i do. that's the problem.","then you're looking for purescript ;)","you should use typescript 2.0 and its native \"strictnullchecks\" option. then `maybestring: string | null`","there is no need for cancel tokens. they are an alternative, non-popular, weird way of replacing unsubscribe().","\"thank you\" domenic denicola and the chrome team for your force-fed canceltokens overriding what the entire reactive streams community does.","openwhisper system signal mobile app, an alternative to whatsapp","transformation has to start from somewhere. conformists never change the world. they just keep it crappy.","why? to preserve privacy and the open web, to sponsor diversity of services (no monopoly), to pay for being a customer, to ensure the future","avoid google and facebook products google => duckduckgo gmail / cal => fastmail facebook => twitter and signal","what do you mean? components come for free, it's immediately reusable.","not sure, but the \"reactive manifesto\" was launched around sept 2013. i started blogging about reactive around summer 2014.","if you're in europe and interested in freelancing react native gigs, ping me.","customer support already resolved it. thanks. i was this close to migrating to apple music. happy to stay around still.","lol i'm leaving facebook for privacy reasons, no chance i'll touch google stuff","we *support* most.js *also*.","some people also use ramda with cycle.js.","hmm, most.js is a fantasyland-compliant stream lib and we use most.js in cycle.js.","looks cool. what api are you using for the controllers?","open source contribution tip: thoroughly read existing source code. capture the coding style and respect it. pursue harmony.","and surprisingly (or not), elm which doesn't support chrome debugger is more bug-less experience than es6/react.","i'm building for paradigm-first, not suitable-for-chrome-debugger first. like elm is too.","with xstream the function stack is easier to step through. rxjs v4 is more intrusive there, with schedulers.","the android app is ok, but the webapp is kickass","is dis ... web combonent?? or at least custom element?","you got a tool for that? would be cool to get real-time analytics like google analytics.","to teach or hint towards the right way of using the library. shamefullysendnext is useful in 0.5% of the cases, so it's useful.","agreed. given enough time (or more contributors), everything will get better. :) the cycle.js paradigm is never the obstacle :)","javascript. use free-style (a library)","result of designing xstream's api with the name \"shamefullysendnext\": nearly no one uses this. win!","great!! i think it should be easy to put the update of css variables in a (sink-only) driver. or rxcss in a driver.","i was so pissed off i didn't notice my typo \"when reaction\" => \"my reaction\".","i would never build an app with only wcs. that's not the point.","yeah i just finished v1.0 of an app for a customer that has a few polymer wcs.","immutablejs has hashcode()","use immutable.js.","note, the performance problem is not in cycle.js itself, it was a userland perf decision that may happen also in redux apps.","i should have used immutable.js and hashcode() equality check, even if immutable.js typescript support isn't perfect.","confirmation from the customer: they're *really* happy with it. my analysis: perf could be better, i used objects for state and obj spread.","because that library was had proptypes check and the child (a wc) was not a reactelement.","there is \"reactive components\" a tool to convert react comps to wcs. worked. but not for a specific react component library...","the smaller the website, the larger the amount of developers building those. you might not be a representation of majority","conceptually it's entirely possible to interop with wc, but in practice nearly no one cares, in the react community.","i'm thinking of making a pr to react itself to improve wc support. let's see how that goes.","yeah and being react only saddens me. there is a tool to convert react components to wcs, but not all component libs work thru that.","they can, like polymer could be used for google inbox etc, but it's near zero benefit, when you can optimise locally with e.g. react","web components are amazing for mere mortal developers like you and me not working at those. that's why we need to be vocal about them.","web components have near zero utility for codebases in large companies like netflix, google, facebook, where they roll everything custom.","ok, reactvr is cool, but a-frame is friendly to interoperability. web components web components web components web components web components","reached a milestone for cycle.js, that will make it much easier to use for dynamic lists and also improves on state of the art. stay tuned!","in my library xstream, i have only map and flatten, no flatmap.","flatmap is basically (generalized) `chain`. i was talking recently with lee byron that there should be array.flatmap in js. useful.","won't change. javascript will be always supported. and the rewrite is done already. :)","oh in that case both cycle.js and angular 2 go to 0%, because react is jesus and does miracles and cures people and stuff.","cool! i also like the simplicity of html-then-css-then-js of declaring an angular 2 component. :)","yes. we need to build examples, ui components as web components, prs to frameworks (to better support wc), etc.","to me it's flattering even to be compared to angular which has a google team and freaking huge conference.","i felt like that with the nokia n9. probably best phone ever, you could even run vim or emacs on it, natively.","i'm about to give a \"powerful but useless\" talk at in 20min about \"the old is new again\" related to cycle.js and elm.","right, those 113 slides are for happening right now. but also the reactive conf will probably have 100+, lol.","totally unrelated: i noticed you build flashdevelop. i used to do as3 and loved that ide. it's awesome! thanks for it.","my talk will be about theory, history, architecture around i/o in haskell and its relation to cycle.js, current trends, elm, etc. plz join!","so far, yes only for xstream. we built the devtool for xstream and xstream for the devtool. but we have hopes for rxjs too.","type mismatches already occur in javascript, it's not a product of using ts. e.g. math.round accepts numbers, not objects.","how about the blog post on js purity? ;)","1) i'm on a donkey (javascript) traveling for 100km. 2) someone passes by with a car (typescript) offering a ride. the trip would be 50min.","... you could even `any`-cast many libraries and still benefit from your codebase being strictly typed.","he says typescript's disadvantage is \"a lot of overhead with 3rd party typings\", but in reality, ...","if you've followed my account long enough you'll see that i think alike elliott, specially regarding classes in js.","pinging into this conversation since he's poking at putting cycle.js in purescript.","i don't code typescript in vim. i use visual studio code.","ah right. i thought fishy code like some category theory weird stuff","xstream is hot only, rxjs is cold and hot. i don't think hot-only will ever happen in rxjs. kb size could be reduced though.","reasons to pick rxjs over xstream: - you need full control and flexibility - many good operators - better testability through testscheduler","reasons to pick xstream over rxjs: - you're a beginner - small kb size needed - readable stack traces","and the real scale is something like most.js being at least 100x faster than any other.","reactive stream library performance in order: - most.js (fastest) - rxjs 5 or xstream - kefir - rxjs 4 - bacon.js (slowest)","no dispatch. take a look at cycle.js","\"\"\"yeah like node.js in a satellite\"\"\"","just released version 1.0 of the cycle.js project i was working on at . customer seems happy. me too :) more versions coming.","theoretically yes because they are web components, \"entirely isolated\" etc.","yeah i'm not even going to try that since it requires me to use css modules, i'm using browserify. it won't be pretty.","trying to use polymer paper web components, they lack \"just works\" experience. quirks happen when using in a not-full-polymer environment.","i see you've been brainwashed at facebook","what? i've experienced duckduckgo to be a better tool than google itself, not to mention its privacy benefits.","nice use of typescript. the types make reading the source code a bit easier.","yeah, i'm obsessed about visualising things. but some people learn with examples, others with video/voice, others reading src code.","many of those languages are driven by sympathy with their community. ecmascript can't afford behaving differently.","please do. we are all transpiling nowadays, and many of us have moved on to clojurescript, elm, purescript, etc.","that's true, but there are proposals that don't represent *any* (significant) community, they are just from a tc39 member.","\"because the angular team needs it, so excuse me i'll ignore you\"","yeah right now i have a nice and logical explanation to rxjs. with cts added to observables, i don't. that in itself tells a lot.","all along, community ignored. this is the recipe for how to kill javascript.","now with cts, trying to uncrappify promises. and at the same time pushing that for observables too.","now we have crappy promises being confusing for everyone. then fetch() built on top of crappy promises.","it's about the js community having a voice in those decisions, because it will affect their life.","yet domenic speaks of observables accepting cts from the \"ecosystem and cts will go forward\" point of view, while cts are unproven.","and why can a google-backed framework insert something into es so swiftly? that is the dominance problem i'm talking about.","canceltoken vs observable subscription. and zones: where does that even come from? many unproven stuff in proposal.","*so much* hypocrisy and agendas and fake politeness going on. how did developers suddenly become politicians?","worse, they use the word \"ecosystem\" to justify that their proposals should be aligned in harmony with everything else.","and the lobbying going on with various silicon valley companies. \"google is (the old) microsoft\" -- brendan eich hints a bit what's going on","i don't know how to say this, but i'm *revolted* with tc39 dominance over js without regards for current best practices in the js community.","the reactive manifesto is to blame...","maybe it's time to rename jsx to \"reactscript\". </friday-unserious-tweet>","i'm looking forward to the day canceltokens are added to js so it would forever poison js and we can move on to better transpiled langs.","oh, i am a \"js person\"? and before typescript i didn't i understand why types are good? how can you conclude all this?","my declarative ui programming was pure fun until i had to adapt a 3rd party lib which is not at all declarative (think jquery plugin). pain.","(poll) what js or other language are you using?","notifications look indeed less distinct, i noticed first thing. crappy","maybe one day i'll figure how to fit inferno's quasi-virtual-dom abstraction into cycle.js. i'm not in a hurry, sorry.","- silly mistakes? typescript 2.0 guards me against most of them. conclusion: i'm most of the time making features. not bugs or architecture.","- async? streams (of course). - state management? onion state (no props / state distinction). - styles? free-style (css in js).","yeah i know i'm biased because i'm productive with the tools i built. but still, this is a coding experience like i never had before.","i wish i could show you what i'm working on at work! such beautiful ui and code too. with cycle.js i'm productive like a mad coding robot.","we just did what choo (a tool by someone we know) did. they had an opencollective.","could as well just rename the platform to \"grumpy news\"","i don't think its misleading at all for js programmers. very few people have frp or lucid background.","yeah \"synchronous\" has other connotations, but in javascript it means \"happens during the current event loop\".","yeah yeah i know. and cts are a laughable api.","if you *need* foo to happen after 10,20 you should never write that code that i wrote. i didn't suggest that with the code.","that's because promises are eager. overall it's a mess. async programming done wrong in multiple ways. needs ugly fixes.","and i'm not talking just rx here. elm uses just one abstraction, and people it. i actively try to keep a codebase consistent.","happens very easily with scala codebases, because it's multiparadigm fp/oop.","actually i believe the opposite. i've seen codebases with too diverse collection of techniques, you get lost trying to understand.","purescript has functions only. bad choice?","there's a repo about cycle.js architecture in android. check the cyclejs-community github org, there's a repo there.","also, the clojurescript one has a bug that the cyclejs one doesn't have ;)","yes, just check the cyclejs repo in the directory examples/autocomplete","cool. i have some ideas for mac apps. might try making one some day.","@ashtonwar no, firebase is accessible from any part of the app","it's like in redux. but function(oldstate) not function(oldstate, action)","it's so not an either-or situation. elm reactor debugger is a proof you can have both correctness and \"fiddling\".","do redux users separate \"cross-component ui-only state\" from \"business data\" somehow in the state tree?","i never install globally, even typescript stuff.","the error is somehow \"couldn't connect to the remote iphone in sauce labs\". other browsers work just fine. iphone 9 is the prob","preact, virtual-dom (what elm is/was based on), snabbdom, inferno, just to name a few.","the more you make react be \"all functions\", the less of react you use and the better off you'd be with another vdom lib","stringy union types wouldn't imply perf deopt in both flow and typescript.","i know atom is the most common elm editor, but take a look at vscode, they have great extension apis.","visual studio code of course","reactive. the one and only \"reactive\".","by the way, i just used your setup style today at , with an ipad (i used airdisplay app). worked perfectly. thanks!","dashboards that show data from many different sources. because cycle.js neatly handles different \"driver\" worlds.","no, just with xstream. but we're experimenting with support for rxjs.","thank you domenic for helping the world go forward merry christmas and happy new year","can you discourse about how react's setstate is not immutable? why isn't it? should it be immutable?","exciting! my code may break at any time soon! fun!","apple keynote :)","that said, of course cycle.js can be used as the \"frontend-backend\" for server-side rendering. for real backends, haskell .","i don't want to make cycle.js a framework for everything. push streams aren't good for heavy loads of requests.","just started a project at work. for the backend, gave firebase a try, it's excellent! and is playing well with cycle.js so far. :)","have you heard of redux-loop? just checking","i can see how you might have gotten confused, but the way i reason about the code doesn't have \"events to propagate nothing\".","\"fake\" event is how we explain it to beginners, but there's nothing hacky about it. it simply expresses app initialization.","everybody has email. that's what i noticed. so even though i have no whatsapp or facebook, i can still talk to anyone.","it's react, so who cares :)","atom is in the past for me. vscode has been amazing and also electron based. just missing some plugins but i'm thinking of porting.","that's not the style of reasoning we use for subscriptions. the idea is that the chain of observables is lazy.","the takeuntil in the beginning will cause a \"complete\" event which will propagate down to the res.json() part etc","the only way of not having subject here is to make it work like in cycle.js ;)","by the way, the componentdidmount with rx has the same loc count as the async await, without cancellation.","on this topic, me and are discussing a vdom library that exposes lifecycle events as streams.","idea: tool that strips // todo comments in code just before git commit, and opens github issues for each.","hence we need data flow visualization tools. react monocle. cycle.js devtools. etc.","hence we need data flow visualization tools. react monocle. cycle.js devtools. etc.","realization: facebook doesn't help connect people. it *owns* connections between people, using it as resource for advertising.","jsx is just about xml familiarity. elm, clojure, haskell folks have no problem with their pug-like functions.","well, at least there's the context in react, which may contain complex objects or functions. can't pass that context with wcs.","javascript isn't obsolete, and it's still backwards compatible with js from 1995.","well that's exactly the type of thinking that is hurting the web community today. \"join the react bubble or rot.\"","it's almost the same pitch as angular.js (\"html augmented\") which many devs understood and bought.","pitch is: ability to seamlessly augment html with more components than the traditional native ones. familiar api for interop.","depends who is \"we\". facebook does all leaf components as custom. a mere-mortal web developer needs ready components.","i'm for wc plus best practices as declarative props-driven api, that's what i'm saying.","i understand that because some imperative design decisions in react (native) make it hard to use declarative apis in cycle/elm.","and there are *still* useful jquery components. angular stuff. why miss out on all this interop?","framework interop. so much this. if you only live in react land, go ahead. but all us non-react users are missing out.","personally, i'd only use wcs in cycle.js as leafs, so i can use ui components built with whatever, with no buy-in.","but i think that's not where wcs apply well (which is otoh what polymer attempts to emphasize).","i totally understand why wcs wouldn't work as intermediate components in a deep component hierarchy, react does that well.","the golden use case for wcs would be as primitive leaf components, like third party ui component libraries. think elemental ui.","i almost read \"rxjsx\" there and my heart skipped a beat.","try visual studio code, it's also electron based.","how about a cycle.js + react native talk? or a elm native ui (rn) talk? (that would be )","a-frame lets you build smooth beautiful vr apps with freaking any web framework out there. by google? no. lock-in? no. slow? no. it's wcs.","don't let react (advocates) kill web components. kthxbye","you see, i can install other packages. not this one","trying to install it but the npm install burps with error 504 after a few minutes","just looks like xml to me. lisp people have been writing declarative trees without that syntax for years. they're happy","in application code only, i've exterminated my uses of `this`.","you can check the generated js of ps programs, it's readable. because of interop with js libraries and perf, `this` is unavoidable.","a framework for all kinds of frontend applications.","yes, not just in elm. component is nowadays as fuzzy as mvc.","in fact i think all new tech is presented (some more explicit than others) as \"solving annoyances of previous tech\".","this one is safely always a pure function in javascript function identity(x) { return x; } but, lol, not terribly useful.","dissatisfaction, then inspiration, ideas, experimentation, build. if you'd be satisfied with everything, you wouldn't build.","yeah, you can't assume i meant hate was inspiration for me to build stuff. not at all, there are many factors.","and even if the concepts have existed since the 80s, there is opportunity for innovation in developer experience.","consider this: if i, , wouldn't have *negative* opinions about react, we wouldn't be building cycle.js, choo, vue.js.","and... trying to get the react fans to acknowledge they are heavily under that effect too, like i am with streams. good night.","and look for the hammer which, when applied everywhere, is still a sane option.","one particular rewarding experience reinforces the trial of that tool elsewhere. i want to acknowledge our humanness as programmers","do you know ts can be mixed in a js project? and that you can choose to transpile ts to es5 or es6?","i remember had the same idea.","typescript has its problems, of course. it's \"crappy\", but it's many times less crappy than js.","yes. but my mind cannot imagine such thing being anything else than purescript-like.","i compare it with 1/0, which is technically allowed and technically returns something (nan), but not as a math function result.","in practice, wcs still work very decently as leaf components. react components optimized for complex hierarchies.","how it's meant for exactly that use case of interop of components with whatever framework you use.","answers to that poll of yesterday plus a lot of discourse on what is purity in js.","i'd like to see side-by-side code for redux-saga, redux-loop, redux-observable, for a few trivial examples, and many non-trivial.","every single time it crosses my mind to support react components in cycle.js i remember about (the idealistic world of) web components.","we need to do a redux-observable talk.","npm most, atmost/create, most-subject","manually and only during a coding session and only if doing cross-package changes, which isn't common.","unless the versions of all my packages would be synchronized, i can't release new major ver of base and let rx-run stay the same ver","first i develop using npm links, then i release a new version of base, and then a new version of rx-run.","you should really look into northbrookjs then, by . it was inspired by the cycle.js monorepo setup.","i think all libraries should be written in ts, but other than that use what you want. e.g. purescript is great.","use most.js which has ap, it is fantasy land compliant. there was some talk of making rxjs fl-compliant but it was dropped.","not immediately. it is much harder/unknown to support rxjs.","totally agree, but there is some hope of js as a compilation target.","it *is* tricky! it portrays also what happens in actual codebases.","you can actually still make a 100% pure js function, assessable just by reading code.","i can elaborate on a short blog post, but yeah, my point is you can read code and *trust* sum is pure, until not","so go read about it. i use typescript because i like it, i don't need evidence of anything.","meaning: i do tdd with ts. but not as rigorously as i would for js. writing tests takes much more time than types.","it's not perfect but it's light years better than the danger that is developing raw js. it's my personal view only.","i'm actually both contacting chrome web store and calling my bank trying to get google to accept my filthy money.","choose any metrics: github stars, npm packages, commits, issues.","javascript is dead to me. it's all typescript from here onwards.","think one cycle.js for each document/iframe, where sources/sinks are connected to each other. see e.g. panel and graphserializer.","not supported. because of limitations in rxjs, i don't even know how to support it.","everything is ready for devtool v1.0. now for the hardest part: force feed google with money to publish it on chrome store.","other frameworks eliminate this gotcha as a daily hindrance to developer experience.","happy to see you're giving fp a test drive.","absolutely. and the vast majority of companies and developers out there are very different to a monolith like fb.","great example, even if it's magic. there's already enough magic in react too.","fair point, except i wouldn't say that is why react is popular. there are many factors. simply being from fb is one. no doubt.","i didn't suggest killing anything. i just pointed out how react's design based on oop hurts dx.","proxy promises so much . sadly not a real solution in all browsers.","probably there isn't space for improvement if the api is ~frozen. would need a bigger reconsideration. but createclass was good","i don't know react deeply enough for a reasonable proposal. what i know is this binding in userland is a code smell and gotcha.","efforts to fix them: like many others, i'm not following recent developments. if i'd know of efforts, i wouldn't ignore.","i'm pretty open about things that suck in my tools too. it helps avoid stockholm syndrome. aren't you happy reactid is gone?","it stays new until it's gone. like it's good reactid is gone.","or making a language for the library. like jsx and more.","wouldn't be a problem if the library would be built taking js limitations in account and not pushing it to userland.","prize for who guesses what hot framework/library of the moment i'm talking about.","constructor() { this.onclick = this.onclick.bind(this); } congrats, 3 this in 1 loc, and it's not even app logic. oh, it's official docs.","typescript hack to evade responsibility: type brokentypings = any; (libraryfn as brokentypings)(arg1, arg2);","xstream came to existence *because* of this dev tool (and a few other reasons)","today i learned typescript type casting <foo> x is really the same as x as foo gotta thank jsx (lol) for that :)","if i'd be implementing react, i'd do exactly the same thing they are doing. probably doing a worse job though.","the blog post just sounded like people would think rx and others react synchronously and can't support scheduling.","i'm not suggesting react should use rxjs. react has its own challenges regarding hierarchy, composition, scheduling updates.","lol who said it was test-driven development? i was talking about testosterone-driven development.","didn't erik's online fp course allow use of js, php, scala, etc? should that course be renamed? :p","for nitpicking, we shouldn't use \"fp\" with js at all. but there are obviously benefits with an fp-like js style","rx has .map which is functor-like, .combinelatest which is applicative-like. can't deny some connection with fp","in a cycle.js application you won't find any usage of addlistener, it's hidden in the framework.","oh, a lot. not that many api changes, but it's more robust, supports many stream libs, has a devtool (in alpha), typescript etc","that happens when the ui is fully custom, but for third party components, react starts to shine.","which is how react shines the least and could be easily replaced by other virtual dom libraries.","is it true or false? that fn1 always runs before fn2 for every browser: settimeout(fn1); settimeout(fn2);","this is why i don't like it when people think i built xstream as an adversary to rxjs. i see it as complementary and educational.","taught english game music freelancer research assistant junior web developer research assistant startup dude web developer","just had my first \"it compiles, so it works\" refactoring experience with typescript today. the investment was worth it.","i use both atom and vsc on a regular basis and atom-typescript is no way near vsc.","code intelligence and typescript support. if you tried it a long time ago, it has improved recently.","try visual studio code with typescript. just try.","partial application of ...args","consider first css transitions.","it's easy to convert to rxjs v5, and it's decent to use together with requestanimationframe, but it's up to you.","i would consider flow of course, but typescript is just a bit more ahead in community and evolution speed. i have to choose.","looks like a good plan! cycle.js abstraction is useful for realtime stuff, including sensors from arduino etc.","typescript pros: you can cast x to any, and any to y. typescript cons: you can cast x to any, and any to y.","what i love about redux: it popularises the idea of reducers, which came to stay. they exist also in elm, cycle.js, choo, and many others.","just a lot of experimentation with rxjs. after the 3rd version i discovered haskell's stream i/o, which inspired v4.","sorry for jumping in out of nowhere, but cycle.js isn't inspired by elm.","father/siblings/etc is a canonical prolog example, but prolog really shines as a relational database plus inference tool.","multirepo problems: too many places for managing prs, issues, issue labels, notifications, updating workflows, scripts, etc.","i tried out lerna and formidable builder but albeit they were nice they didn't gain us much. a few small bash scripts suffice.","\"looking for crappy fast-food style pizza in helsinki. if i have to eat another healthy pizza im gonna eat my shoes\"","similar to formidable labs builder \"archetypes\", but built-in for npm. useful for monorepos.","npm package.json needs an \"extends\" field, like eslint.","typescript doesn't \"encourage\" classes at all. js has classes, so also does ts.","cycle.js today is 100% written in typescript, so supports it for real.","every stream in xstream is a bus, but the api is \"shameful\"","@ashtonwar cycle v6 was a naive implementation. we deliberately didn't care about perf. it was all about looking for the perfect api.","horribly slow to slow? in 19 alternatives it's the 6th fastest, faster than react.","you can \"get by\" with iife in js though.","every time i tweet or mention typescript, someone raises \"what about flow?\". *sigh*","i've been following a few frontend projects. i noticed the vast majority of errors are type mismatches, which typescript could have solved.","i use atom too. it's on par (although i might not use 100% of vim shortcuts). i miss the atom `jumpy` package though.","also typescript will struggle to make types for anything using proxy.","but since react use case is a smaller subset, they can optimize developer exp better.","i mean that react is great for a subset of a type of ui. and frp for another subset.","react is optimized to solve hierarchies of rectangles on the dom. if that's what your \"ui\" is. which is common","is it more because of frp or because of react?","gulp is decent. i like the stuff you build. was nice meeting you at dotjs. have a nice day","hardest part is building the chrome devtool infrastructure with 5 funky files omg.","almost the same thing happened to me. i ended up just getting on the train without a ticket. but i managed to buy on the train.","to mention a few other languages that use that successfully if i remember correctly: xtend, groovy, both for jvm","nice that you mentioned ?. at the bottom. i used that in both coffeescript and kotlin and love it. could be explored more.","ok that's decent, thanks. i'll look for something similar for browserify, it probably exists.","is there something like a c-like preprocessor for javascript and/or typescript? imagine a debug switch, and 2 different compile bundles.","do you know about \" typings\" field in package.json that works just like \"main\"?","i can't see any mess there. - dist: bundle for browsers - lib: js - src: ts - .d.ts: type defs - .js.map: for debug","transpiled js from ts is readable and clean.","the new version has about the same api. all concepts taught in the egghead course are still valid and relevant :)","there's something called expand() in rxjs just for that","thank you! join the gitter chat for cycle.js and we can talk more often :)","xstream is ~10x of rxjs v4, and most.js is ~200x","is that rxjs v4? rxjs v5 is a rewrite for ~5x performance.","it already supports jsx, it's on the webpage documented. i don't like react for multiple reasons. jsx is like the #7 reason maybe","some apis become too hard to get rid of. the web has plenty. python 2 vs 3 another example. it's \"possible\" but good luck. :)","i guess that's a naive thought. any real examples where that succeeded on a scale comparable to react community?","yeah, good luck getting rid of ubiquitous `this`, `ref`, and objects with functions. you can codemod fb, but not the web.","read it again, it's really an entitling thought that drives away the fact that the web/twitter is multicultural.","overly negative? gosh i'd call that mildly negative at worst. remember culture differences. the world isn't politically correct sv.","that's my hope with web components too.","@ashtonwar react isn't a view library. it's half a framework. or an opinionated library.","yeah jsx ain't e4x and if i remember correctly vjeux even had a blog post about it.","like typescript pressured to support jsx.","and jsx is not simply just a transpiling lang like elm or jsx. it's an adhoc feature wanting to be in js just for react.","well let's see. until recently jsx broke syntax highlighting in github syntax, jekyll, editors, etc. and commenting // etc","loved your framework! ps: thanks for the cycle.js mention, and by the way we're moving from rxjs=>xstream and snabbdom.","ps: only possible thanks to web components! don't let wcs die. they're awesome for easy interop!","matt it's not a competition, it's not code golf. ok? i love rxjs still. so have a great day and love you too.","no i didn't. you interpreted that yourself. just remember twitter is hard on the 140 chars...","rxjs (46 chars): let c$=observable.combinelatest(a$,b$,(a,b)=>{ xstream (39 chars): let c$=xs.combine(a$,b$).map(([a,b])=>{","vsc code intelligence is kick ass. i just need that with proper vim keybindings and jumpy, and my life is bliss.","reminder: follow account for exclusive news on cycle.js libraries, examples, and big announcements.","sure. js needs a standard type def language, and it'll help if ts takes that role while langs like flow and purescript interop.","yeah i get that. but typed programming for real projects requires library type defs and explicit annotations.","do you believe flow is not a superset of js? (disregard commented annotations)","yes, which assumes one of these two langs is the primary target for lib devs to target. ;)","i don't think that's at all a distinction, my perception of ts has been *exactly* \"typed js\".","it's all about type defs of libraries. more maintenance to do. it's like bower, i used to publish cycle.js to bower and npm.","don't we all benefit from package management of js being not fragmented? it's centralized on npm.","but they're not that different and are \"foundation\" projects. like git vs mercurial. like npm vs bower.","and typescript is way ahead in adoption. more ts features will come, as they have. what's important is ubiquity of type defs.","type definitions make the toolset useful. in that regard it's counterproductive to have two.","flow has some neat things, but the most important feature of \"a typed js superset\" is type definitions of libraries.","look, you can call an apple whatever you want, it's still a fruit.","flow compiles to js, but it does so by stripping annotations. it has a grammar. it's a language.","proof: every js code is valid flow code? yes. hence flow is a superset.","rxjs and bacon are substantially different. flow and ts soon won't be, ts may get nullables.","and even in library land, merging is smart (e.g. jscs and eslint) when projects are very similar. also redux + flummox iirc.","languages are huge projects to advance compared to libraries. and diff between flow and ts is not like diff rxjs <==> bacon.","i'm tired of \"what about flow (lang)?\" comments. it's counterproductive for the js community to have 2 very similar typed supersets.","well, both approaches are fine. people are different, some look for patterns.","pointing out crappy java types is not going to help the world adopt typed languages like ts, elm, purescript, flow, etc.","i think the whole conversation started from \"typescript brings more reliability to js\". not that java is reliable. :p"]