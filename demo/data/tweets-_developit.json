["totally. it wasn't something i'd scripted so it was poorly worded :(","yikes, definitely hadn't meant to offend anyone. it was supposed to be a joke about people loving jsx too much. my apologies!","hmm yeah. code cache based on eval'd string as key maybe?","totally! i'm giving a preact talk at 2:15.","preact-router is like it's weird little cousin!","some downsides: - render of the parent will always render the child - no representation in devtools","cool tools for a hot trade","technically it's cheating though cause i control esbench","i built a soap client using jsx, ama","nah this one doesnt actually do jsx. operates on the factory methods.","wouldn't be abuse, i actually think that's a great thing to get out of code and into config (package.json)","was thinking of the prop-types usecase: it's literally a no-op version of the library.","depends on the module currently. usually either all are bundled or none, the field just denotes module type (esm vs cjs)","yup yup. i think it'd be straightforward - use production if doing a prod build, fall back to module, then main.","most libs on cdn's are mirrors of npm (unpkg and cdnjs both do this). if it's on the cdn it'd be in npm too.","a little contentious: \"module\" is the es modules source/bundle. if you are bundling your whole app via es modules you'd use it.","pitch: \"production\" main field in package.json: \"module\": \"src/index.js\", \"main\": \"dist/preact.js\", \"production\": \"dist/preact.min.js\"","iirc safari on osx has similarly intense messaging when setting a different browser as the default.","now we just need jsx eh","true! i guess boilerplates are like the \"view source\" of build pipelines","supposed to be href=\"javascript:\"","correct, preact would just use promise.then if its available like it did before.","i will get you my autohotkey for this. fixes nicely. also remember fn + arrows ==== cmd + arrows for text","yup, preact 5 used that. state changes aren't necessarily paint producing though.","preact 8 switched to a simple settimeout.","it falls back to settimeout (preact did this until 8.0). the polyfills usually use mutationobserver or something similar.","debating going back to promises for preact's debouncing. thoughts? seems to improve perceived perf.","you guys are crazy with the tech updates haha","maybe after december? or they changed it or something. definitely free haha","maybe after december? or they changed it or something. definitely free haha","yeah. i wonder who is doing their videos now? i remember the surface studio ad was also mindblowingly good","i haven't looked much into windows s. tbh tho i've really been loving the store apps. store version of onenote is a+","works in any react-like lib too","this is actually really slick. do you think it's worth publishing it as a babel plugin?","i've been thinking about making a neat little browser of solutions","that'd be a nice babel plugin - babel-plugin-transform-refs-to-linkref","one important thing to add though - the inline arrow function ref breaks purecomponent.","(i'm not theorizing here, this is literally why i removed string refs from preact)","no, you pass the component instance to the function.","not sure about react. i believe that is the case in preact.","ooh, that's nifty. not sure i've run into a case for per-app volume yet, but i'm glad to have this in my back pocket haha.","i was using two solutions for this on the mac depending on the app - airfoil (admittedly not its intended purpose) and ears for chrome.","was reading about uwp apps last night. under-advertised imo, it's kinda like a built-in electron","that's why we're adding `preact/debug`","what if i have this though? \"foo\": \"uglifyjs -m ${npm_package_main}.map or whatever\"","i'm putting off writing the ahk script cause i've burned days on that before haha","revelation: at least in vscode, the fn key is fairly closely mapped to command!","tip: prefix your npm scripts with `cross-env cross-var `. also, use `printf` instead of echo with a subshell, it doesn't spit out a newline","a little awkward to have that running when i do development though. presumably they are mucking around with page structure :(","indeed. key warnings are off by default in the upcoming preact/debug :)","seems like the whole app is 137kb?","it could benefit! would cut your app size by around 30%","idea: use preact too","weird, 100% assumed this was \"responsive web design system\"","recommendation: just use the mobile app. it doesn't do as much but it's a little less jarring.","i keep trying to perform a \"pull to refresh\" gesture on the twitter website","also at this point the hardware available for windows outclasses what is available from apple.","still getting used to emoji input on windows 10. i recall a neat electron-based app for inline emoji input... anyone know the name?","i have a few thousand lines of ahk scripts but i'm trying to avoid doing that :)","lol maybe... i do think i'm sponsoring preact though. not sure if thats weird","cant decide between hyper and cmder for a terminal app. both seem pretty good, though hyper is much more configurable...","nah, that page is horrendously incorrect. both are virtual dom libraries, both diff. their approaches are actually very similar.","fwiw there is a web browser app for the watch. would like to see first-class support for pwas though :)","lol no it was a joke, he's using preact to its fullest :)","its like a clean break: i can't procrastinate at driving, it just happens. helps to reset i think","youtube, i'm a google music user :p","4. write lists. i'm still working on this one because every time i write a list i build an app to write that list in. recursive problems.","ok so in trying to be useful - here's some techniques i have found at least somewhat effective in coping:","bet you could do this with a 700 line package.json","adding it to preact too!","we have a fairly intense chunked build and just got converted over to webpack 2. will give this a go :)","kinda sounds like preact ssr haha","most people are using community solutions for refs, purecomponent and createclass at this point though, so the need is eroding :)","mainly string refs, live onchange, createclass, vnode.prototype.props, purecomponent.","for sure. would love to figure out how to get enzyme+preact working magically","might be a way to do this with an automated npm publish, subpackage, or entry module.","one is made by apple","we're looking at building a component that does the job directly though. would be even easier with inline styles.","we are using cq-prolyfill for all of our stuff :) we use css modules though.","it actually has always been in preact because it's how empties are handled (null, boolean, etc).","good to see string returns are supported in react now too!","yup yup. we've been using this for about a year in both webpack 1 and 2. works surprisingly well.","yup. mostly in docs i mean. it doesn't require any explanation since it's obvious what's going on and built into the browser :)","i use that api in all my examples :)","eg: old version of instagram app won't work if they change the api","that's true for any client-server app though, not just web.","right, but then you have out-of-date apps. i'd prefer to update based on my usage patterns.","i wonder if we can save power with pwa's? (since there's no automatic background app updates?)","if you're looking to build a babel plugin, i'd love to use it!","get your son to write some preact components","write talks, play video games, invent stuff (ex: app-controlled raspberry pi photo booth), try to think of worthwhile ideas","that's code for playing zelda","would be neat if it was possible to separate it from react entirely.","loop me in, would love to have an api for this.","trying to emulate the apis in preact-compat leads me to believe this would be quite difficult, heh","clarification: it's built with preact :)","^ because of prop-types being universal and preact 8 exporting createelement","let's get you a preact shirt then","that's because people develop based on browser market share.","pwa's don't require new browser features, they leverage them. \"progressive\" implies resilience, not dependence.","odd. any chance you're on an older version of preact/preact-compat?","appcache is reasonably decent and it's been around for like 8 years now. makes a nice fallback imo","fwiw, i prefer \"pure functional components\" and \"classful components\"","this is the hardest part of software development :p","oh nice - so maybe there's no need for the child components with shouldcomponentupdate:false now?","afaik this is only way to kick off css parsing during document parsing, right?","- your lib likely already works out-of-the-box with preact-compat.","totally, that's what i love about this plugin - extend the api but do it statically. awesome work.","fwiw, h() is aliased as createelement() in preact 8.","woot! make sure to check things out in older safari to verify you're using the supported apis","do you necessarily want to connect the two? it supports the same history modules as react router, could use one of those.","react-motion, maybe simplified via data-driven-motion.","no, bundling the implementation of proptypes into react makes react less modular.","fwiw, think about module boundaries: a view library likely needn't handle validation.","apparently only the normal moto g is available in canada, not the plus. still decent though.","they do, the but someone seems to have changed the proxy upstream in cloudflare to point all .js files to an adware installer","random thought: i think the unpkg issue might be the largest scale script injection ever?","spread the word! just remember it's only a polyfill for fetch() - not the response or headers constructors.","nothing public yet, but i'm actively looking into options for compiling templates (vue and others) to preact components.","i think it's great! would like to see more compatibility and cross-pollination between the vue and preact communities","totally. i have found the stricter config validation in webpack 2 to be really nice for preventing footguns though!","yup! might duplicate it in (or move it to) preact itself.","lol i think you can do this as of 8.0 by importing `preact/src/vdom/diff`","a lot of the issues were me trying to apply webpack knowledge without having read through blocks.","does anyone know if provideplugin can be applied only to files in src/ ? asking for a friend","webpack-blocks. it's a nice idea, just cost me like 6 hours today :(","kinda debating it. i used to run a stripped down web chat that i kinda miss tbh","webpack i'm good with lol it's more the nice looking abstractions, have to relearn stuff.","if you're used to configuring webpack manually, i recommend not trying an abstraction :(","switch and test in development. also use an error tracking service like","oh i guess it happened","odd they didn't use npm.i'm/proptypes","i'm using a nexus 5, everything is slow except preact on this phone (haha)","we can! i couldn't get regenerator to work in jsfiddle just now, so i turned off transpiling and it just worked","it's already written in preact! just hasn't been touched since i launched it","killer feature of preact 8: aliases are now built in","yup, afaik it works similarly to jsx in that regard. the rest is just stock preact.","if you're going to jsconf.eu i'm buying you a beer","ahhh i should have injected that to prove it was a full component and not css haha","absolutely. i'm dreaming of a parser pipeline for html components with a pluggable backend.","fwiw i think this space is super interesting. i am currently investigating non-jsx interfaces to preact.","it was bad context - ended up being because the code want running in strict mode.","there are so many amazing apps built with preact now i can't talk about you are probably using a preact app right now!","the html output is consistent though, could easily workaround with a regex replace","ah yes. alternative would be a side-effecting component that moves the nodes into sd","yup! if your performance is tied to rendering, try preact's requestanimationframe async option!","i wonder if the test utils api could just be emulated on top though (haven't looked through the code yet)","it could be a rest api in front of me typing, like a mechanical turk","lol like people pay me to golf their code?","not sure if the api is identical but it's a huge step towards that goal for sure. i figured you'd be interested haha","but but perhaps really eager apps can try.. probably releasing early alpha come tomorrow","i wanted preact 8 to be 3% faster than it is, but it's taking too long to squeeze out those optimizations. sorry everyone","i was testing the post-rollup post-uglify build, and i had set rollup up to strip it.","it's appended to in 3 places that all require it to be reversed","it's a script that shows a link to github, not part of the demo at all.","followerbudgetwebackplugin","i'm targetting web (via karma)","i can't stop doing this... pausable renderer eventually aligns component tree","i don't think it's possible to use benchmark.js with webpack. maybe i'm crazy? can't seem to get it working.","i weigh effort vs payoff. some code doesn't end up being worth unit-testing (high effort for low value tests)","+1 for d3 v4, we're using it just for math and rendering intense svgs via preact (finance charts)","if you have the option, generate a revokable application password (google apps/gmail allow this for imap clients)","paul's request enables async components terrifically sorry it was just too good","gran recommended, gran approved","i keep going back to 's material components repo and re-starring it because i am so bloody pumped","the trend is even catching on with millennials makes me p happy tbh","picture react, except any crazy typescript","preact: rendering elderly androids can tackle.","pinching react's excellent abstract components tighter","probably react's explorer abstractions clearing text","pretty reasonable emulation assuming classful techniques","you're giving me devilish ideas man","though in react, that'd be vnode.props.props, which is hilariously poor :(","idonno there's this whole redesign thing going down...","ah it just internally makes the component renderer async. subtrees get updated in ric","the decorator syntax is enabled by babel-plugin-transform-decorstors-legacy","actually its not specific to preact at all, it's a standalone lib and works with any react-like.","i really like technique, glimmer has since great ideas!","i used the one that worked in a loop, the others would have invalidated by hoisting the code under test out of the loop.","i guess the tweet is deleted? i was not intending to take a particular tone, genuinely interested in techniques.","gosh no, that would defeat the purpose. preact is minimal, it will never care about layout and stuff.","javascript has changed a lot over the past few years. codegen is quite often slower these days.","it's still js! just gets desugared to a function.","agreed haha. got some serious love for fp in preact 8 itself though.","totally - it makes me happy too see that kind of convergence. easier to cross-pollinate ideas!","original demo was from glimmer, i just dropped preact in and played with some options.","not surprising, svg property animation is not as well optimized as css transforms there","it does? these come after the component constructor, should already be there.","i actually agree (on easy/simple in general), which is why i'd never bake this into preact itself. just experimenting.","setstate() updates state values immediately in preact (a very subtle but very intentional difference)","right, but its sitting atop (and not circumventing) a known api. not for everyone, i get that, but it is quite interesting.","lol. think of it like a shitty mobx for component state","not even! it's just a getter/setter pair :) so the browser support is fairly good","i use and love homegrown flux :d could always just throw preact-compat in there and migrate slowly.","you might be interested in an idea i've been sitting on: a \"lite\" version of preact-compat for modern compat","hmm. i heard rumblings of one a while back, otherwise any of the react ones would work","they had nothing to do with preact, were injected by create-react-app.","thanks! it's extracted from preact, just seems useful on its own.","yup! preact-boilerplate is a more common starting point for people.","that makes me happy","it's in the jsx spec.","8.8kb was over half polyfills from create-preact-app. real size was 3.9kb.","often i'm doing it to save a bunch of history in the web inspector console for that tab haha","yup. another case i hear a lot is if only a few parts are react-ey, weight harder to justify.","means diffing against server rendered html","i saw! made me happy","tested out dropping preact 8 into a complex app. difference was legit striking. it fixed a recycle issue, removed js bottleneck entirely...","...but there are some approaches that meld client+server that i find really intriguing, so i'm ideating :d","i've typically not invested much time in pushing for new ssr approaches because it's not my thing","i can't even beat my own ssr bench honestly, preact-render-to-string is elusive black magic","they do! i've been looking at it today i'm hoping there's a way to do it without preact-compat too.","you are going to like this then... no compile and no separate codepaths","stateful/async ssr in preact is making me rethink stuff. ssr can be a *lot* less painful than it is right now. less pain = more usage","true, though i think nodejs is just a lack of attention (looking into it) and the other two are a lost cause (anticompetition)","i think google has just marketed their solutions atop the platform better. we had brick and x-tag, both were viable but unpopular","they are growing more and more similar tbh. preact is inherently tied to the web, it makes a lot of sense.","it's a weird thing: i want a great low level api, i just want to code one level up from it at this point.","shadow dom and custom elements combined with vdom seems like a nice mix. wcs required invention to avoid innerhtml junk","polyfill was a no-go given my size constraints. my wc usage got cut back when i went minimal (crazy platform project ended)","it's funny though, i love web components and used them prior to preact - i think they can still take off","totally. there's an art to building primitives - a lot of future looking and making of bets haha","i don't think very many people use create-react-app with preact, that's just what the article did for simplicity.","over half of that weight is polyfills that have nothing at all to do with preact (they're from cra)","depends if you include it in your initial js payload. for a popup, i could see that being bundled into a lazyily-loaded chunk.","perspective: i work on a large site done w/ code splitting and our initial js is 30kb.","its more a preact emoji ;)","cost of metaprogramming","i believe it's also at least partially jake approved","me and my nexus 5 are intimately aware of this when using many apps","in general, i want to rely *more* on the web platform (shared, standard) and *less* on libs (invented, ip). common goal, or am i on my own?","yes, just mitigates 2nd view time. gets better with shared sw (can't remember the official name but client-side cdn)","probably quite unhealthy, but honestly i don't see anyone else pushing for it and it disappoints me.","really trying to make preact even friendlier. fighting my inner desire to surprise people","create-preact-app includes 4kb of polyfills","i'd say offer it up as an alternative? make it clear you understand the existing pr","i choose to interpret this solely as a preact pun","indeed. i'm happy fiber is a thing, but it does nothing to address size. render perf is only one metric","what does that have to do with preact?","dude we should talk! i've been thinking about making a layer like this on top of preact...","damn, thanks! appreciate the good vibe","i am a little tempted to put a preact sticker on my car","ah - so this is why we're dropping `class={{ xx }}` in preact 8 - it can't really account for all the cases you'd want","we don't even know which modules are going to be used until build time or even runtime. it's crazy complex.","i think the react component model really helps here though: components are always instantiable. just gotta avoid singleton deps","i just found a way to boost preact's ssr performance by 25% ...while enabling async/stateful rendering","i used to pride myself on how much js i could run on the client and still get good perf. long time ago :p","there's definitely been a bit of that. stateful functional components, async, etc.","that way preact-compat is just glue, not some massive bolt-on thing.","that's where `preact-compat` comes in. as react drops old apis, preact-compat has room for new stuff.","making a half-react would be a bit of a poor goal - preact's value is in its focus.","indeed - was this change? i swear it used to be node_env.. maybe i'm thinking of __dev__","also, react uses `node_env`, not `process.env.node_env`.","alias:{ react: 'react/dev', 'react-dom': 'react-dom/dev' }","how so? it's a webpack alias, configuration like anything else.","this is basically ahead-of-time compilation of flags, and everyone apparently loves aot right now","wouldn't it be better overall for cra to simply alias in dev builds rather than setting flags?","better analogy would be someone being happy to find the clothes cheaper online. derision not implied","these people are running webpack in prod mode but getting a dev build.","hmm - i would argue the default being a suboptimal build is the real issue.","yup, that's why they're not in preact core","nah i'm incorporating the changes into preact now ;)","yup, react router v4!","hmm - looks like you're require()'ing your frontend from a webpack config","oh wow, this is awesome! should work with preact out of the box.... demo time ;)","idea: transpile html in template strings to hyperscript (as aot step)","empty destructuring is supported by babel, it's just trying to call the runtime helper and that doesn't exist.","linked lists are surprisingly expensive in js","yeah. i was definitely thinking of infinite scrolling as the primary use-case for this technique. computing a start offset.","yup yup, read through hyperhtml last night","sadly, i have to go through a cumbersome process before releasing code. diff is top-down and naive, mostly looking into lists","lol this is a fairly naive diff otherwise, just i wanted to see if i could make vdom faster than insertadjacenthtml().","yeah that is a fairly massive issue. hoping html modules will help, but i'm not up-to-date on it.","i know that's a tooling-oriented approach, but it's a pretty awesome result.","hmm - we use markdown documents with custom elements for this, automatically build all of them with hmr.","at the time, es6 was no different than typescript is now - hypothetical at best haha","i think i got comfortable with build steps because i adopted es6 long before it was even starting to hit browsers","will you guys adopt script type=\"module\" once it's more widely available? if so that makes sense to me.","it feels dichotomous to work with evolving web platform features like wc's but not use js features like import.","isn't html imports basically proprietary now that the standard is dead?","no - define() is async in dev but sync when bundled.","right, but async in dev and sync in prod is a fairly major disparity","would know better, but i wonder if this is possible in webpack?","that is some hardcore devil's advocate playing then :p","plus i don't recall there being a solution for hmr, which would slow down dev","i follow, though that seems to present a dev/prod parity problem too.","i'm not denying it's possible to run without tooling, just that it's rare.","none - i was saying that preprocessors are build tooling.","yup yup. i think you're right about the try, just wasn't sure if webpack messed with it","i get that not everyone is using a transpiler, but are you using raw css and injecting?","yup, that's what we used to do. r.js sortof invalidates the primary argument for amd though (no tooling)","as with systemjs, i don't have anything dogfooding those formats","ah - was thinking more when it gets wrapped by webpack, but maybe it'd strip the try","for context: i was an amd/r.js user for many years and work with people who still rely on it.","you're missing the runtime helpers for that method, likely due to how your babel is configured","lol i couldn't decide whether to keep them in or not. this would really be build output though.","understandable. i wonder though, are people with legacy builds generally using small modules?","now that we have things like webpack and rollup, i think it makes sense to prioritize the module formats by efficacy (es modules & cjs)","i think these things pushed people to a more tooling-oriented approach - because we already needed bundling, we got commonjs for ~free","because of the increased complexity of static analysis, it was a while before we got good optimization and bundling tools.","it got us async by default! however, that gave us all an excuse to ignore the too-many-scripts problem, which lasted quite a while.","lol i know i've written 3 amd loaders that i can remember, probably more","i had forgotten why i never blog. now i remember","more meant bundling. typical issue was most often 100's of unoptimized modules downloaded progressively.","that's what spawned this thread of thoughts from me - measuring umd bundled code is not very representative of cost","i've never used systemjs. does it have much of a following these days?","agreed though, and webpack fully supports optimizing amd modules last i checked.","the issue was more that you can dynamically invoke define(), which makes it difficult to statically optimize","nah, my initial reaction was that it'd be larger but in testing it's usually smaller. i'm a fan!","i liked amd for a long time, it just was nearly impossible to implement good optimization tooling around.","agreed - i think that's my preferred approach now, i did some testing and it's generally smaller!","react-like virtual dom libraries","react lite? there are a ton of vdom libs but generally not aimed at being compatible. more \"similar\"","do you assign to a variable outside of the wrapping closure?","had tried that - i think it produced a larger size after gzip since it's not already in the codebase","agreed! i was a bower fanatic for a short period of time. then npm got amazing stuff like 's unpkg","this spits out your dist/foo.js. in your package.json, point \"main\" there, and \"modules\" at your src or an esm bundle in dist.","this pains me daily. also the app is not doing so hot on older hardware like the n5 :(","would be curious to know if this be suboptimal when bundled via webpack. i think it should be fine? /cc","with that slowdown hook you should be able to see what's rendering in react devtools","you can slow things down to debug: import { options } from 'preact'; options.debouncerendering = f => settimeout(f, 500)","generally caused by componentdidupdate() invoking setstate(). there's a lint rule in eslint-plugin-react for it","not yet! i haven't actually published the code yet, it's a jumble of hundreds of commented out alternative implementations haha","i also found your point about rendering skate components via preact really compelling - one copy to do 2 things","i'm maybe not the most sane person, but to me there's a balance at play on the web that is too often overlooked.","champion new stardards to make it unnecessary. i don't want to build a flawless lib, i want to build a pragmatic one","happy it's helping people get the lower level details :)","createelement is supported in preact 8 :)","preact 8 is showing 50% perf gains for some common cases. this is going to be a crazy release...","yup, preact supports context just fine!","yup, just ends up having poor browser support haha. also i'm lazy :p","not used by preact core so they're undefined","with the strip proptypes babel plugin it just works with no modifications","i do love me that api. use memory history all the damn time.","the number of production sites i see that have broken navigation history is alarming. do people find the history api difficult to use?","pragmatism seems to always win out with js","we also use an assignment that is somewhat real-world, but stipulate not external libs/processing can be used. js/html/css only","gandalf appearance","if the api is good (i'm assuming it is) maybe an alias module. i've been looking into better hmr.","thinking alias createelement, strip proptypes, alias children.only. that's what i do for preact-redux.","yeah with corejs, regenerator, url, compat and proptypes stripped that'd be one lean bundle","wonder if we could try raw preact (no compat)?","it's just using preact-compat, still very much preact though","yep, just not as easily. preact diffs against the dom, so it can handle slightly mismatched html without breaking a sweat","yup yup, i'm still using marked for the preact site. i wonder if there are more ways to cut down ;)","hmm - i didn't think it was, thought you could just use `preact/aliases` (seen it done somewhere)","it's crazy, i hadn't though of that as a use-case when i originally created preact, but it makes so much sense.","that makes me happy","recommendation is still basically \"don't rely on it in app code\" more or less?","in the works! we use a combo of preact-jsx-chai, preact-test-utils, normal rendering into undom/jsdom, etc.","i like that approach. local until some specific need to be shared.","i'm pushing for context to just be automatically passed down. preact does this and it's working very well.","\"sortof like redux + redux-thunk, but actions are events and it's under 300 bytes\"","we're using component state for most stuff, but need a few things shared like user preferences, etc.","@nomisweb super interested to hear your experiences, share away","understandable. though since preact has the same api as react, it's not really another framework (in terms of things to learn)","ah yeah, have to compare to both react/react-dom since preact is one package for both. no harm done, just wanted to clarify :)","its time to move beyond jsx h(thumbnailpreview(basicslider))","interesting thing that came up today: only necessary for context in react because contexttypes is required & static.","see i knew that because i wiretapped your microwave","tree shaking is awesome, but i think people would lose their minds if webpack stopped supporting hmr :p","thinking about using embed.js for something - is there a way to enable only certain transformations?","redux and react-redux is around 5kb. it does a lot of stuff so most people can justify the 5kb, not not everyone","in a world where component methods were basically pure functions hanging off an instance, it'd be nice.","hmm - that's an interesting one, might be a regression in the version of preact running the repl.","not sure if this makes more sense in a preact cli package?","current biggest barrier to better windows support for me is how painful it is without a device","yup yup. i'm looking at dropping symbol usage in preact entirely because it's too slow","lol yeah i picked up on that we're working on something along those lines for preact as well.","parent -> wait -> child. rendering null still boots the component.","i know that, preact uses this internally for async rendering. it's still two renders though, there is a cost.","just forces everyone to have both sync and async apis, which are inherently coupled. easily solved via promise.value()","let p = promise.resolve('bar') componentwillmount() { // pointless render p.resolve( foo => this.setstate({ foo }) ) }","i propose we add a new api that allows getting the resolved value of a promise if it's available: promise.value( <promise> )","for most of my stuff i'm super lazy and just use css animations and/or transitions though.","react-motion, or 's wrapper around it, data driven motion.","yup! preact gives you a programming model. it's likely smaller than any template engine anyway.","oh, for ssr there isn't a ton of difference. you can think of preact-render-to-string as a sort of template engine tbh","using a template engine really means using innerhtml, which means blowing away the dom and rebuilding it for every update.","want to open an issue on the preact repo? happy to discuss there and prioritize a fix.","very much appreciated!","yup, and moreso for lists of components. for dom changes it's often best to add/remove the last item(s)","most i'm aware of are slapping graphql in front of rest. seems a nice fit.","in that regard i guess the only material difference when using index keys is just that you build up a keymap, which has a cost","that's one difference yeah. devs paying devs is beautiful altruism, but companies paying projects they use is ideal.","i think he was talking about the internals of the library","google says grandads is 40 minutes round trip. it knows because i keep going there to teach it","createelement isn't exported independently, can only get it off of react (lib/react). saves 20b.","lol maybe just a google hangout looking at me typing","not sure of the timing, but they say it's structured how fb structures their internal codebases despite being oss","it's never my intention to spread misinformation, rather my react point was about being future-proof. what do i know though","there are tons of great webpack and rollup examples showing the value of the technique, but it requires esm all the way down.","internally, react's codebase is not actually commonjs - it's a fb custom module system called haste because that's what fb uses.","when react ships a normal bundle in 6 months, the named imports example i shared will be useful.","i did too, originally wrote preact to understand the fundamentals","heh interesting - i read your tweet wrong. arrow is more expensive transpiled and less expensive native.","when running without a transpiler in a modern js engine it doesn't create a closure","existing huge react apps or business app supporting ie9 as a priority (event differences)","happy to go, just flights are absurd","lol i feel unfathomable guilt when not devoting my time to oss","sorry everyone for sucking this week, was finding it hard to focus got lots of preact stuff done wednesday, but not yesterday or today.","plus 3 years in, react's model has proven its staying power.","async scripts get lower resource priority, but if that's what the app needs to render you want higher","yup yup, didn't meant to imply a one-size-fits all solution. interestingly, i've found sync scripts better for perf in cases","we are killing it off :p switching to go microservices and a static client.","right, i meant sync script tags in general are something to be avoided","hmm - that'd halt html parsing though","can't control that! haha. also for that i can recommend `bundle-loader?async` - does the same thing programmatically","definitely a number of play with though. our webpack config spits out gzipped chunk sizes so it's easy to tweak.","vue has a community, react/preact/inferno all share compat. marko is its own api, doesn't cross-polinate w/ react.","right, but i think that's a super reasonable tradeoff. plus then it's free when devtools is closed (no sourcemap)","i find myself split - i get the value of dev hint warnings, but i just can't justify the cost (ever)","preact-jsx-chai. if what you meant was that preact doesn't yet work with enzyme that's quite different.","that's because react is not an es module. point is to avoid bad patterns.","i understand your frustrations, but i think these are pretty minimal issues. why not submit a pr for csstransitiongroup?","did you try any of the test tools for preact? we have shallow rendering.","that is what was saying splittable/closure compiler do","replied to the other tweet - object in js are difficult to statically analyze (prototypes, mutability, etc)","yup yup! preact actually exports it too, i'm looking at allow `preact.createelement` in version 8 if its tiny enough.","it's probably self-serving, but that's one of the reasons preact uses h() - helps show people how it works","super clean :) there are also babel plugins to auto-import the jsx pragma.","hit me up, sam was working on a raw closure compiler thing and got it down 200b","nope! can change the name: in code: /** h */ or in babelrc: \"plugins\": [ [\"transform-react-jsx\", {\"pragma\": \"h\"}] ]","our tech at work is all named after that game :d","you might see this folded into preact-compat though, i gave facebook access to the \"proptypes\" module.","regarding the code, this just seems like common sense to those already doing fp","npm package is sadly taken :(. wizdom is a little weird","componentdidmount","bind() does not create a new function in more recent js engines, it creates a lightweight proxy.","you might actually even be able to do this via preact/aliases and avoid preact-compat altogether","atom, with the one dark vivid syntax theme and babel syntax mode.","totally. i jumped on the tranpiler bandwagon super early, but i look at the generated code for everything i do. it's the real code.","totally. i want to use this to build my next app lol. \"color scheme based on my front door\"","i'm going to build a camera app now","link? preact events already work with ce and sd, attributes there's a pr in for.","yup! definitely could/should be modified to use this technique.","yes. it's far simpler and supports full page scrolling. relies only on the browser's own offset calculations.","yeah raw vdom can do this via shouldcomponentupdate pretty handily.","that store is the devil, want to give them all of the money","take time off from preact development tonight to build a product?","there's also the (lovely) option of complimentary/wrapping projects. preact-compat is one example.","problem is wider than just module usage, applies to software development as a whole. choice is hard so we avoid it.","it's much easier to solicit & accept contributions when a codebase is tiny. less things for first-time contributor to overlook.","my decision to release tiny js modules (preact, mitt, unfetch, snarkdown, undom, etc) is partly to avoid maintenance burnout.","building a source code editor in web tech is super challenging","selection rectangles can be beautiful, just have to integrate them into a design properly. nice to see that proliferating","babel-preset-preact?","learn while you build, it forces you to be pragmatic.","heh yeah. is really doing good stuff with this idea, awesome for people embedding components into existing sites","of course not, just better selector grouping perhaps. remember, gzip has a large effect on css size","an angular app loading a native app running a react app... 2017 is craaaazy","seriously love that it's just another component. i hadn't thought of this!","that location for webpagetest seems very slow. maybe cf doesn't have an edge node nearby.","i'm still seeing a 100ms overhead, but remember that may be h2-related","man that just seems crazy to me. i can't think of any other platform with similar constraints.","its like, the css of languages obviously next to css","think it's js related?","ooooh nice site and nice app. hadn't seen this yet haha","never heard of react-docgen, but it looks like it would work with preact already","nah. i had a fork that used dangerouslysetinnerhtml on the server","heh yeah - i googled for \"optimal cloudflare configuration\", found nada","synacor (a huge preact user at this point)","patreon struck me as \"i want the thing you're building, so here's $20/month\". maybe more org-focussed","the disparity between how much we need preact 8 and how much time i am able to spend working towards preact 8 is disheartening.","good pun prefer codemirror tho :p","i only use text interfaces embedded into web views","that is very odd. i don't recall seeing anything for that in react.. maybe it's re-assigning the source?","tbh though i would suggest exporting specific names wherever possible. hard to know what \"component\" refers to :)","either export the component as \"component\" or as \"buibutton\"","i've never seen an export done like that. problem will be that <component> in jsx is h('component') (a string)","jsx component names need to start with an uppercase character.","the prevailing expectation seems to be that npm modules are always es5 + commonjs.","kinda makes me wish esm was an extension like jsx. just independent, opt-in","true, and i agree. i just don't see see why we must only publish es5 to npm.","why not es2015/cjs then?","i'm suggesting we should expect npm modules to be written in the current version of js, not individually transpiled to es5","can use commonjs with es2016, it's just a language superset.","only thing i would change is to have this `babel-loader` bound only to babel-preset-latest, separate from the loader for src/*","remember: there are actually tons of untranspiled es2015+ modules already on npm b/c node 4+ supports it","right now publishing modules to npm is a transpiling nightmare, adding more formats is a no-go for me","right now publishing modules to npm is a transpiling nightmare, adding more formats is a no-go for me","that way a consumer would just apply babel-preset-latest to thing with a \"module\" entry, no ambiguity.","drawback is fairly major - i would much rather make module/jsnext:main synonymous with es latest","ah - i didn't mean cold cache, meant vs data-over-the-wire + client rendering for subsequent navigation","im pretty happy with how this account is shaping up","would happily use it as my main text editor. actually looking into it.","only uses createelement(), insertbefore() and appendchild(), no innerhtml","t'was a \"cross-device cloud app platform\"","higher order component composition... provider... components yes","yup yup. h() isn't recursive, but our use of it (jsx) is for sure.","ohhhhhh right right you just mean limiting it to the function reference instead of arbitrary jsx","compositional is just a parent that renders a component at the root. cloneelement just 4 passing props","most pfc's could be expressed this way, and since it's just a basic html compiler it'd be customizable","the idea would be to implement stateful/lifecycle'd components as we do today, compile ^ those to pfc's","yup, you end up having to have the hoc implement its own shouldcomponentupdate type thing before running mappings etc","render callback has one huge advantage: you get to remap post-hoc props into your child component","<provide> data fetching apis and then bind components to them via a hoc w/ prop mapping","for sure! i think maybe an npm plugin (= bash alias wrapper?) could make that happen","an api to look up the opencollective for a given npm module, or the reverse","i used to tell people to go `npm install gollum` so they got the point","top-level only would be good. maybe do `npm ls --depth 0 | grep my-package-name` ?","any dep can run arbitrary code during install, we've just been relying on good nature haha","agreed that it could get out of hand, but remember - the option is already there, has always been there.","there's discussion around limiting it to only manually installed top-level libs. `npm i` only, no child deps","worked on that technology for like 7-8 years total, was definitely insane","my \"online operating system\" side project, turned into a cross-device consumer app platform","hmm, yeah that's a good point. it would exclude devdependencies due to the nature of npm install","i think an opt-in way to see what you're relying on would be ideal. link your npm with an app that tracks dep use","lol google ads for tmux adblock plus for oh-my-zsh","i really wanted to get that zinger in there. itinerant was the first time i cared about software beyond the code.","i need to do a much better job of both promoting the opencollective, and explaining why it benefits people who rely on preact.","i flipped burgers and then was homeless for a bit before getting my shit together haha. discovered software development late.","similar to `npm repo xx`","dude: \"get a job!\" me: - full-time dev since 19 - founded & sold company for $1.8m at 23 - works nights/weekends for free freeloader!","i love the idea of being able to say \"we support our stack\". helps future-proof tech decisions","i contributions in the form of code/docs/tests - they make my life easier. people who can't do that can donate if they want.","also the 'get a job' argument is silly - getting a job takes away the time that would be spent improving the oss code","writing code is an incredibly small fraction of the effort involved in maintaining open source. it's giving away time","similar to an app store rating nag, not too annoying","donation banner after npm install:","ooh, now that's bold! maybe for a preact cli.... hmm.","i'd still love to be able to remember things like others can, but yeah it's less important for work.","nice part is that you can swap the markdown parser in 2 seconds. also can always drop down to html within md :d","that's my best guess, yes. i've written & maintained massive codebases in the past and managed, with some difficulty.","happy to! hopefully people don't find these annoying, i just thought it might add some context to explain why i do what i do.","if i had a lesson for anyone struggling with being both human and a software developer, it would be to embrace your differences.","not sure. react isn't es modules, might not do much?","yeah just thinking innerhtml is the pain there. maybe a setter that walks the tree","the markdown part is silly, i admit. but controlling vdom from html is pretty useful.","coolest feature of preact-markup is that you can register any component as a custom element. basically ce for vdom","i use it to render preact components - just run the output through new domparser().parsefromstring(x,'text/html')","though tbh it'd be nice just to have a sugar for component local state, my other demo is likely better there.","my hope here was to decouple the state container internals from the component that relies on them","i am! now that there is a pr in that updates it to es2015 i'm happy to hack on it.","nah i was starting to try to build a full sd polyfill. gave up","i wouldn't suggest this for use a general-purpose markdown library, but rather an option for constrained use-cases.","for sure not perfect. i recall this doesn't support tables (can't remember).","yeah they were hotlinking commonmark. i can't remember the numbers but it's a crapload faster since it's doing less","what would a template-driven preact look like?","every company already trusts their devs to understand what is private and what isn't, for things as simple as bug reports.","think of the proportion of time: development: 2 hours tests & docs: 3 hours review process: 1 week <- publish: 20 seconds","this is good. definitely a step up from the \"review board\" approach","babel-plugin-rot13-everything","completely innocuous poll time! does your employer require sign-off before you can publish open source code written in your own time?","i'm the same, but i do end up writing one-off pure functions, or publishing them to npm (eg: dlv, asyncro, etc)","might be worth checking if preact's standalone string renderer could just be ported? same semantics","templates! php developers are used to things like smarty et al - templates.","i would be curious how small we could build a basic sd + ce dom polyfill.","right, but couldn't the babel plugin handle that extension to parsing?","not in preact :) i'm curious if it'd be possible to kill the {``} via the babel plugin","would preact being 2kb help?","we used to assert on the final dom via preact-jsx-chai and updating deps was a nightmare","hmm - not when you have 30 repos that depend on a ui toolkit that is evolving on its own","i guess my hope would be that it would test composition for components that do composition","a function call yes, but it also has to annotate all the jsx elements so they correlate with the stylesheet","snapshots only really apply to best since they require filesystem access.","i'm a little late to the party, but we have tools for rendering to inert dom & asserting over it. will release them.","i think it's something like that, but maybe only for jsx in the same scope since it's done via babel","might be worth mentioning i'm experimenting with templates + preact","or styled-jsx is simpler than i'm thinking (which is good): it only styles *that* component","just an experiment btw, i generally stick to inline styles or css modules haha","it's just components and inline stylesheets, so yes. point about runtime was that it's not a build + runtime","similar, but no babel plugin and it supports mixing shadow & light doms, and <slot>.","i'm not sure whether to be proud or embarrassed of the simplicity of the css parser i wrote for this. yes, regexes.","thought: shadow dom seems unfair here? it does stuff preact doesn't like css encapsulation","maybe a webpack 2 thing? i donno","just seems like this ain't using webpack -p, makes init take longer.","i'm curious: what's the go-to polyfill for web components right now?","also i don't think either are compiled for prod, seeing mostly webpack module boundaries in flame chart","only real line in the sands for me are approx screen height (~ cognitive load) and length preventing inlining.","i only close once released to npm. should be today!","it's happy to run alongside itself. not optimal for size obviously, but it won't hurt the lib."]